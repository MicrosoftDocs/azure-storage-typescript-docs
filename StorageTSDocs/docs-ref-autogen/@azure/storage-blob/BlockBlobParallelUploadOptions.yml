### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions'
    name: BlockBlobParallelUploadOptions
    fullName: BlockBlobParallelUploadOptions
    children:
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.abortSignal'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.blobHTTPHeaders'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.blockSize'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.concurrency'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.conditions'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.encryptionScope'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.maxSingleShotSize'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.metadata'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.onProgress'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.tags'
      - '@azure/storage-blob.BlockBlobParallelUploadOptions.tracingOptions'
    langs:
      - typeScript
    type: interface
    summary: >-
      Option interface for <xref:BlockBlobClient.uploadFile> and
      <xref:BlockBlobClient.uploadSeekableStream>.
    extends:
      name: '@azure/storage-blob.CommonOptions'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.blobHTTPHeaders'
    name: blobHTTPHeaders
    fullName: blobHTTPHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: Blob HTTP Headers.
    optional: true
    syntax:
      content: 'blobHTTPHeaders?: BlobHTTPHeaders'
      return:
        type:
          - '@azure/storage-blob.BlobHTTPHeaders'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.blockSize'
    name: blockSize
    fullName: blockSize
    children: []
    langs:
      - typeScript
    type: property
    summary: Destination block blob size in bytes.
    optional: true
    syntax:
      content: 'blockSize?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.concurrency'
    name: concurrency
    fullName: concurrency
    children: []
    langs:
      - typeScript
    type: property
    summary: Concurrency of parallel uploading. Must be >= 0.
    optional: true
    syntax:
      content: 'concurrency?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.conditions'
    name: conditions
    fullName: conditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Access conditions headers.
    optional: true
    syntax:
      content: 'conditions?: BlobRequestConditions'
      return:
        type:
          - '@azure/storage-blob.BlobRequestConditions'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.encryptionScope'
    name: encryptionScope
    fullName: encryptionScope
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional. Version 2019-07-07 and later.  Specifies the name of the
      encryption scope to use to

      encrypt the data provided in the request. If not specified, encryption is
      performed with the

      default account encryption scope.  For more information, see Encryption at
      Rest for Azure

      Storage Services.
    optional: true
    syntax:
      content: 'encryptionScope?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.maxSingleShotSize'
    name: maxSingleShotSize
    fullName: maxSingleShotSize
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Blob size threshold in bytes to start concurrency uploading.
      Default value is 256MB, blob size less than this option will
      be uploaded via one I/O operation without concurrency.
      You can customize a value less equal than the default value.
    optional: true
    syntax:
      content: 'maxSingleShotSize?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: Metadata of block blob.
    optional: true
    syntax:
      content: 'metadata?: [key: string]: string'
      return:
        type:
          - '[key: string]: string'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.onProgress'
    name: onProgress
    fullName: onProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Progress updater.
    optional: true
    syntax:
      content: 'onProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.tags'
    name: tags
    fullName: tags
    children: []
    langs:
      - typeScript
    type: property
    summary: Blob tags.
    optional: true
    syntax:
      content: 'tags?: Tags'
      return:
        type:
          - '@azure/storage-blob.Tags'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlockBlobParallelUploadOptions.tracingOptions'
    name: tracingOptions
    fullName: tracingOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options to configure spans created when tracing is enabled.
    optional: true
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        type:
          - OperationTracingOptions
        description: ''
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.CommonOptions'
    name: CommonOptions
    spec.typeScript:
      - name: CommonOptions
        fullName: CommonOptions
        uid: '@azure/storage-blob.CommonOptions'
  - uid: '@azure/storage-blob.BlobHTTPHeaders'
    name: BlobHTTPHeaders
    spec.typeScript:
      - name: BlobHTTPHeaders
        fullName: BlobHTTPHeaders
        uid: '@azure/storage-blob.BlobHTTPHeaders'
  - uid: '@azure/storage-blob.BlobRequestConditions'
    name: BlobRequestConditions
    spec.typeScript:
      - name: BlobRequestConditions
        fullName: BlobRequestConditions
        uid: '@azure/storage-blob.BlobRequestConditions'
  - uid: '@azure/storage-blob.Tags'
    name: Tags
    spec.typeScript:
      - name: Tags
        fullName: Tags
        uid: '@azure/storage-blob.Tags'
