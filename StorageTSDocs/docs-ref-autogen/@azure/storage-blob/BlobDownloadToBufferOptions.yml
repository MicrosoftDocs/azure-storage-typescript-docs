### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.BlobDownloadToBufferOptions'
    name: BlobDownloadToBufferOptions
    fullName: BlobDownloadToBufferOptions
    children:
      - '@azure/storage-blob.BlobDownloadToBufferOptions.abortSignal'
      - '@azure/storage-blob.BlobDownloadToBufferOptions.blockSize'
      - '@azure/storage-blob.BlobDownloadToBufferOptions.concurrency'
      - '@azure/storage-blob.BlobDownloadToBufferOptions.conditions'
      - '@azure/storage-blob.BlobDownloadToBufferOptions.customerProvidedKey'
      - '@azure/storage-blob.BlobDownloadToBufferOptions.maxRetryRequestsPerBlock'
      - '@azure/storage-blob.BlobDownloadToBufferOptions.onProgress'
      - '@azure/storage-blob.BlobDownloadToBufferOptions.tracingOptions'
    langs:
      - typeScript
    type: interface
    summary: 'Option interface for the <xref:BlobClient.downloadToBuffer> operation.'
    extends:
      name: '@azure/storage-blob.CommonOptions'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobDownloadToBufferOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobDownloadToBufferOptions.blockSize'
    name: blockSize
    fullName: blockSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      blockSize is the data every request trying to download.

      Must be >= 0, if set to 0 or undefined, blockSize will automatically
      calculated according

      to the blob size.
    optional: true
    syntax:
      content: 'blockSize?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobDownloadToBufferOptions.concurrency'
    name: concurrency
    fullName: concurrency
    children: []
    langs:
      - typeScript
    type: property
    summary: Concurrency of parallel download.
    optional: true
    syntax:
      content: 'concurrency?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobDownloadToBufferOptions.conditions'
    name: conditions
    fullName: conditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Access conditions headers.
    optional: true
    syntax:
      content: 'conditions?: BlobRequestConditions'
      return:
        type:
          - '@azure/storage-blob.BlobRequestConditions'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobDownloadToBufferOptions.customerProvidedKey'
    name: customerProvidedKey
    fullName: customerProvidedKey
    children: []
    langs:
      - typeScript
    type: property
    summary: Customer Provided Key Info.
    optional: true
    syntax:
      content: 'customerProvidedKey?: CpkInfo'
      return:
        type:
          - '@azure/storage-blob.CpkInfo'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobDownloadToBufferOptions.maxRetryRequestsPerBlock'
    name: maxRetryRequestsPerBlock
    fullName: maxRetryRequestsPerBlock
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Optional. ONLY AVAILABLE IN NODE.JS.

      How many retries will perform when original block download stream
      unexpected ends.

      Above kind of ends will not trigger retry policy defined in a pipeline,

      because they doesn't emit network errors.


      With this option, every additional retry means an additional
      FileClient.download() request will be made

      from the broken point, until the requested block has been successfully
      downloaded or

      maxRetryRequestsPerBlock is reached.


      Default value is 5, please set a larger value when in poor network.
    optional: true
    syntax:
      content: 'maxRetryRequestsPerBlock?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobDownloadToBufferOptions.onProgress'
    name: onProgress
    fullName: onProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Progress updater.
    optional: true
    syntax:
      content: 'onProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobDownloadToBufferOptions.tracingOptions'
    name: tracingOptions
    fullName: tracingOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options to configure spans created when tracing is enabled.
    optional: true
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        type:
          - OperationTracingOptions
        description: ''
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.CommonOptions'
    name: CommonOptions
    spec.typeScript:
      - name: CommonOptions
        fullName: CommonOptions
        uid: '@azure/storage-blob.CommonOptions'
  - uid: '@azure/storage-blob.BlobRequestConditions'
    name: BlobRequestConditions
    spec.typeScript:
      - name: BlobRequestConditions
        fullName: BlobRequestConditions
        uid: '@azure/storage-blob.BlobRequestConditions'
  - uid: '@azure/storage-blob.CpkInfo'
    name: CpkInfo
    spec.typeScript:
      - name: CpkInfo
        fullName: CpkInfo
        uid: '@azure/storage-blob.CpkInfo'
