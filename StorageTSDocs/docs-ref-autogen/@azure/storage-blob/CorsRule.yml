### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.CorsRule'
    name: CorsRule
    fullName: CorsRule
    children:
      - '@azure/storage-blob.CorsRule.allowedHeaders'
      - '@azure/storage-blob.CorsRule.allowedMethods'
      - '@azure/storage-blob.CorsRule.allowedOrigins'
      - '@azure/storage-blob.CorsRule.exposedHeaders'
      - '@azure/storage-blob.CorsRule.maxAgeInSeconds'
    langs:
      - typeScript
    type: interface
    summary: >-
      CORS is an HTTP feature that enables a web application running under one
      domain to access

      resources in another domain. Web browsers implement a security restriction
      known as same-origin

      policy that prevents a web page from calling APIs in a different domain;
      CORS provides a secure

      way to allow one domain (the origin domain) to call APIs in another domain
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.CorsRule.allowedHeaders'
    name: allowedHeaders
    fullName: allowedHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      the request headers that the origin domain may specify on the CORS
      request.
    syntax:
      content: 'allowedHeaders: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.CorsRule.allowedMethods'
    name: allowedMethods
    fullName: allowedMethods
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The methods (HTTP request verbs) that the origin domain may use for a CORS
      request. (comma

      separated)
    syntax:
      content: 'allowedMethods: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.CorsRule.allowedOrigins'
    name: allowedOrigins
    fullName: allowedOrigins
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The origin domains that are permitted to make a request against the
      storage service via CORS.

      The origin domain is the domain from which the request originates. Note
      that the origin must

      be an exact case-sensitive match with the origin that the user age sends
      to the service. You

      can also use the wildcard character '*' to allow all origin domains to
      make requests via CORS.
    syntax:
      content: 'allowedOrigins: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.CorsRule.exposedHeaders'
    name: exposedHeaders
    fullName: exposedHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The response headers that may be sent in the response to the CORS request
      and exposed by the

      browser to the request issuer
    syntax:
      content: 'exposedHeaders: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.CorsRule.maxAgeInSeconds'
    name: maxAgeInSeconds
    fullName: maxAgeInSeconds
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The maximum amount time that a browser should cache the preflight OPTIONS
      request.
    syntax:
      content: 'maxAgeInSeconds: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
