### YamlMime:TSType
name: BlobBatch
uid: '@azure/storage-blob.BlobBatch'
package: '@azure/storage-blob'
summary: |-
  A BlobBatch represents an aggregated set of operations on blobs.
  Currently, only `delete` and `setAccessTier` are supported.
fullName: BlobBatch
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: BlobBatch()
    uid: '@azure/storage-blob.BlobBatch.constructor'
    package: '@azure/storage-blob'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: new BlobBatch()
methods:
  - name: 'deleteBlob(BlobClient, BlobDeleteOptions)'
    uid: '@azure/storage-blob.BlobBatch.deleteBlob_1'
    package: '@azure/storage-blob'
    summary: >
      The deleteBlob operation marks the specified blob or snapshot for
      deletion.

      The blob is later deleted during garbage collection.

      Only one kind of operation is allowed per batch request.

      Note that in order to delete a blob, you must delete all of its snapshots.

      You can delete both at the same time. See [delete operation
      details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).

      The operation will be authenticated and authorized with specified
      credential.

      See [blob batch authorization
      details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteBlob(blobClient: BlobClient, options?: BlobDeleteOptions)'
      parameters:
        - id: blobClient
          type: <xref uid="@azure/storage-blob.BlobClient" />
          description: The BlobClient.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDeleteOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      deleteBlob(string, StorageSharedKeyCredential | AnonymousCredential |
      TokenCredential, BlobDeleteOptions)
    uid: '@azure/storage-blob.BlobBatch.deleteBlob'
    package: '@azure/storage-blob'
    summary: >
      The deleteBlob operation marks the specified blob or snapshot for
      deletion.

      The blob is later deleted during garbage collection.

      Only one kind of operation is allowed per batch request.

      Note that in order to delete a blob, you must delete all of its snapshots.

      You can delete both at the same time. See [delete operation
      details](https://docs.microsoft.com/en-us/rest/api/storageservices/delete-blob).

      The operation will be authenticated and authorized with specified
      credential.

      See [blob batch authorization
      details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteBlob(url: string, credential: StorageSharedKeyCredential
        | AnonymousCredential | TokenCredential, options?: BlobDeleteOptions)
      parameters:
        - id: url
          type: string
          description: The url of the blob resource to delete.
        - id: credential
          type: >-
            <xref uid="@azure/storage-blob.StorageSharedKeyCredential" /> |
            <xref uid="@azure/storage-blob.AnonymousCredential" /> |
            TokenCredential
          description: >-
            Such as AnonymousCredential, StorageSharedKeyCredential or any
            credential from the @azure/identity package to authenticate requests
            to the service. You can also provide an object that implements the
            TokenCredential interface. If not specified, AnonymousCredential is
            used.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDeleteOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: getHttpRequestBody()
    uid: '@azure/storage-blob.BlobBatch.getHttpRequestBody'
    package: '@azure/storage-blob'
    summary: Get assembled HTTP request body for sub requests.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getHttpRequestBody()
      return:
        type: string
        description: ''
  - name: getMultiPartContentType()
    uid: '@azure/storage-blob.BlobBatch.getMultiPartContentType'
    package: '@azure/storage-blob'
    summary: >-
      Get the value of Content-Type for a batch request.

      The value must be multipart/mixed with a batch boundary.

      Example: multipart/mixed;
      boundary=batch_a81786c8-e301-4e42-a729-a32ca24ae252
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getMultiPartContentType()
      return:
        type: string
        description: ''
  - name: getSubRequests()
    uid: '@azure/storage-blob.BlobBatch.getSubRequests'
    package: '@azure/storage-blob'
    summary: Get sub requests that are added into the batch request.
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getSubRequests()
      return:
        type: 'Map&lt;number, <xref uid="@azure/storage-blob.BatchSubRequest" />&gt;'
        description: ''
  - name: 'setBlobAccessTier(BlobClient, AccessTier, BlobSetTierOptions)'
    uid: '@azure/storage-blob.BlobBatch.setBlobAccessTier_1'
    package: '@azure/storage-blob'
    summary: >
      The setBlobAccessTier operation sets the tier on a blob.

      The operation is allowed on block blobs in a blob storage or general
      purpose v2 account.

      Only one kind of operation is allowed per batch request.

      A block blob's tier determines Hot/Cool/Archive storage type.

      This operation does not update the blob's ETag.

      For detailed information about block blob level tiering

      see [hot, cool, and archive access
      tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).

      The operation will be authenticated and authorized

      with specified credential. See [blob batch authorization
      details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setBlobAccessTier(blobClient: BlobClient, tier: AccessTier,
        options?: BlobSetTierOptions)
      parameters:
        - id: blobClient
          type: <xref uid="@azure/storage-blob.BlobClient" />
          description: The BlobClient.
        - id: tier
          type: <xref uid="@azure/storage-blob.AccessTier" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSetTierOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
  - name: >-
      setBlobAccessTier(string, StorageSharedKeyCredential | AnonymousCredential
      | TokenCredential, AccessTier, BlobSetTierOptions)
    uid: '@azure/storage-blob.BlobBatch.setBlobAccessTier'
    package: '@azure/storage-blob'
    summary: >
      The setBlobAccessTier operation sets the tier on a blob.

      The operation is allowed on block blobs in a blob storage or general
      purpose v2 account.

      Only one kind of operation is allowed per batch request.

      A block blob's tier determines Hot/Cool/Archive storage type.

      This operation does not update the blob's ETag.

      For detailed information about block blob level tiering

      see [hot, cool, and archive access
      tiers](https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-storage-tiers).

      The operation will be authenticated and authorized

      with specified credential. See [blob batch authorization
      details](https://docs.microsoft.com/en-us/rest/api/storageservices/blob-batch#authorization).
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setBlobAccessTier(url: string, credential:
        StorageSharedKeyCredential | AnonymousCredential | TokenCredential,
        tier: AccessTier, options?: BlobSetTierOptions)
      parameters:
        - id: url
          type: string
          description: The url of the blob resource to delete.
        - id: credential
          type: >-
            <xref uid="@azure/storage-blob.StorageSharedKeyCredential" /> |
            <xref uid="@azure/storage-blob.AnonymousCredential" /> |
            TokenCredential
          description: >-
            Such as AnonymousCredential, StorageSharedKeyCredential or any
            credential from the @azure/identity package to authenticate requests
            to the service. You can also provide an object that implements the
            TokenCredential interface. If not specified, AnonymousCredential is
            used.
        - id: tier
          type: <xref uid="@azure/storage-blob.AccessTier" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSetTierOptions" />
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
