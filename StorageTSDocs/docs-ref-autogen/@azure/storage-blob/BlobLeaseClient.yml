### YamlMime:TSType
name: BlobLeaseClient
uid: '@azure/storage-blob.BlobLeaseClient'
package: '@azure/storage-blob'
summary: >-
  A client that manages leases for a <xref:ContainerClient> or a
  <xref:BlobClient>.
fullName: BlobLeaseClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'BlobLeaseClient(ContainerClient | BlobClient, string)'
    uid: '@azure/storage-blob.BlobLeaseClient.constructor'
    package: '@azure/storage-blob'
    summary: Creates an instance of BlobLeaseClient.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new BlobLeaseClient(client: ContainerClient | BlobClient, leaseId?:
        string)
      parameters:
        - id: client
          type: >-
            <xref uid="@azure/storage-blob.ContainerClient" /> | <xref
            uid="@azure/storage-blob.BlobClient" />
          description: The client to make the lease operation requests.
        - id: leaseId
          type: string
          description: Initial proposed lease id.
properties:
  - name: leaseId
    uid: '@azure/storage-blob.BlobLeaseClient.leaseId'
    package: '@azure/storage-blob'
    summary: Gets the lease Id.
    fullName: leaseId
    isPreview: false
    isDeprecated: false
    syntax:
      content: string leaseId
      return:
        type: string
        description: ''
  - name: url
    uid: '@azure/storage-blob.BlobLeaseClient.url'
    package: '@azure/storage-blob'
    summary: Gets the url.
    fullName: url
    isPreview: false
    isDeprecated: false
    syntax:
      content: string url
      return:
        type: string
        description: ''
methods:
  - name: 'acquireLease(number, LeaseOperationOptions)'
    uid: '@azure/storage-blob.BlobLeaseClient.acquireLease'
    package: '@azure/storage-blob'
    summary: >-
      Establishes and manages a lock on a container for delete operations, or on
      a blob

      for write and delete operations.

      The lock duration can be 15 to 60 seconds, or can be infinite.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function acquireLease(duration: number, options?: LeaseOperationOptions)'
      parameters:
        - id: duration
          type: number
          description: 'Must be between 15 to 60 seconds, or infinite (-1)'
        - id: options
          type: <xref uid="@azure/storage-blob.LeaseOperationOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.LeaseOperationResponse"
          />&gt;
        description: Response data for acquire lease operation.
  - name: 'breakLease(number, LeaseOperationOptions)'
    uid: '@azure/storage-blob.BlobLeaseClient.breakLease'
    package: '@azure/storage-blob'
    summary: |-
      To end the lease but ensure that another client cannot acquire a new lease
      until the current lease period has expired.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function breakLease(breakPeriod: number, options?:
        LeaseOperationOptions)
      parameters:
        - id: breakPeriod
          type: number
          description: Break period
        - id: options
          type: <xref uid="@azure/storage-blob.LeaseOperationOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.LeaseOperationResponse"
          />&gt;
        description: Response data for break lease operation.
  - name: 'changeLease(string, LeaseOperationOptions)'
    uid: '@azure/storage-blob.BlobLeaseClient.changeLease'
    package: '@azure/storage-blob'
    summary: To change the ID of the lease.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function changeLease(proposedLeaseId: string, options?:
        LeaseOperationOptions)
      parameters:
        - id: proposedLeaseId
          type: string
          description: the proposed new lease Id.
        - id: options
          type: <xref uid="@azure/storage-blob.LeaseOperationOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.LeaseOperationResponse"
          />&gt;
        description: Response data for change lease operation.
  - name: releaseLease(LeaseOperationOptions)
    uid: '@azure/storage-blob.BlobLeaseClient.releaseLease'
    package: '@azure/storage-blob'
    summary: |-
      To free the lease if it is no longer needed so that another client may
      immediately acquire a lease against the container or the blob.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function releaseLease(options?: LeaseOperationOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.LeaseOperationOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.LeaseOperationResponse"
          />&gt;
        description: Response data for release lease operation.
  - name: renewLease(LeaseOperationOptions)
    uid: '@azure/storage-blob.BlobLeaseClient.renewLease'
    package: '@azure/storage-blob'
    summary: To renew the lease.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function renewLease(options?: LeaseOperationOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.LeaseOperationOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/storage-blob.Lease" />&gt;
        description: Response data for renew lease operation.
