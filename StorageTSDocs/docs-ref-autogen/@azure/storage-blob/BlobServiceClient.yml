### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.BlobServiceClient'
    name: BlobServiceClient
    fullName: BlobServiceClient
    children:
      - '@azure/storage-blob.BlobServiceClient.accountName'
      - '@azure/storage-blob.BlobServiceClient.constructor_1'
      - '@azure/storage-blob.BlobServiceClient.constructor'
      - '@azure/storage-blob.BlobServiceClient.createContainer'
      - '@azure/storage-blob.BlobServiceClient.credential'
      - '@azure/storage-blob.BlobServiceClient.deleteContainer'
      - '@azure/storage-blob.BlobServiceClient.findBlobsByTags'
      - '@azure/storage-blob.BlobServiceClient.fromConnectionString'
      - '@azure/storage-blob.BlobServiceClient.getAccountInfo'
      - '@azure/storage-blob.BlobServiceClient.getBlobBatchClient'
      - '@azure/storage-blob.BlobServiceClient.getContainerClient'
      - '@azure/storage-blob.BlobServiceClient.getProperties'
      - '@azure/storage-blob.BlobServiceClient.getStatistics'
      - '@azure/storage-blob.BlobServiceClient.getUserDelegationKey'
      - '@azure/storage-blob.BlobServiceClient.listContainers'
      - '@azure/storage-blob.BlobServiceClient.setProperties'
      - '@azure/storage-blob.BlobServiceClient.url'
    langs:
      - typeScript
    type: class
    summary: >-
      A BlobServiceClient represents a Client to the Azure Storage Blob service
      allowing you

      to manipulate blob containers.
    extends:
      name: '@azure/storage-blob.StorageClient'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.accountName'
    name: accountName
    fullName: accountName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'accountName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.constructor_1'
    name: 'BlobServiceClient(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of BlobServiceClient.
    syntax:
      content: 'new BlobServiceClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A Client string pointing to Azure Storage blob service, such as
                                "https://myaccount.blob.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.blob.core.windows.net?sasString".
        - id: pipeline
          type:
            - '@azure/storage-blob.Pipeline'
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.constructor'
    name: >-
      BlobServiceClient(string, StorageSharedKeyCredential | AnonymousCredential
      | TokenCredential, StoragePipelineOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of BlobServiceClient.
    syntax:
      content: >-
        new BlobServiceClient(url: string, credential?:
        StorageSharedKeyCredential | AnonymousCredential | TokenCredential,
        options?: StoragePipelineOptions)
      parameters:
        - id: url
          type:
            - string
          description: |-
            A Client string pointing to Azure Storage blob service, such as
                                "https://myaccount.blob.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.blob.core.windows.net?sasString".
        - id: credential
          type:
            - >-
              @azure/storage-blob.StorageSharedKeyCredential |
              @azure/storage-blob.AnonymousCredential | TokenCredential
          description: >-
            Such as AnonymousCredential, StorageSharedKeyCredential or any
            credential from the @azure/identity package to authenticate requests
            to the service. You can also provide an object that implements the
            TokenCredential interface. If not specified, AnonymousCredential is
            used.
          optional: true
        - id: options
          type:
            - '@azure/storage-blob.StoragePipelineOptions'
          description: ''
          optional: true
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.createContainer'
    name: 'createContainer(string, ContainerCreateOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Create a Blob container.
    syntax:
      content: >-
        function createContainer(containerName: string, options?:
        ContainerCreateOptions)
      parameters:
        - id: containerName
          type:
            - string
          description: Name of the container to create.
        - id: options
          type:
            - '@azure/storage-blob.ContainerCreateOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Object>
        description: '>} Container creation response and the corresponding container client.'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.credential'
    name: credential
    fullName: credential
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Such as AnonymousCredential, StorageSharedKeyCredential or any credential
      from the @azure/identity package to authenticate requests to the service.
      You can also provide an object that implements the TokenCredential
      interface. If not specified, AnonymousCredential is used.
    syntax:
      content: >-
        credential: StorageSharedKeyCredential | AnonymousCredential |
        TokenCredential
      return:
        type:
          - >-
            @azure/storage-blob.StorageSharedKeyCredential |
            @azure/storage-blob.AnonymousCredential | TokenCredential
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.deleteContainer'
    name: 'deleteContainer(string, ContainerDeleteMethodOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a Blob container.
    syntax:
      content: >-
        function deleteContainer(containerName: string, options?:
        ContainerDeleteMethodOptions)
      parameters:
        - id: containerName
          type:
            - string
          description: Name of the container to delete.
        - id: options
          type:
            - '@azure/storage-blob.ContainerDeleteMethodOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.ContainerDeleteResponse>
        description: Container deletion response.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.findBlobsByTags'
    name: 'findBlobsByTags(string, ServiceFindBlobByTagsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Returns an async iterable iterator to find all blobs with specified tag
      under the specified account.
      .byPage() returns an async iterable iterator to list the blobs in pages.
    syntax:
      content: >-
        function findBlobsByTags(tagFilterSqlExpression: string, options?:
        ServiceFindBlobByTagsOptions)
      parameters:
        - id: tagFilterSqlExpression
          type:
            - string
          description: >-
            The where parameter enables the caller to query blobs whose tags
            match a given expression.
                                                    The given expression must evaluate to true for a blob to be returned in the results.
                                                    The[OData - ABNF] filter syntax rule defines the formal grammar for the value of the where query parameter;
                                                    however, only a subset of the OData filter syntax is supported in the Blob service.
        - id: options
          type:
            - '@azure/storage-blob.ServiceFindBlobByTagsOptions'
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/storage-blob.FilterBlobItem,
            @azure/storage-blob.ServiceFindBlobsByTagsSegmentResponse>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.fromConnectionString'
    name: 'fromConnectionString(string, StoragePipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an instance of BlobServiceClient from connection string.
    syntax:
      content: >-
        static function fromConnectionString(connectionString: string, options?:
        StoragePipelineOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: options
          type:
            - '@azure/storage-blob.StoragePipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/storage-blob.BlobServiceClient'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getAccountInfo'
    name: getAccountInfo(ServiceGetAccountInfoOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Get Account Information operation returns the sku name and account
      kind

      for the specified account.

      The Get Account Information operation is available on service versions
      beginning

      with version 2018-03-28.
    syntax:
      content: 'function getAccountInfo(options?: ServiceGetAccountInfoOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.ServiceGetAccountInfoOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.ServiceGetAccountInfoResponse>
        description: Response data for the Service Get Account Info operation.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getBlobBatchClient'
    name: getBlobBatchClient()
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a BlobBatchClient object to conduct batch operations.
    syntax:
      content: function getBlobBatchClient()
      parameters: []
      return:
        type:
          - '@azure/storage-blob.BlobBatchClient'
        description: A new BlobBatchClient object for this service.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getContainerClient'
    name: getContainerClient(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a <xref:ContainerClient> object'
    syntax:
      content: 'function getContainerClient(containerName: string)'
      parameters:
        - id: containerName
          type:
            - string
          description: A container name
      return:
        type:
          - '@azure/storage-blob.ContainerClient'
        description: A new ContainerClient object for the given container name.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getProperties'
    name: getProperties(ServiceGetPropertiesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the properties of a storage account’s Blob service, including
      properties

      for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
    syntax:
      content: 'function getProperties(options?: ServiceGetPropertiesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.ServiceGetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.ServiceGetPropertiesResponse>
        description: Response data for the Service Get Properties operation.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getStatistics'
    name: getStatistics(ServiceGetStatisticsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves statistics related to replication for the Blob service. It is
      only

      available on the secondary location endpoint when read-access
      geo-redundant

      replication is enabled for the storage account.
    syntax:
      content: 'function getStatistics(options?: ServiceGetStatisticsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.ServiceGetStatisticsOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.ServiceGetStatisticsResponse>
        description: Response data for the Service Get Statistics operation.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.getUserDelegationKey'
    name: 'getUserDelegationKey(Date, Date, ServiceGetUserDelegationKeyOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).

      Retrieves a user delegation key for the Blob service. This is only a valid
      operation when using

      bearer token authentication.
    syntax:
      content: >-
        function getUserDelegationKey(startsOn: Date, expiresOn: Date, options?:
        ServiceGetUserDelegationKeyOptions)
      parameters:
        - id: startsOn
          type:
            - Date
          description: >-
            The start time for the user delegation SAS. Must be within 7 days of
            the current time
        - id: expiresOn
          type:
            - Date
          description: >-
            The end time for the user delegation SAS. Must be within 7 days of
            the current time
        - id: options
          type:
            - '@azure/storage-blob.ServiceGetUserDelegationKeyOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.ServiceGetUserDelegationKeyResponse>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.listContainers'
    name: listContainers(ServiceListContainersOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns an async iterable iterator to list all the containers

      under the specified account.

      .byPage() returns an async iterable iterator to list the containers in
      pages.


      Example using `for await` syntax:


      ```js

      let i = 1;

      for await (const container of blobServiceClient.listContainers()) {
        console.log(`Container ${i++}: ${container.name}`);
      }

      ```


      Example using `iter.next()`:


      ```js

      let i = 1;

      const iter = blobServiceClient.listContainers();

      let containerItem = await iter.next();

      while (!containerItem.done) {
        console.log(`Container ${i++}: ${containerItem.value.name}`);
        containerItem = await iter.next();
      }

      ```


      Example using `byPage()`:


      ```js

      // passing optional maxPageSize in the page settings

      let i = 1;

      for await (const response of blobServiceClient.listContainers().byPage({
      maxPageSize: 20 })) {
        if (response.containerItems) {
          for (const container of response.containerItems) {
            console.log(`Container ${i++}: ${container.name}`);
          }
        }
      }

      ```


      Example using paging with a marker:


      ```js

      let i = 1;

      let iterator = blobServiceClient.listContainers().byPage({ maxPageSize: 2
      });

      let response = (await iterator.next()).value;


      // Prints 2 container names

      if (response.containerItems) {
        for (const container of response.containerItems) {
          console.log(`Container ${i++}: ${container.name}`);
        }
      }


      // Gets next marker

      let marker = response.continuationToken;

      // Passing next marker as continuationToken

      iterator = blobServiceClient
        .listContainers()
        .byPage({ continuationToken: marker, maxPageSize: 10 });
      response = (await iterator.next()).value;


      // Prints 10 container names

      if (response.containerItems) {
        for (const container of response.containerItems) {
           console.log(`Container ${i++}: ${container.name}`);
        }
      }

      ```
    syntax:
      content: 'function listContainers(options?: ServiceListContainersOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-blob.ServiceListContainersOptions'
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/storage-blob.ContainerItem,
            @azure/storage-blob.ServiceListContainersSegmentResponse>
        description: An asyncIterableIterator that supports paging.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.setProperties'
    name: 'setProperties(BlobServiceProperties, ServiceSetPropertiesOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets properties for a storage account’s Blob service endpoint, including
      properties

      for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft
      delete settings.
    syntax:
      content: >-
        function setProperties(properties: BlobServiceProperties, options?:
        ServiceSetPropertiesOptions)
      parameters:
        - id: properties
          type:
            - '@azure/storage-blob.BlobServiceProperties'
          description: ''
        - id: options
          type:
            - '@azure/storage-blob.ServiceSetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.ServiceSetPropertiesResponse>
        description: Response data for the Service Set Properties operation.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.BlobServiceClient.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: Encoded URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.StorageClient'
    name: StorageClient
    spec.typeScript:
      - name: StorageClient
        fullName: StorageClient
        uid: '@azure/storage-blob.StorageClient'
  - uid: >-
      @azure/storage-blob.StorageSharedKeyCredential |
      @azure/storage-blob.AnonymousCredential | TokenCredential
    name: AnonymousCredential | TokenCredential
    spec.typeScript:
      - name: StorageSharedKeyCredential
        fullName: StorageSharedKeyCredential
        uid: '@azure/storage-blob.StorageSharedKeyCredential'
      - name: ' | '
        fullName: ' | '
      - name: AnonymousCredential
        fullName: AnonymousCredential
        uid: '@azure/storage-blob.AnonymousCredential'
      - name: ' | TokenCredential'
        fullName: ' | TokenCredential'
  - uid: '@azure/storage-blob.StoragePipelineOptions'
    name: StoragePipelineOptions
    spec.typeScript:
      - name: StoragePipelineOptions
        fullName: StoragePipelineOptions
        uid: '@azure/storage-blob.StoragePipelineOptions'
  - uid: '@azure/storage-blob.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-blob.Pipeline'
  - uid: '@azure/storage-blob.ContainerCreateOptions'
    name: ContainerCreateOptions
    spec.typeScript:
      - name: ContainerCreateOptions
        fullName: ContainerCreateOptions
        uid: '@azure/storage-blob.ContainerCreateOptions'
  - uid: '@azure/storage-blob.ContainerDeleteMethodOptions'
    name: ContainerDeleteMethodOptions
    spec.typeScript:
      - name: ContainerDeleteMethodOptions
        fullName: ContainerDeleteMethodOptions
        uid: '@azure/storage-blob.ContainerDeleteMethodOptions'
  - uid: Promise<@azure/storage-blob.ContainerDeleteResponse>
    name: ContainerDeleteResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ContainerDeleteResponse
        fullName: ContainerDeleteResponse
        uid: '@azure/storage-blob.ContainerDeleteResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.ServiceFindBlobByTagsOptions'
    name: ServiceFindBlobByTagsOptions
    spec.typeScript:
      - name: ServiceFindBlobByTagsOptions
        fullName: ServiceFindBlobByTagsOptions
        uid: '@azure/storage-blob.ServiceFindBlobByTagsOptions'
  - uid: >-
      PagedAsyncIterableIterator<@azure/storage-blob.FilterBlobItem,
      @azure/storage-blob.ServiceFindBlobsByTagsSegmentResponse>
    name: ServiceFindBlobsByTagsSegmentResponse>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: FilterBlobItem
        fullName: FilterBlobItem
        uid: '@azure/storage-blob.FilterBlobItem'
      - name: ', '
        fullName: ', '
      - name: ServiceFindBlobsByTagsSegmentResponse
        fullName: ServiceFindBlobsByTagsSegmentResponse
        uid: '@azure/storage-blob.ServiceFindBlobsByTagsSegmentResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.ServiceGetAccountInfoOptions'
    name: ServiceGetAccountInfoOptions
    spec.typeScript:
      - name: ServiceGetAccountInfoOptions
        fullName: ServiceGetAccountInfoOptions
        uid: '@azure/storage-blob.ServiceGetAccountInfoOptions'
  - uid: Promise<@azure/storage-blob.ServiceGetAccountInfoResponse>
    name: ServiceGetAccountInfoResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceGetAccountInfoResponse
        fullName: ServiceGetAccountInfoResponse
        uid: '@azure/storage-blob.ServiceGetAccountInfoResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.BlobBatchClient'
    name: BlobBatchClient
    spec.typeScript:
      - name: BlobBatchClient
        fullName: BlobBatchClient
        uid: '@azure/storage-blob.BlobBatchClient'
  - uid: '@azure/storage-blob.ContainerClient'
    name: ContainerClient
    spec.typeScript:
      - name: ContainerClient
        fullName: ContainerClient
        uid: '@azure/storage-blob.ContainerClient'
  - uid: '@azure/storage-blob.ServiceGetPropertiesOptions'
    name: ServiceGetPropertiesOptions
    spec.typeScript:
      - name: ServiceGetPropertiesOptions
        fullName: ServiceGetPropertiesOptions
        uid: '@azure/storage-blob.ServiceGetPropertiesOptions'
  - uid: Promise<@azure/storage-blob.ServiceGetPropertiesResponse>
    name: ServiceGetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceGetPropertiesResponse
        fullName: ServiceGetPropertiesResponse
        uid: '@azure/storage-blob.ServiceGetPropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.ServiceGetStatisticsOptions'
    name: ServiceGetStatisticsOptions
    spec.typeScript:
      - name: ServiceGetStatisticsOptions
        fullName: ServiceGetStatisticsOptions
        uid: '@azure/storage-blob.ServiceGetStatisticsOptions'
  - uid: Promise<@azure/storage-blob.ServiceGetStatisticsResponse>
    name: ServiceGetStatisticsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceGetStatisticsResponse
        fullName: ServiceGetStatisticsResponse
        uid: '@azure/storage-blob.ServiceGetStatisticsResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.ServiceGetUserDelegationKeyOptions'
    name: ServiceGetUserDelegationKeyOptions
    spec.typeScript:
      - name: ServiceGetUserDelegationKeyOptions
        fullName: ServiceGetUserDelegationKeyOptions
        uid: '@azure/storage-blob.ServiceGetUserDelegationKeyOptions'
  - uid: Promise<@azure/storage-blob.ServiceGetUserDelegationKeyResponse>
    name: ServiceGetUserDelegationKeyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceGetUserDelegationKeyResponse
        fullName: ServiceGetUserDelegationKeyResponse
        uid: '@azure/storage-blob.ServiceGetUserDelegationKeyResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.ServiceListContainersOptions'
    name: ServiceListContainersOptions
    spec.typeScript:
      - name: ServiceListContainersOptions
        fullName: ServiceListContainersOptions
        uid: '@azure/storage-blob.ServiceListContainersOptions'
  - uid: >-
      PagedAsyncIterableIterator<@azure/storage-blob.ContainerItem,
      @azure/storage-blob.ServiceListContainersSegmentResponse>
    name: ServiceListContainersSegmentResponse>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: ContainerItem
        fullName: ContainerItem
        uid: '@azure/storage-blob.ContainerItem'
      - name: ', '
        fullName: ', '
      - name: ServiceListContainersSegmentResponse
        fullName: ServiceListContainersSegmentResponse
        uid: '@azure/storage-blob.ServiceListContainersSegmentResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.BlobServiceProperties'
    name: BlobServiceProperties
    spec.typeScript:
      - name: BlobServiceProperties
        fullName: BlobServiceProperties
        uid: '@azure/storage-blob.BlobServiceProperties'
  - uid: '@azure/storage-blob.ServiceSetPropertiesOptions'
    name: ServiceSetPropertiesOptions
    spec.typeScript:
      - name: ServiceSetPropertiesOptions
        fullName: ServiceSetPropertiesOptions
        uid: '@azure/storage-blob.ServiceSetPropertiesOptions'
  - uid: Promise<@azure/storage-blob.ServiceSetPropertiesResponse>
    name: ServiceSetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceSetPropertiesResponse
        fullName: ServiceSetPropertiesResponse
        uid: '@azure/storage-blob.ServiceSetPropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.BlobServiceClient'
    name: BlobServiceClient
    spec.typeScript:
      - name: BlobServiceClient
        fullName: BlobServiceClient
        uid: '@azure/storage-blob.BlobServiceClient'
