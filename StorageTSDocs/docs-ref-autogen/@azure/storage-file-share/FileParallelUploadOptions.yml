### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-share.FileParallelUploadOptions'
    name: FileParallelUploadOptions
    fullName: FileParallelUploadOptions
    children:
      - '@azure/storage-file-share.FileParallelUploadOptions.abortSignal'
      - '@azure/storage-file-share.FileParallelUploadOptions.concurrency'
      - '@azure/storage-file-share.FileParallelUploadOptions.fileHttpHeaders'
      - >-
        @azure/storage-file-share.FileParallelUploadOptions.leaseAccessConditions
      - '@azure/storage-file-share.FileParallelUploadOptions.metadata'
      - '@azure/storage-file-share.FileParallelUploadOptions.onProgress'
      - '@azure/storage-file-share.FileParallelUploadOptions.rangeSize'
      - '@azure/storage-file-share.FileParallelUploadOptions.tracingOptions'
    langs:
      - typeScript
    type: interface
    summary: |
      Option interface for File - Upload operations
      See:
      - <xref:ShareFileClient.uploadFile>
      - <xref:ShareFileClient.uploadSeekableStream>
    extends:
      name: '@azure/storage-file-share.CommonOptions'
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileParallelUploadOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileParallelUploadOptions.concurrency'
    name: concurrency
    fullName: concurrency
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Concurrency indicates the maximum number of ranges to upload in parallel.
      If not provided, 5 concurrency will be used by default.
    optional: true
    syntax:
      content: 'concurrency?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileParallelUploadOptions.fileHttpHeaders'
    name: fileHttpHeaders
    fullName: fileHttpHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: File HTTP Headers.
    optional: true
    syntax:
      content: 'fileHttpHeaders?: FileHttpHeaders'
      return:
        type:
          - '@azure/storage-file-share.FileHttpHeaders'
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileParallelUploadOptions.leaseAccessConditions'
    name: leaseAccessConditions
    fullName: leaseAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Lease access conditions.
    optional: true
    syntax:
      content: 'leaseAccessConditions?: LeaseAccessConditions'
      return:
        type:
          - '@azure/storage-file-share.LeaseAccessConditions'
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileParallelUploadOptions.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: Metadata of an Azure file.
    optional: true
    syntax:
      content: 'metadata?: Metadata'
      return:
        type:
          - '@azure/storage-file-share.Metadata'
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileParallelUploadOptions.onProgress'
    name: onProgress
    fullName: onProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Progress updater.
    optional: true
    syntax:
      content: 'onProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileParallelUploadOptions.rangeSize'
    name: rangeSize
    fullName: rangeSize
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      RangeSize specifies the range size to use in each parallel upload,
      the default (and maximum size) is FILE_RANGE_MAX_SIZE_BYTES.
    optional: true
    syntax:
      content: 'rangeSize?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileParallelUploadOptions.tracingOptions'
    name: tracingOptions
    fullName: tracingOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        type:
          - OperationTracingOptions
        description: ''
    package: '@azure/storage-file-share'
references:
  - uid: '@azure/storage-file-share.CommonOptions'
    name: CommonOptions
    spec.typeScript:
      - name: CommonOptions
        fullName: CommonOptions
        uid: '@azure/storage-file-share.CommonOptions'
  - uid: '@azure/storage-file-share.FileHttpHeaders'
    name: FileHttpHeaders
    spec.typeScript:
      - name: FileHttpHeaders
        fullName: FileHttpHeaders
        uid: '@azure/storage-file-share.FileHttpHeaders'
  - uid: '@azure/storage-file-share.LeaseAccessConditions'
    name: LeaseAccessConditions
    spec.typeScript:
      - name: LeaseAccessConditions
        fullName: LeaseAccessConditions
        uid: '@azure/storage-file-share.LeaseAccessConditions'
  - uid: '@azure/storage-file-share.Metadata'
    name: Metadata
    spec.typeScript:
      - name: Metadata
        fullName: Metadata
        uid: '@azure/storage-file-share.Metadata'
