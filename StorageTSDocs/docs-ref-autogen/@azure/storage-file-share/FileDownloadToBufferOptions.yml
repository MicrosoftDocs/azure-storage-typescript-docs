### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-share.FileDownloadToBufferOptions'
    name: FileDownloadToBufferOptions
    fullName: FileDownloadToBufferOptions
    children:
      - '@azure/storage-file-share.FileDownloadToBufferOptions.abortSignal'
      - '@azure/storage-file-share.FileDownloadToBufferOptions.concurrency'
      - >-
        @azure/storage-file-share.FileDownloadToBufferOptions.leaseAccessConditions
      - >-
        @azure/storage-file-share.FileDownloadToBufferOptions.maxRetryRequestsPerRange
      - '@azure/storage-file-share.FileDownloadToBufferOptions.onProgress'
      - '@azure/storage-file-share.FileDownloadToBufferOptions.rangeSize'
      - '@azure/storage-file-share.FileDownloadToBufferOptions.tracingOptions'
    langs:
      - typeScript
    type: interface
    summary: >-
      Option interface for the <xref:ShareFileClient.downloadToBuffer>
      operation.
    extends:
      name: '@azure/storage-file-share.CommonOptions'
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileDownloadToBufferOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileDownloadToBufferOptions.concurrency'
    name: concurrency
    fullName: concurrency
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Concurrency indicates the maximum number of ranges to download in
      parallel.

      If not provided, 5 concurrency will be used by default.
    optional: true
    syntax:
      content: 'concurrency?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-share'
  - uid: >-
      @azure/storage-file-share.FileDownloadToBufferOptions.leaseAccessConditions
    name: leaseAccessConditions
    fullName: leaseAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Lease access conditions.
    optional: true
    syntax:
      content: 'leaseAccessConditions?: LeaseAccessConditions'
      return:
        type:
          - '@azure/storage-file-share.LeaseAccessConditions'
        description: ''
    package: '@azure/storage-file-share'
  - uid: >-
      @azure/storage-file-share.FileDownloadToBufferOptions.maxRetryRequestsPerRange
    name: maxRetryRequestsPerRange
    fullName: maxRetryRequestsPerRange
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Optional. ONLY AVAILABLE IN NODE.JS.

      How many retries will perform when original range download stream
      unexpected ends.

      Above kind of ends will not trigger retry policy defined in a pipeline,

      because they doesn't emit network errors.


      With this option, every additional retry means an additional
      ShareFileClient.download() request will be made

      from the broken point, until the requested range has been successfully
      downloaded or

      maxRetryRequestsPerRange is reached.


      Default value is 5, please set a larger value when in poor network.
    optional: true
    syntax:
      content: 'maxRetryRequestsPerRange?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileDownloadToBufferOptions.onProgress'
    name: onProgress
    fullName: onProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Progress updater.
    optional: true
    syntax:
      content: 'onProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileDownloadToBufferOptions.rangeSize'
    name: rangeSize
    fullName: rangeSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When downloading Azure files, download method will try to split large file
      into small ranges.

      Every small range will be downloaded via a separate request.

      This option defines size data every small request trying to download.

      Must be > 0, will use the default value if undefined,
    optional: true
    syntax:
      content: 'rangeSize?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.FileDownloadToBufferOptions.tracingOptions'
    name: tracingOptions
    fullName: tracingOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        type:
          - OperationTracingOptions
        description: ''
    package: '@azure/storage-file-share'
references:
  - uid: '@azure/storage-file-share.CommonOptions'
    name: CommonOptions
    spec.typeScript:
      - name: CommonOptions
        fullName: CommonOptions
        uid: '@azure/storage-file-share.CommonOptions'
  - uid: '@azure/storage-file-share.LeaseAccessConditions'
    name: LeaseAccessConditions
    spec.typeScript:
      - name: LeaseAccessConditions
        fullName: LeaseAccessConditions
        uid: '@azure/storage-file-share.LeaseAccessConditions'
