### YamlMime:TSType
name: ShareServiceClient
uid: '@azure/storage-file-share.ShareServiceClient'
package: '@azure/storage-file-share'
summary: >-
  A ShareServiceClient represents a URL to the Azure Storage File service
  allowing you

  to manipulate file shares.
fullName: ShareServiceClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'ShareServiceClient(string, Credential, StoragePipelineOptions)'
    uid: '@azure/storage-file-share.ShareServiceClient.constructor'
    package: '@azure/storage-file-share'
    summary: Creates an instance of ShareServiceClient.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ShareServiceClient(url: string, credential?: Credential, options?:
        StoragePipelineOptions)
      parameters:
        - id: url
          type: string
          description: |-
            A URL string pointing to Azure Storage file service, such as
                                "https://myaccount.file.core.windows.net". You can Append a SAS
                                if using AnonymousCredential, such as "https://myaccount.file.core.windows.net?sasString".
        - id: credential
          type: <xref uid="@azure/storage-file-share.Credential" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.StoragePipelineOptions" />
          description: ''
  - name: 'ShareServiceClient(string, Pipeline)'
    uid: '@azure/storage-file-share.ShareServiceClient.constructor_1'
    package: '@azure/storage-file-share'
    summary: Creates an instance of ShareServiceClient.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ShareServiceClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type: string
          description: |-
            A URL string pointing to Azure Storage file service, such as
                                "https://myaccount.file.core.windows.net". You can Append a SAS
                                if using AnonymousCredential, such as "https://myaccount.file.core.windows.net?sasString".
        - id: pipeline
          type: <xref uid="@azure/storage-file-share.Pipeline" />
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
properties:
  - name: accountName
    uid: '@azure/storage-file-share.ShareServiceClient.accountName'
    package: '@azure/storage-file-share'
    summary: ''
    fullName: accountName
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'accountName: string'
      return:
        type: string
        description: ''
  - name: url
    uid: '@azure/storage-file-share.ShareServiceClient.url'
    package: '@azure/storage-file-share'
    summary: URL string value.
    fullName: url
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'url: string'
      return:
        type: string
        description: ''
methods:
  - name: 'createShare(string, ShareCreateOptions)'
    uid: '@azure/storage-file-share.ShareServiceClient.createShare'
    package: '@azure/storage-file-share'
    summary: Creates a Share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createShare(shareName: string, options?: ShareCreateOptions)'
      parameters:
        - id: shareName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareCreateOptions" />
          description: ''
      return:
        type: Promise&lt;Object&gt;
        description: '>} Share creation response and the corresponding share client.'
  - name: 'deleteShare(string, ShareDeleteMethodOptions)'
    uid: '@azure/storage-file-share.ShareServiceClient.deleteShare'
    package: '@azure/storage-file-share'
    summary: Deletes a Share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteShare(shareName: string, options?:
        ShareDeleteMethodOptions)
      parameters:
        - id: shareName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareDeleteMethodOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-file-share.ShareDeleteResponse"
          />&gt;
        description: Share deletion response and the corresponding share client.
  - name: 'fromConnectionString(string, StoragePipelineOptions)'
    uid: '@azure/storage-file-share.ShareServiceClient.fromConnectionString'
    package: '@azure/storage-file-share'
    summary: Creates an instance of ShareServiceClient from connection string.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        static function fromConnectionString(connectionString: string, options?:
        StoragePipelineOptions)
      parameters:
        - id: connectionString
          type: string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: options
          type: <xref uid="@azure/storage-file-share.StoragePipelineOptions" />
          description: ''
      return:
        type: <xref uid="@azure/storage-file-share.ShareServiceClient" />
        description: A new ShareServiceClient from the given connection string.
  - name: getProperties(ServiceGetPropertiesOptions)
    uid: '@azure/storage-file-share.ShareServiceClient.getProperties'
    package: '@azure/storage-file-share'
    summary: >-
      Gets the properties of a storage accountâ€™s file service, including
      properties

      for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProperties(options?: ServiceGetPropertiesOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ServiceGetPropertiesOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ServiceGetPropertiesResponse" />&gt;
        description: Response data for the Get Properties operation.
  - name: getShareClient(string)
    uid: '@azure/storage-file-share.ShareServiceClient.getShareClient'
    package: '@azure/storage-file-share'
    summary: Creates a ShareClient object.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getShareClient(shareName: string)'
      parameters:
        - id: shareName
          type: string
          description: Name of a share.
      return:
        type: <xref uid="@azure/storage-file-share.ShareClient" />
        description: The ShareClient object for the given share name.
  - name: listShares(ServiceListSharesOptions)
    uid: '@azure/storage-file-share.ShareServiceClient.listShares'
    package: '@azure/storage-file-share'
    summary: >
      Returns an async iterable iterator to list all the shares

      under the specified account.

      .byPage() returns an async iterable iterator to list the shares in pages.


      Example using `for await` syntax:


      ```js

      let i = 1;

      for await (const share of serviceClient.listShares()) {
        console.log(`Share ${i++}: ${share.name}`);
      }

      ```


      Example using `iter.next()`:


      ```js

      let i = 1;

      let iter = serviceClient.listShares();

      let shareItem = await iter.next();

      while (!shareItem.done) {
        console.log(`Share ${i++}: ${shareItem.value.name}`);
        shareItem = await iter.next();
      }

      ```


      Example using `byPage()`:


      ```js

      // passing optional maxPageSize in the page settings

      let i = 1;

      for await (const response of serviceClient.listShares().byPage({
      maxPageSize: 20 })) {
        if (response.shareItems) {
         for (const share of response.shareItems) {
             console.log(`Share ${i++}: ${share.name}`);
          }
        }
      }

      ```


      Example using paging with a marker:


      ```js

      let i = 1;

      let iterator = serviceClient.listShares().byPage({ maxPageSize: 2 });

      let response = (await iterator.next()).value;


      // Prints 2 share names

      if (response.shareItems) {
        for (const share of response.shareItems) {
          console.log(`Share ${i++}: ${share.name}`);
        }
      }


      // Gets next marker

      let marker = response.continuationToken;


      // Passing next marker as continuationToken

      iterator = serviceClient.listShares().byPage({ continuationToken: marker,
      maxPageSize: 10 });

      response = (await iterator.next()).value;


      // Prints 10 share names

      if (response.shareItems) {
        for (const share of response.shareItems) {
          console.log(`Share ${i++}: ${share.name}`);
        }
      }

      ```
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listShares(options?: ServiceListSharesOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ServiceListSharesOptions" />
          description: ''
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/storage-file-share.ShareItem" />, <xref
          uid="@azure/storage-file-share.ServiceListSharesSegmentResponse"
          />&gt;
        description: An asyncIterableIterator that supports paging.
  - name: 'setProperties(FileServiceProperties, ServiceSetPropertiesOptions)'
    uid: '@azure/storage-file-share.ShareServiceClient.setProperties'
    package: '@azure/storage-file-share'
    summary: >-
      Sets properties for a storage accountâ€™s file service endpoint, including
      properties

      for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft
      delete settings.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setProperties(properties: FileServiceProperties, options?:
        ServiceSetPropertiesOptions)
      parameters:
        - id: properties
          type: <xref uid="@azure/storage-file-share.FileServiceProperties" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.ServiceSetPropertiesOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ServiceSetPropertiesResponse" />&gt;
        description: Response data for the Set Properties operation.
  - name: 'undeleteShare(string, string, ServiceUndeleteShareOptions)'
    uid: '@azure/storage-file-share.ShareServiceClient.undeleteShare'
    package: '@azure/storage-file-share'
    summary: |-
      Restores a previously deleted share.
      This API is only functional if Share Soft Delete is enabled
      for the storage account associated with the share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function undeleteShare(deletedShareName: string, deletedShareVersion:
        string, options?: ServiceUndeleteShareOptions)
      parameters:
        - id: deletedShareName
          type: string
          description: The name of the previously deleted share.
        - id: deletedShareVersion
          type: string
          description: The version of the previously deleted share.
        - id: options
          type: <xref uid="@azure/storage-file-share.ServiceUndeleteShareOptions" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/storage-file-share.ShareClient" />&gt;
        description: Restored share.
extends: <xref uid="@azure/storage-file-share.StorageClient" />
