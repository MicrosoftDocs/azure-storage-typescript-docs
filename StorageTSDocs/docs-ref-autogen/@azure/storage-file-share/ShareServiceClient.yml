### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-share.ShareServiceClient'
    name: ShareServiceClient
    fullName: ShareServiceClient
    children:
      - '@azure/storage-file-share.ShareServiceClient.accountName'
      - '@azure/storage-file-share.ShareServiceClient.createShare'
      - '@azure/storage-file-share.ShareServiceClient.deleteShare'
      - '@azure/storage-file-share.ShareServiceClient.fromConnectionString'
      - '@azure/storage-file-share.ShareServiceClient.getProperties'
      - '@azure/storage-file-share.ShareServiceClient.getShareClient'
      - '@azure/storage-file-share.ShareServiceClient.listShares'
      - '@azure/storage-file-share.ShareServiceClient.setProperties'
      - '@azure/storage-file-share.ShareServiceClient.constructor'
      - '@azure/storage-file-share.ShareServiceClient.constructor_1'
      - '@azure/storage-file-share.ShareServiceClient.undeleteShare'
      - '@azure/storage-file-share.ShareServiceClient.url'
    langs:
      - typeScript
    type: class
    summary: >-
      A ShareServiceClient represents a URL to the Azure Storage File service
      allowing you

      to manipulate file shares.
    extends:
      name: '@azure/storage-file-share.StorageClient'
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.accountName'
    name: accountName
    fullName: accountName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'accountName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.createShare'
    name: 'createShare(string, ShareCreateOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a Share.
    syntax:
      content: 'function createShare(shareName: string, options?: ShareCreateOptions)'
      parameters:
        - id: shareName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/storage-file-share.ShareCreateOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Object>
        description: '>} Share creation response and the corresponding share client.'
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.deleteShare'
    name: 'deleteShare(string, ShareDeleteMethodOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a Share.
    syntax:
      content: >-
        function deleteShare(shareName: string, options?:
        ShareDeleteMethodOptions)
      parameters:
        - id: shareName
          type:
            - string
          description: ''
        - id: options
          type:
            - '@azure/storage-file-share.ShareDeleteMethodOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-file-share.ShareDeleteResponse>
        description: Share deletion response and the corresponding share client.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.fromConnectionString'
    name: 'fromConnectionString(string, StoragePipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an instance of ShareServiceClient from connection string.
    syntax:
      content: >-
        static function fromConnectionString(connectionString: string, options?:
        StoragePipelineOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: options
          type:
            - '@azure/storage-file-share.StoragePipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/storage-file-share.ShareServiceClient'
        description: A new ShareServiceClient from the given connection string.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.getProperties'
    name: getProperties(ServiceGetPropertiesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the properties of a storage account’s file service, including
      properties

      for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
    syntax:
      content: 'function getProperties(options?: ServiceGetPropertiesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-file-share.ServiceGetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-file-share.ServiceGetPropertiesResponse>
        description: Response data for the Get Properties operation.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.getShareClient'
    name: getShareClient(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a ShareClient object.
    syntax:
      content: 'function getShareClient(shareName: string)'
      parameters:
        - id: shareName
          type:
            - string
          description: Name of a share.
      return:
        type:
          - '@azure/storage-file-share.ShareClient'
        description: The ShareClient object for the given share name.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.listShares'
    name: listShares(ServiceListSharesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns an async iterable iterator to list all the shares

      under the specified account.

      .byPage() returns an async iterable iterator to list the shares in pages.


      Example using `for await` syntax:


      ```js

      let i = 1;

      for await (const share of serviceClient.listShares()) {
        console.log(`Share ${i++}: ${share.name}`);
      }

      ```


      Example using `iter.next()`:


      ```js

      let i = 1;

      let iter = serviceClient.listShares();

      let shareItem = await iter.next();

      while (!shareItem.done) {
        console.log(`Share ${i++}: ${shareItem.value.name}`);
        shareItem = await iter.next();
      }

      ```


      Example using `byPage()`:


      ```js

      // passing optional maxPageSize in the page settings

      let i = 1;

      for await (const response of serviceClient.listShares().byPage({
      maxPageSize: 20 })) {
        if (response.shareItems) {
         for (const share of response.shareItems) {
             console.log(`Share ${i++}: ${share.name}`);
          }
        }
      }

      ```


      Example using paging with a marker:


      ```js

      let i = 1;

      let iterator = serviceClient.listShares().byPage({ maxPageSize: 2 });

      let response = (await iterator.next()).value;


      // Prints 2 share names

      if (response.shareItems) {
        for (const share of response.shareItems) {
          console.log(`Share ${i++}: ${share.name}`);
        }
      }


      // Gets next marker

      let marker = response.continuationToken;


      // Passing next marker as continuationToken

      iterator = serviceClient.listShares().byPage({ continuationToken: marker,
      maxPageSize: 10 });

      response = (await iterator.next()).value;


      // Prints 10 share names

      if (response.shareItems) {
        for (const share of response.shareItems) {
          console.log(`Share ${i++}: ${share.name}`);
        }
      }

      ```
    syntax:
      content: 'function listShares(options?: ServiceListSharesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-file-share.ServiceListSharesOptions'
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/storage-file-share.ShareItem,
            @azure/storage-file-share.ServiceListSharesSegmentResponse>
        description: An asyncIterableIterator that supports paging.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.setProperties'
    name: 'setProperties(FileServiceProperties, ServiceSetPropertiesOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets properties for a storage account’s file service endpoint, including
      properties

      for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft
      delete settings.
    syntax:
      content: >-
        function setProperties(properties: FileServiceProperties, options?:
        ServiceSetPropertiesOptions)
      parameters:
        - id: properties
          type:
            - '@azure/storage-file-share.FileServiceProperties'
          description: ''
        - id: options
          type:
            - '@azure/storage-file-share.ServiceSetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-file-share.ServiceSetPropertiesResponse>
        description: Response data for the Set Properties operation.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.constructor'
    name: 'ShareServiceClient(string, Credential, StoragePipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of ShareServiceClient.
    syntax:
      content: >-
        new ShareServiceClient(url: string, credential?: Credential, options?:
        StoragePipelineOptions)
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage file service, such as
                                "https://myaccount.file.core.windows.net". You can Append a SAS
                                if using AnonymousCredential, such as "https://myaccount.file.core.windows.net?sasString".
        - id: credential
          type:
            - '@azure/storage-file-share.Credential'
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/storage-file-share.StoragePipelineOptions'
          description: ''
          optional: true
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.constructor_1'
    name: 'ShareServiceClient(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of ShareServiceClient.
    syntax:
      content: 'new ShareServiceClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage file service, such as
                                "https://myaccount.file.core.windows.net". You can Append a SAS
                                if using AnonymousCredential, such as "https://myaccount.file.core.windows.net?sasString".
        - id: pipeline
          type:
            - '@azure/storage-file-share.Pipeline'
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.undeleteShare'
    name: 'undeleteShare(string, string, ServiceUndeleteShareOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Restores a previously deleted share.
      This API is only functional if Share Soft Delete is enabled
      for the storage account associated with the share.
    syntax:
      content: >-
        function undeleteShare(deletedShareName: string, deletedShareVersion:
        string, options?: ServiceUndeleteShareOptions)
      parameters:
        - id: deletedShareName
          type:
            - string
          description: The name of the previously deleted share.
        - id: deletedShareVersion
          type:
            - string
          description: The version of the previously deleted share.
        - id: options
          type:
            - '@azure/storage-file-share.ServiceUndeleteShareOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-file-share.ShareClient>
        description: Restored share.
    package: '@azure/storage-file-share'
  - uid: '@azure/storage-file-share.ShareServiceClient.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-share'
references:
  - uid: '@azure/storage-file-share.StorageClient'
    name: StorageClient
    spec.typeScript:
      - name: StorageClient
        fullName: StorageClient
        uid: '@azure/storage-file-share.StorageClient'
  - uid: '@azure/storage-file-share.Credential'
    name: Credential
    spec.typeScript:
      - name: Credential
        fullName: Credential
        uid: '@azure/storage-file-share.Credential'
  - uid: '@azure/storage-file-share.StoragePipelineOptions'
    name: StoragePipelineOptions
    spec.typeScript:
      - name: StoragePipelineOptions
        fullName: StoragePipelineOptions
        uid: '@azure/storage-file-share.StoragePipelineOptions'
  - uid: '@azure/storage-file-share.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-file-share.Pipeline'
  - uid: '@azure/storage-file-share.ShareCreateOptions'
    name: ShareCreateOptions
    spec.typeScript:
      - name: ShareCreateOptions
        fullName: ShareCreateOptions
        uid: '@azure/storage-file-share.ShareCreateOptions'
  - uid: '@azure/storage-file-share.ShareDeleteMethodOptions'
    name: ShareDeleteMethodOptions
    spec.typeScript:
      - name: ShareDeleteMethodOptions
        fullName: ShareDeleteMethodOptions
        uid: '@azure/storage-file-share.ShareDeleteMethodOptions'
  - uid: Promise<@azure/storage-file-share.ShareDeleteResponse>
    name: ShareDeleteResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ShareDeleteResponse
        fullName: ShareDeleteResponse
        uid: '@azure/storage-file-share.ShareDeleteResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-file-share.ServiceGetPropertiesOptions'
    name: ServiceGetPropertiesOptions
    spec.typeScript:
      - name: ServiceGetPropertiesOptions
        fullName: ServiceGetPropertiesOptions
        uid: '@azure/storage-file-share.ServiceGetPropertiesOptions'
  - uid: Promise<@azure/storage-file-share.ServiceGetPropertiesResponse>
    name: ServiceGetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceGetPropertiesResponse
        fullName: ServiceGetPropertiesResponse
        uid: '@azure/storage-file-share.ServiceGetPropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-file-share.ShareClient'
    name: ShareClient
    spec.typeScript:
      - name: ShareClient
        fullName: ShareClient
        uid: '@azure/storage-file-share.ShareClient'
  - uid: '@azure/storage-file-share.ServiceListSharesOptions'
    name: ServiceListSharesOptions
    spec.typeScript:
      - name: ServiceListSharesOptions
        fullName: ServiceListSharesOptions
        uid: '@azure/storage-file-share.ServiceListSharesOptions'
  - uid: >-
      PagedAsyncIterableIterator<@azure/storage-file-share.ShareItem,
      @azure/storage-file-share.ServiceListSharesSegmentResponse>
    name: ServiceListSharesSegmentResponse>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: ShareItem
        fullName: ShareItem
        uid: '@azure/storage-file-share.ShareItem'
      - name: ', '
        fullName: ', '
      - name: ServiceListSharesSegmentResponse
        fullName: ServiceListSharesSegmentResponse
        uid: '@azure/storage-file-share.ServiceListSharesSegmentResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-file-share.FileServiceProperties'
    name: FileServiceProperties
    spec.typeScript:
      - name: FileServiceProperties
        fullName: FileServiceProperties
        uid: '@azure/storage-file-share.FileServiceProperties'
  - uid: '@azure/storage-file-share.ServiceSetPropertiesOptions'
    name: ServiceSetPropertiesOptions
    spec.typeScript:
      - name: ServiceSetPropertiesOptions
        fullName: ServiceSetPropertiesOptions
        uid: '@azure/storage-file-share.ServiceSetPropertiesOptions'
  - uid: Promise<@azure/storage-file-share.ServiceSetPropertiesResponse>
    name: ServiceSetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceSetPropertiesResponse
        fullName: ServiceSetPropertiesResponse
        uid: '@azure/storage-file-share.ServiceSetPropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-file-share.ServiceUndeleteShareOptions'
    name: ServiceUndeleteShareOptions
    spec.typeScript:
      - name: ServiceUndeleteShareOptions
        fullName: ServiceUndeleteShareOptions
        uid: '@azure/storage-file-share.ServiceUndeleteShareOptions'
  - uid: Promise<@azure/storage-file-share.ShareClient>
    name: ShareClient>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ShareClient
        fullName: ShareClient
        uid: '@azure/storage-file-share.ShareClient'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-file-share.ShareServiceClient'
    name: ShareServiceClient
    spec.typeScript:
      - name: ShareServiceClient
        fullName: ShareServiceClient
        uid: '@azure/storage-file-share.ShareServiceClient'
