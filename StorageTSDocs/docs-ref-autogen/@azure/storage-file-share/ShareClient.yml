### YamlMime:TSType
name: ShareClient
uid: '@azure/storage-file-share.ShareClient'
package: '@azure/storage-file-share'
summary: >-
  A ShareClient represents a URL to the Azure Storage share allowing you to
  manipulate its directories and files.
fullName: ShareClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'ShareClient(string, Credential, StoragePipelineOptions)'
    uid: '@azure/storage-file-share.ShareClient.constructor_1'
    package: '@azure/storage-file-share'
    summary: Creates an instance of ShareClient.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ShareClient(url: string, credential?: Credential, options?:
        StoragePipelineOptions)
      parameters:
        - id: url
          type: string
          description: |-
            A URL string pointing to Azure Storage file share, such as
                                "https://myaccount.file.core.windows.net/share". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.file.core.windows.net/share?sasString".
        - id: credential
          type: <xref uid="@azure/storage-file-share.Credential" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.StoragePipelineOptions" />
          description: ''
  - name: 'ShareClient(string, Pipeline)'
    uid: '@azure/storage-file-share.ShareClient.constructor_2'
    package: '@azure/storage-file-share'
    summary: Creates an instance of ShareClient.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ShareClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type: string
          description: |-
            A URL string pointing to Azure Storage file share, such as
                                "https://myaccount.file.core.windows.net/share". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.file.core.windows.net/share?sasString".
        - id: pipeline
          type: <xref uid="@azure/storage-file-share.Pipeline" />
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
  - name: 'ShareClient(string, string, StoragePipelineOptions)'
    uid: '@azure/storage-file-share.ShareClient.constructor'
    package: '@azure/storage-file-share'
    summary: |-
      Creates an instance of ShareClient.
      Creates an instance of ShareClient.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new ShareClient(connectionString: string, name: string, options?:
        StoragePipelineOptions)
      parameters:
        - id: connectionString
          type: string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: name
          type: string
          description: Share name.
        - id: options
          type: <xref uid="@azure/storage-file-share.StoragePipelineOptions" />
          description: ''
properties:
  - name: accountName
    uid: '@azure/storage-file-share.ShareClient.accountName'
    package: '@azure/storage-file-share'
    summary: ''
    fullName: accountName
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'accountName: string'
      return:
        type: string
        description: ''
  - name: name
    uid: '@azure/storage-file-share.ShareClient.name'
    package: '@azure/storage-file-share'
    summary: The name of the share
    fullName: name
    isPreview: false
    isDeprecated: false
    syntax:
      content: string name
      return:
        type: string
        description: ''
  - name: rootDirectoryClient
    uid: '@azure/storage-file-share.ShareClient.rootDirectoryClient'
    package: '@azure/storage-file-share'
    summary: |-
      Gets the directory client for the root directory of this share.
      Note that the root directory always exists and cannot be deleted.
    fullName: rootDirectoryClient
    isPreview: false
    isDeprecated: false
    syntax:
      content: ShareDirectoryClient rootDirectoryClient
      return:
        type: <xref uid="@azure/storage-file-share.ShareDirectoryClient" />
        description: ''
  - name: url
    uid: '@azure/storage-file-share.ShareClient.url'
    package: '@azure/storage-file-share'
    summary: URL string value.
    fullName: url
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'url: string'
      return:
        type: string
        description: ''
methods:
  - name: create(ShareCreateOptions)
    uid: '@azure/storage-file-share.ShareClient.create'
    package: '@azure/storage-file-share'
    summary: |-
      Creates a new share under the specified account. If the share with
      the same name already exists, the operation fails.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function create(options?: ShareCreateOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareCreateOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-file-share.ShareCreateResponse"
          />&gt;
        description: Response data for the Share Create operation.
  - name: 'createDirectory(string, DirectoryCreateOptions)'
    uid: '@azure/storage-file-share.ShareClient.createDirectory'
    package: '@azure/storage-file-share'
    summary: Creates a new subdirectory under this share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createDirectory(directoryName: string, options?:
        DirectoryCreateOptions)
      parameters:
        - id: directoryName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.DirectoryCreateOptions" />
          description: ''
      return:
        type: Promise&lt;Object&gt;
        description: >-
          >} Directory creation response data and the corresponding directory
          client.
  - name: 'createFile(string, number, FileCreateOptions)'
    uid: '@azure/storage-file-share.ShareClient.createFile'
    package: '@azure/storage-file-share'
    summary: >-
      Creates a new file or replaces a file under the root directory of this
      share.

      Note it only initializes the file with no content.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createFile(fileName: string, size: number, options?:
        FileCreateOptions)
      parameters:
        - id: fileName
          type: string
          description: ''
        - id: size
          type: number
          description: 'Specifies the maximum size in bytes for the file, up to 1 TB.'
        - id: options
          type: <xref uid="@azure/storage-file-share.FileCreateOptions" />
          description: ''
      return:
        type: Promise&lt;Object&gt;
        description: '>} File creation response data and the corresponding file client.'
  - name: createIfNotExists(ShareCreateOptions)
    uid: '@azure/storage-file-share.ShareClient.createIfNotExists'
    package: '@azure/storage-file-share'
    summary: |-
      Creates a new share under the specified account. If the share with
      the same name already exists, it is not changed.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createIfNotExists(options?: ShareCreateOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareCreateOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareCreateIfNotExistsResponse" />&gt;
        description: ''
  - name: 'createPermission(string, ShareCreatePermissionOptions)'
    uid: '@azure/storage-file-share.ShareClient.createPermission'
    package: '@azure/storage-file-share'
    summary: >-
      Creates a file permission (a security descriptor) at the share level.

      The created security descriptor can be used for the files/directories in
      the share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createPermission(filePermission: string, options?:
        ShareCreatePermissionOptions)
      parameters:
        - id: filePermission
          type: string
          description: |
            File permission described in the SDDL
        - id: options
          type: >-
            <xref uid="@azure/storage-file-share.ShareCreatePermissionOptions"
            />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareCreatePermissionResponse" />&gt;
        description: ''
  - name: createSnapshot(ShareCreateSnapshotOptions)
    uid: '@azure/storage-file-share.ShareClient.createSnapshot'
    package: '@azure/storage-file-share'
    summary: Creates a read-only snapshot of a share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createSnapshot(options?: ShareCreateSnapshotOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareCreateSnapshotOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareCreateSnapshotResponse" />&gt;
        description: Response data for the Share Create Snapshot operation.
  - name: delete(ShareDeleteMethodOptions)
    uid: '@azure/storage-file-share.ShareClient.delete'
    package: '@azure/storage-file-share'
    summary: >-
      Marks the specified share for deletion. The share and any directories or
      files

      contained within it are later deleted during garbage collection.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(options?: ShareDeleteMethodOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareDeleteMethodOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-file-share.ShareDeleteResponse"
          />&gt;
        description: Response data for the Share Delete operation.
  - name: 'deleteDirectory(string, DirectoryDeleteOptions)'
    uid: '@azure/storage-file-share.ShareClient.deleteDirectory'
    package: '@azure/storage-file-share'
    summary: |-
      Removes the specified empty sub directory under this share.
      Note that the directory must be empty before it can be deleted.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteDirectory(directoryName: string, options?:
        DirectoryDeleteOptions)
      parameters:
        - id: directoryName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.DirectoryDeleteOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.DirectoryDeleteResponse" />&gt;
        description: Directory deletion response data.
  - name: 'deleteFile(string, FileDeleteOptions)'
    uid: '@azure/storage-file-share.ShareClient.deleteFile'
    package: '@azure/storage-file-share'
    summary: >
      Removes a file under the root directory of this share from the storage
      account.

      When a file is successfully deleted, it is immediately removed from the
      storage

      account's index and is no longer accessible to clients. The file's data is
      later

      removed from the service during garbage collection.

      Delete File will fail with status code 409 (Conflict) and error code
      `SharingViolation`

      if the file is open on an SMB client.


      Delete File is not supported on a share snapshot, which is a read-only
      copy of

      a share. An attempt to perform this operation on a share snapshot will
      fail with 400

      (`InvalidQueryParameterValue`)
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteFile(fileName: string, options?: FileDeleteOptions)'
      parameters:
        - id: fileName
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.FileDeleteOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-file-share.FileDeleteResponse"
          />&gt;
        description: Promise<FileDeleteResponse> File Delete response data.
  - name: deleteIfExists(ShareDeleteMethodOptions)
    uid: '@azure/storage-file-share.ShareClient.deleteIfExists'
    package: '@azure/storage-file-share'
    summary: >-
      Marks the specified share for deletion if it exists. The share and any
      directories or files

      contained within it are later deleted during garbage collection.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteIfExists(options?: ShareDeleteMethodOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareDeleteMethodOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareDeleteIfExistsResponse" />&gt;
        description: ''
  - name: exists(ShareExistsOptions)
    uid: '@azure/storage-file-share.ShareClient.exists'
    package: '@azure/storage-file-share'
    summary: >
      Returns true if the Azrue share resource represented by this client
      exists; false otherwise.

      NOTE: use this function with care since an existing share might be deleted
      by other clients or

      applications. Vice versa new shares might be added by other clients or
      applications after this

      function completes.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function exists(options?: ShareExistsOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareExistsOptions" />
          description: ''
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: getAccessPolicy(ShareGetAccessPolicyOptions)
    uid: '@azure/storage-file-share.ShareClient.getAccessPolicy'
    package: '@azure/storage-file-share'
    summary: >
      Gets the permissions for the specified share. The permissions indicate

      whether share data may be accessed publicly.

      WARNING: JavaScript Date will potential lost precision when parsing start
      and expiry string.

      For example, new Date("2018-12-31T03:44:23.8827891Z").toISOString() will
      get "2018-12-31T03:44:23.882Z".
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAccessPolicy(options?: ShareGetAccessPolicyOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareGetAccessPolicyOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareGetAccessPolicyResponse" />&gt;
        description: Response data for the Share Get Access Policy operation.
  - name: getDirectoryClient(string)
    uid: '@azure/storage-file-share.ShareClient.getDirectoryClient'
    package: '@azure/storage-file-share'
    summary: 'Creates a <xref:ShareDirectoryClient> object.'
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getDirectoryClient(directoryName: string)'
      parameters:
        - id: directoryName
          type: string
          description: A directory name
      return:
        type: <xref uid="@azure/storage-file-share.ShareDirectoryClient" />
        description: The ShareDirectoryClient object for the given directory name.
  - name: 'getPermission(string, ShareGetPermissionOptions)'
    uid: '@azure/storage-file-share.ShareClient.getPermission'
    package: '@azure/storage-file-share'
    summary: >-
      Gets the Security Descriptor Definition Language (SDDL) for a given file
      permission key

      which indicates a security descriptor.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getPermission(filePermissionKey: string, options?:
        ShareGetPermissionOptions)
      parameters:
        - id: filePermissionKey
          type: string
          description: >
            File permission key which indicates the security descriptor of the
            permission.
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareGetPermissionOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareGetPermissionResponse" />&gt;
        description: ''
  - name: getProperties(ShareGetPropertiesOptions)
    uid: '@azure/storage-file-share.ShareClient.getProperties'
    package: '@azure/storage-file-share'
    summary: |-
      Returns all user-defined metadata and system properties for the specified
      share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProperties(options?: ShareGetPropertiesOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareGetPropertiesOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareGetPropertiesResponse" />&gt;
        description: Response data for the Share Get Properties operation.
  - name: getStatistics(ShareGetStatisticsOptions)
    uid: '@azure/storage-file-share.ShareClient.getStatistics'
    package: '@azure/storage-file-share'
    summary: Retrieves statistics related to the share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getStatistics(options?: ShareGetStatisticsOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareGetStatisticsOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareGetStatisticsResponse" />&gt;
        description: Response data for the Share Get Statistics operation.
  - name: 'setAccessPolicy(SignedIdentifier[], ShareSetAccessPolicyOptions)'
    uid: '@azure/storage-file-share.ShareClient.setAccessPolicy'
    package: '@azure/storage-file-share'
    summary: >-
      Sets the permissions for the specified share. The permissions indicate

      whether directories or files in a share may be accessed publicly.

      When you set permissions for a share, the existing permissions are
      replaced.

      If no shareAcl provided, the existing share ACL will be

      removed.


      When you establish a stored access policy on a share, it may take up to 30
      seconds to take effect.

      During this interval, a shared access signature that is associated with
      the stored access policy will

      fail with status code 403 (Forbidden), until the access policy becomes
      active.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setAccessPolicy(shareAcl?: SignedIdentifier[], options?:
        ShareSetAccessPolicyOptions)
      parameters:
        - id: shareAcl
          type: '<xref uid="@azure/storage-file-share.SignedIdentifier" />[]'
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareSetAccessPolicyOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareSetAccessPolicyResponse" />&gt;
        description: Response data for the Share Set Access Policy operation.
  - name: 'setMetadata(Metadata, ShareSetMetadataOptions)'
    uid: '@azure/storage-file-share.ShareClient.setMetadata'
    package: '@azure/storage-file-share'
    summary: >-
      Sets one or more user-defined name-value pairs for the specified share.

      If no option provided, or no metadata defined in the option parameter, the
      share

      metadata will be removed.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(metadata?: Metadata, options?:
        ShareSetMetadataOptions)
      parameters:
        - id: metadata
          type: <xref uid="@azure/storage-file-share.Metadata" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareSetMetadataOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-file-share.ShareSetMetadataResponse" />&gt;
        description: Response data for the Share Set Metadata operation.
  - name: 'setQuota(number, ShareSetQuotaOptions)'
    uid: '@azure/storage-file-share.ShareClient.setQuota'
    package: '@azure/storage-file-share'
    summary: Sets quota for the specified share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setQuota(quotaInGB: number, options?: ShareSetQuotaOptions)'
      parameters:
        - id: quotaInGB
          type: number
          description: Specifies the maximum size of the share in gigabytes
        - id: options
          type: <xref uid="@azure/storage-file-share.ShareSetQuotaOptions" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-file-share.ShareSetQuotaResponse"
          />&gt;
        description: Response data for the Share Get Quota operation.
  - name: withSnapshot(string)
    uid: '@azure/storage-file-share.ShareClient.withSnapshot'
    package: '@azure/storage-file-share'
    summary: >-
      Creates a new ShareClient object identical to the source but with the
      specified snapshot timestamp.

      Provide "" will remove the snapshot and return a URL to the base share.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function withSnapshot(snapshot: string)'
      parameters:
        - id: snapshot
          type: string
          description: The snapshot timestamp.
      return:
        type: <xref uid="@azure/storage-file-share.ShareClient" />
        description: >-
          A new ShareClient object identical to the source but with the
          specified snapshot timestamp
extends: <xref uid="@azure/storage-file-share.StorageClient" />
