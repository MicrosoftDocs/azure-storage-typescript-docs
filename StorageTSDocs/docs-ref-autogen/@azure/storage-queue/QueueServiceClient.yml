### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-queue.QueueServiceClient'
    name: QueueServiceClient
    fullName: QueueServiceClient
    children:
      - '@azure/storage-queue.QueueServiceClient.accountName'
      - '@azure/storage-queue.QueueServiceClient.createQueue'
      - '@azure/storage-queue.QueueServiceClient.deleteQueue'
      - '@azure/storage-queue.QueueServiceClient.fromConnectionString'
      - '@azure/storage-queue.QueueServiceClient.getProperties'
      - '@azure/storage-queue.QueueServiceClient.getQueueClient'
      - '@azure/storage-queue.QueueServiceClient.getStatistics'
      - '@azure/storage-queue.QueueServiceClient.listQueues'
      - '@azure/storage-queue.QueueServiceClient.constructor_1'
      - '@azure/storage-queue.QueueServiceClient.constructor'
      - '@azure/storage-queue.QueueServiceClient.setProperties'
      - '@azure/storage-queue.QueueServiceClient.url'
    langs:
      - typeScript
    type: class
    summary: >-
      A QueueServiceClient represents a URL to the Azure Storage Queue service
      allowing you

      to manipulate queues.
    extends:
      name: '@azure/storage-queue.StorageClient'
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.accountName'
    name: accountName
    fullName: accountName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'accountName: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.createQueue'
    name: 'createQueue(string, QueueCreateOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new queue under the specified account.
    syntax:
      content: 'function createQueue(queueName: string, options?: QueueCreateOptions)'
      parameters:
        - id: queueName
          type:
            - string
          description: name of the queue to create
        - id: options
          type:
            - '@azure/storage-queue.QueueCreateOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.QueueCreateResponse>
        description: Response data for the Queue create operation.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.deleteQueue'
    name: 'deleteQueue(string, QueueDeleteOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified queue permanently.
    syntax:
      content: 'function deleteQueue(queueName: string, options?: QueueDeleteOptions)'
      parameters:
        - id: queueName
          type:
            - string
          description: name of the queue to delete.
        - id: options
          type:
            - '@azure/storage-queue.QueueDeleteOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.QueueDeleteResponse>
        description: Response data for the Queue delete operation.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.fromConnectionString'
    name: 'fromConnectionString(string, StoragePipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates an instance of QueueServiceClient.
    syntax:
      content: >-
        static function fromConnectionString(connectionString: string, options?:
        StoragePipelineOptions)
      parameters:
        - id: connectionString
          type:
            - string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: options
          type:
            - '@azure/storage-queue.StoragePipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/storage-queue.QueueServiceClient'
        description: A new QueueServiceClient object from the given connection string.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.getProperties'
    name: getProperties(ServiceGetPropertiesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the properties of a storage accountâ€™s Queue service, including
      properties

      for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
    syntax:
      content: 'function getProperties(options?: ServiceGetPropertiesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.ServiceGetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.ServiceGetPropertiesResponse>
        description: Response data including the queue service properties.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.getQueueClient'
    name: getQueueClient(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Creates a <xref:QueueClient> object.'
    syntax:
      content: 'function getQueueClient(queueName: string)'
      parameters:
        - id: queueName
          type:
            - string
          description: ''
      return:
        type:
          - '@azure/storage-queue.QueueClient'
        description: a new QueueClient
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.getStatistics'
    name: getStatistics(ServiceGetStatisticsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves statistics related to replication for the Queue service. It is
      only

      available on the secondary location endpoint when read-access
      geo-redundant

      replication is enabled for the storage account.
    syntax:
      content: 'function getStatistics(options?: ServiceGetStatisticsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.ServiceGetStatisticsOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.ServiceGetStatisticsResponse>
        description: Response data for get statistics the operation.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.listQueues'
    name: listQueues(ServiceListQueuesOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Returns an async iterable iterator to list all the queues

      under the specified account.

      .byPage() returns an async iterable iterator to list the queues in pages.


      Example using `for await` syntax:


      ```js

      let i = 1;

      for await (const item of queueServiceClient.listQueues()) {
        console.log(`Queue${i}: ${item.name}`);
        i++;
      }

      ```


      Example using `iter.next()`:


      ```js

      let i = 1;

      let iterator = queueServiceClient.listQueues();

      let item = await iterator.next();

      while (!item.done) {
        console.log(`Queue${i}: ${iterator.value.name}`);
        i++;
        item = await iterator.next();
      }

      ```


      Example using `byPage()`:


      ```js

      // passing optional maxPageSize in the page settings

      let i = 1;

      for await (const item2 of queueServiceClient.listQueues().byPage({
      maxPageSize: 20 })) {
        if (item2.queueItems) {
          for (const queueItem of item2.queueItems) {
            console.log(`Queue${i}: ${queueItem.name}`);
            i++;
          }
        }
      }

      ```


      Example using paging with a marker:


      ```js

      let i = 1;

      let iterator = queueServiceClient.listQueues().byPage({ maxPageSize: 2 });

      let item = (await iterator.next()).value;


      // Prints 2 queue names

      if (item.queueItems) {
        for (const queueItem of item.queueItems) {
          console.log(`Queue${i}: ${queueItem.name}`);
          i++;
        }
      }

      // Gets next marker

      let marker = item.continuationToken;


      // Passing next marker as continuationToken

      iterator = queueServiceClient.listQueues().byPage({ continuationToken:
      marker, maxPageSize: 10 });

      item = (await iterator.next()).value;


      // Prints 10 queue names

      if (item.queueItems) {
        for (const queueItem of item.queueItems) {
          console.log(`Queue${i}: ${queueItem.name}`);
          i++;
        }
      }

      ```
    syntax:
      content: 'function listQueues(options?: ServiceListQueuesOptions)'
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.ServiceListQueuesOptions'
          description: ''
          optional: true
      return:
        type:
          - >-
            PagedAsyncIterableIterator<@azure/storage-queue.QueueItem,
            @azure/storage-queue.ServiceListQueuesSegmentResponse>
        description: An asyncIterableIterator that supports paging.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.constructor_1'
    name: 'QueueServiceClient(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of QueueServiceClient.
    syntax:
      content: 'new QueueServiceClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage queue service, such as
                                "https://myaccount.queue.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.queue.core.windows.net?sasString".
        - id: pipeline
          type:
            - '@azure/storage-queue.Pipeline'
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.constructor'
    name: >-
      QueueServiceClient(string, StorageSharedKeyCredential |
      AnonymousCredential | TokenCredential, StoragePipelineOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of QueueServiceClient.
    syntax:
      content: >-
        new QueueServiceClient(url: string, credential?:
        StorageSharedKeyCredential | AnonymousCredential | TokenCredential,
        options?: StoragePipelineOptions)
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage queue service, such as
                                "https://myaccount.queue.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.queue.core.windows.net?sasString".
        - id: credential
          type:
            - >-
              @azure/storage-queue.StorageSharedKeyCredential |
              @azure/storage-queue.AnonymousCredential | TokenCredential
          description: >-
            Such as AnonymousCredential, StorageSharedKeyCredential or any
            credential from the @azure/identity package to authenticate requests
            to the service. You can also provide an object that implements the
            TokenCredential interface. If not specified, AnonymousCredential is
            used.
          optional: true
        - id: options
          type:
            - '@azure/storage-queue.StoragePipelineOptions'
          description: ''
          optional: true
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.setProperties'
    name: 'setProperties(QueueServiceProperties, ServiceGetPropertiesOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets properties for a storage accountâ€™s Queue service endpoint, including
      properties

      for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft
      delete settings.
    syntax:
      content: >-
        function setProperties(properties: QueueServiceProperties, options?:
        ServiceGetPropertiesOptions)
      parameters:
        - id: properties
          type:
            - '@azure/storage-queue.QueueServiceProperties'
          description: ''
        - id: options
          type:
            - '@azure/storage-queue.ServiceGetPropertiesOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.ServiceSetPropertiesResponse>
        description: Response data for the Set Properties operation.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueServiceClient.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-queue'
references:
  - uid: '@azure/storage-queue.StorageClient'
    name: StorageClient
    spec.typeScript:
      - name: StorageClient
        fullName: StorageClient
        uid: '@azure/storage-queue.StorageClient'
  - uid: >-
      @azure/storage-queue.StorageSharedKeyCredential |
      @azure/storage-queue.AnonymousCredential | TokenCredential
    name: AnonymousCredential | TokenCredential
    spec.typeScript:
      - name: StorageSharedKeyCredential
        fullName: StorageSharedKeyCredential
        uid: '@azure/storage-queue.StorageSharedKeyCredential'
      - name: ' | '
        fullName: ' | '
      - name: AnonymousCredential
        fullName: AnonymousCredential
        uid: '@azure/storage-queue.AnonymousCredential'
      - name: ' | TokenCredential'
        fullName: ' | TokenCredential'
  - uid: '@azure/storage-queue.StoragePipelineOptions'
    name: StoragePipelineOptions
    spec.typeScript:
      - name: StoragePipelineOptions
        fullName: StoragePipelineOptions
        uid: '@azure/storage-queue.StoragePipelineOptions'
  - uid: '@azure/storage-queue.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-queue.Pipeline'
  - uid: '@azure/storage-queue.QueueCreateOptions'
    name: QueueCreateOptions
    spec.typeScript:
      - name: QueueCreateOptions
        fullName: QueueCreateOptions
        uid: '@azure/storage-queue.QueueCreateOptions'
  - uid: Promise<@azure/storage-queue.QueueCreateResponse>
    name: QueueCreateResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueueCreateResponse
        fullName: QueueCreateResponse
        uid: '@azure/storage-queue.QueueCreateResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.QueueDeleteOptions'
    name: QueueDeleteOptions
    spec.typeScript:
      - name: QueueDeleteOptions
        fullName: QueueDeleteOptions
        uid: '@azure/storage-queue.QueueDeleteOptions'
  - uid: Promise<@azure/storage-queue.QueueDeleteResponse>
    name: QueueDeleteResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueueDeleteResponse
        fullName: QueueDeleteResponse
        uid: '@azure/storage-queue.QueueDeleteResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.ServiceGetPropertiesOptions'
    name: ServiceGetPropertiesOptions
    spec.typeScript:
      - name: ServiceGetPropertiesOptions
        fullName: ServiceGetPropertiesOptions
        uid: '@azure/storage-queue.ServiceGetPropertiesOptions'
  - uid: Promise<@azure/storage-queue.ServiceGetPropertiesResponse>
    name: ServiceGetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceGetPropertiesResponse
        fullName: ServiceGetPropertiesResponse
        uid: '@azure/storage-queue.ServiceGetPropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.QueueClient'
    name: QueueClient
    spec.typeScript:
      - name: QueueClient
        fullName: QueueClient
        uid: '@azure/storage-queue.QueueClient'
  - uid: '@azure/storage-queue.ServiceGetStatisticsOptions'
    name: ServiceGetStatisticsOptions
    spec.typeScript:
      - name: ServiceGetStatisticsOptions
        fullName: ServiceGetStatisticsOptions
        uid: '@azure/storage-queue.ServiceGetStatisticsOptions'
  - uid: Promise<@azure/storage-queue.ServiceGetStatisticsResponse>
    name: ServiceGetStatisticsResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceGetStatisticsResponse
        fullName: ServiceGetStatisticsResponse
        uid: '@azure/storage-queue.ServiceGetStatisticsResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.ServiceListQueuesOptions'
    name: ServiceListQueuesOptions
    spec.typeScript:
      - name: ServiceListQueuesOptions
        fullName: ServiceListQueuesOptions
        uid: '@azure/storage-queue.ServiceListQueuesOptions'
  - uid: >-
      PagedAsyncIterableIterator<@azure/storage-queue.QueueItem,
      @azure/storage-queue.ServiceListQueuesSegmentResponse>
    name: ServiceListQueuesSegmentResponse>
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: QueueItem
        fullName: QueueItem
        uid: '@azure/storage-queue.QueueItem'
      - name: ', '
        fullName: ', '
      - name: ServiceListQueuesSegmentResponse
        fullName: ServiceListQueuesSegmentResponse
        uid: '@azure/storage-queue.ServiceListQueuesSegmentResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.QueueServiceProperties'
    name: QueueServiceProperties
    spec.typeScript:
      - name: QueueServiceProperties
        fullName: QueueServiceProperties
        uid: '@azure/storage-queue.QueueServiceProperties'
  - uid: Promise<@azure/storage-queue.ServiceSetPropertiesResponse>
    name: ServiceSetPropertiesResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceSetPropertiesResponse
        fullName: ServiceSetPropertiesResponse
        uid: '@azure/storage-queue.ServiceSetPropertiesResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.QueueServiceClient'
    name: QueueServiceClient
    spec.typeScript:
      - name: QueueServiceClient
        fullName: QueueServiceClient
        uid: '@azure/storage-queue.QueueServiceClient'
