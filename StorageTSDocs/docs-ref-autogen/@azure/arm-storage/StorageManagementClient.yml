### YamlMime:TSType
name: StorageManagementClient
uid: '@azure/arm-storage.StorageManagementClient'
package: '@azure/arm-storage'
summary: ''
fullName: StorageManagementClient
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      StorageManagementClient(ServiceClientCredentials, string,
      Models.StorageManagementClientOptions)
    uid: '@azure/arm-storage.StorageManagementClient.constructor'
    package: '@azure/arm-storage'
    summary: Initializes a new instance of the StorageManagementClient class.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new StorageManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?: Models.StorageManagementClientOptions)
      parameters:
        - id: credentials
          type: ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type: string
          description: The ID of the target subscription.
        - id: options
          type: <xref uid="Models.StorageManagementClientOptions" />
          description: ''
properties:
  - name: acceptLanguage
    uid: '@azure/arm-storage.StorageManagementClient.acceptLanguage'
    package: '@azure/arm-storage'
    summary: ''
    fullName: acceptLanguage
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'acceptLanguage: string'
      return:
        type: string
        description: ''
  - name: apiVersion
    uid: '@azure/arm-storage.StorageManagementClient.apiVersion'
    package: '@azure/arm-storage'
    summary: ''
    fullName: apiVersion
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: blobContainers
    uid: '@azure/arm-storage.StorageManagementClient.blobContainers'
    package: '@azure/arm-storage'
    summary: ''
    fullName: blobContainers
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'blobContainers: BlobContainers'
      return:
        type: <xref uid="@azure/arm-storage.BlobContainers" />
        description: ''
  - name: blobServices
    uid: '@azure/arm-storage.StorageManagementClient.blobServices'
    package: '@azure/arm-storage'
    summary: ''
    fullName: blobServices
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'blobServices: BlobServices'
      return:
        type: <xref uid="@azure/arm-storage.BlobServices" />
        description: ''
  - name: credentials
    uid: '@azure/arm-storage.StorageManagementClient.credentials'
    package: '@azure/arm-storage'
    summary: ''
    fullName: credentials
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type: ServiceClientCredentials
        description: ''
  - name: encryptionScopes
    uid: '@azure/arm-storage.StorageManagementClient.encryptionScopes'
    package: '@azure/arm-storage'
    summary: ''
    fullName: encryptionScopes
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'encryptionScopes: EncryptionScopes'
      return:
        type: <xref uid="@azure/arm-storage.EncryptionScopes" />
        description: ''
  - name: fileServices
    uid: '@azure/arm-storage.StorageManagementClient.fileServices'
    package: '@azure/arm-storage'
    summary: ''
    fullName: fileServices
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fileServices: FileServices'
      return:
        type: <xref uid="@azure/arm-storage.FileServices" />
        description: ''
  - name: fileShares
    uid: '@azure/arm-storage.StorageManagementClient.fileShares'
    package: '@azure/arm-storage'
    summary: ''
    fullName: fileShares
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'fileShares: FileShares'
      return:
        type: <xref uid="@azure/arm-storage.FileShares" />
        description: ''
  - name: longRunningOperationRetryTimeout
    uid: >-
      @azure/arm-storage.StorageManagementClient.longRunningOperationRetryTimeout
    package: '@azure/arm-storage'
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    fullName: longRunningOperationRetryTimeout
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: managementPolicies
    uid: '@azure/arm-storage.StorageManagementClient.managementPolicies'
    package: '@azure/arm-storage'
    summary: ''
    fullName: managementPolicies
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'managementPolicies: ManagementPolicies'
      return:
        type: <xref uid="@azure/arm-storage.ManagementPolicies" />
        description: ''
  - name: objectReplicationPolicies
    uid: '@azure/arm-storage.StorageManagementClient.objectReplicationPolicies'
    package: '@azure/arm-storage'
    summary: ''
    fullName: objectReplicationPolicies
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'objectReplicationPolicies: ObjectReplicationPoliciesOperations'
      return:
        type: <xref uid="@azure/arm-storage.ObjectReplicationPoliciesOperations" />
        description: ''
  - name: operations
    uid: '@azure/arm-storage.StorageManagementClient.operations'
    package: '@azure/arm-storage'
    summary: ''
    fullName: operations
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'operations: Operations'
      return:
        type: <xref uid="@azure/arm-storage.Operations" />
        description: ''
  - name: privateEndpointConnections
    uid: '@azure/arm-storage.StorageManagementClient.privateEndpointConnections'
    package: '@azure/arm-storage'
    summary: ''
    fullName: privateEndpointConnections
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'privateEndpointConnections: PrivateEndpointConnections'
      return:
        type: <xref uid="@azure/arm-storage.PrivateEndpointConnections" />
        description: ''
  - name: privateLinkResources
    uid: '@azure/arm-storage.StorageManagementClient.privateLinkResources'
    package: '@azure/arm-storage'
    summary: ''
    fullName: privateLinkResources
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'privateLinkResources: PrivateLinkResources'
      return:
        type: <xref uid="@azure/arm-storage.PrivateLinkResources" />
        description: ''
  - name: queue
    uid: '@azure/arm-storage.StorageManagementClient.queue'
    package: '@azure/arm-storage'
    summary: ''
    fullName: queue
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'queue: Queue'
      return:
        type: <xref uid="@azure/arm-storage.Queue" />
        description: ''
  - name: queueServices
    uid: '@azure/arm-storage.StorageManagementClient.queueServices'
    package: '@azure/arm-storage'
    summary: ''
    fullName: queueServices
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'queueServices: QueueServices'
      return:
        type: <xref uid="@azure/arm-storage.QueueServices" />
        description: ''
  - name: skus
    uid: '@azure/arm-storage.StorageManagementClient.skus'
    package: '@azure/arm-storage'
    summary: ''
    fullName: skus
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'skus: Skus'
      return:
        type: <xref uid="@azure/arm-storage.Skus" />
        description: ''
  - name: storageAccounts
    uid: '@azure/arm-storage.StorageManagementClient.storageAccounts'
    package: '@azure/arm-storage'
    summary: ''
    fullName: storageAccounts
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'storageAccounts: StorageAccounts'
      return:
        type: <xref uid="@azure/arm-storage.StorageAccounts" />
        description: ''
  - name: subscriptionId
    uid: '@azure/arm-storage.StorageManagementClient.subscriptionId'
    package: '@azure/arm-storage'
    summary: ''
    fullName: subscriptionId
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'subscriptionId: string'
      return:
        type: string
        description: ''
  - name: table
    uid: '@azure/arm-storage.StorageManagementClient.table'
    package: '@azure/arm-storage'
    summary: ''
    fullName: table
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'table: TableOperations'
      return:
        type: <xref uid="@azure/arm-storage.TableOperations" />
        description: ''
  - name: tableServices
    uid: '@azure/arm-storage.StorageManagementClient.tableServices'
    package: '@azure/arm-storage'
    summary: ''
    fullName: tableServices
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tableServices: TableServices'
      return:
        type: <xref uid="@azure/arm-storage.TableServices" />
        description: ''
  - name: usages
    uid: '@azure/arm-storage.StorageManagementClient.usages'
    package: '@azure/arm-storage'
    summary: ''
    fullName: usages
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'usages: Usages'
      return:
        type: <xref uid="@azure/arm-storage.Usages" />
        description: ''
methods:
  - name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: '@azure/arm-storage.StorageManagementClient.beginLongRunningRequest'
    package: '@azure/arm-storage'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;LROPoller&gt;
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
  - name: restoreLROPoller(LROPollState)
    uid: '@azure/arm-storage.StorageManagementClient.restoreLROPoller'
    package: '@azure/arm-storage'
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type: LROPollState
          description: ''
      return:
        type: LROPoller
        description: ''
  - name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    uid: '@azure/arm-storage.StorageManagementClient.sendLongRunningRequest'
    package: '@azure/arm-storage'
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type: RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type: RequestOptionsBase
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
  - name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    uid: '@azure/arm-storage.StorageManagementClient.sendLRORequest'
    package: '@azure/arm-storage'
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type: OperationSpec
          description: The specification for the operation.
        - id: options
          type: RequestOptionsBase
          description: Additional options to be sent while making the request.
      return:
        type: Promise&lt;LROPoller&gt;
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
  - name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    uid: '@azure/arm-storage.StorageManagementClient.sendOperationRequest'
    package: '@azure/arm-storage'
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type: OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type: OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type: ServiceCallback&lt;any&gt;
          description: |
            The callback to call when the response is received.
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: sendRequest(RequestPrepareOptions | WebResourceLike)
    uid: '@azure/arm-storage.StorageManagementClient.sendRequest'
    package: '@azure/arm-storage'
    summary: Send the provided httpRequest.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type: RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type: Promise&lt;HttpOperationResponse&gt;
        description: ''
extends: <xref uid="@azure/arm-storage.StorageManagementClientContext" />
