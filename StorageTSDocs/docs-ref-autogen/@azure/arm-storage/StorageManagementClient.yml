### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.StorageManagementClient'
    name: StorageManagementClient
    fullName: StorageManagementClient
    children:
      - '@azure/arm-storage.StorageManagementClient.acceptLanguage'
      - '@azure/arm-storage.StorageManagementClient.apiVersion'
      - '@azure/arm-storage.StorageManagementClient.beginLongRunningRequest'
      - '@azure/arm-storage.StorageManagementClient.blobContainers'
      - '@azure/arm-storage.StorageManagementClient.blobServices'
      - '@azure/arm-storage.StorageManagementClient.credentials'
      - '@azure/arm-storage.StorageManagementClient.encryptionScopes'
      - '@azure/arm-storage.StorageManagementClient.fileServices'
      - '@azure/arm-storage.StorageManagementClient.fileShares'
      - >-
        @azure/arm-storage.StorageManagementClient.longRunningOperationRetryTimeout
      - '@azure/arm-storage.StorageManagementClient.managementPolicies'
      - '@azure/arm-storage.StorageManagementClient.objectReplicationPolicies'
      - '@azure/arm-storage.StorageManagementClient.operations'
      - '@azure/arm-storage.StorageManagementClient.privateEndpointConnections'
      - '@azure/arm-storage.StorageManagementClient.privateLinkResources'
      - '@azure/arm-storage.StorageManagementClient.queue'
      - '@azure/arm-storage.StorageManagementClient.queueServices'
      - '@azure/arm-storage.StorageManagementClient.restoreLROPoller'
      - '@azure/arm-storage.StorageManagementClient.sendLongRunningRequest'
      - '@azure/arm-storage.StorageManagementClient.sendLRORequest'
      - '@azure/arm-storage.StorageManagementClient.sendOperationRequest'
      - '@azure/arm-storage.StorageManagementClient.sendRequest'
      - '@azure/arm-storage.StorageManagementClient.skus'
      - '@azure/arm-storage.StorageManagementClient.storageAccounts'
      - '@azure/arm-storage.StorageManagementClient.constructor'
      - '@azure/arm-storage.StorageManagementClient.subscriptionId'
      - '@azure/arm-storage.StorageManagementClient.table'
      - '@azure/arm-storage.StorageManagementClient.tableServices'
      - '@azure/arm-storage.StorageManagementClient.usages'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-storage.StorageManagementClientContext'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.beginLongRunningRequest'
    name: >-
      beginLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      HttpLongRunningOperationResponse that provides methods for polling the LRO
      and checking if the

      LRO is finished.
    syntax:
      content: >-
        function beginLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: |-
          The HttpLongRunningOperationResponse
          that provides methods for interacting with the LRO.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.blobContainers'
    name: blobContainers
    fullName: blobContainers
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'blobContainers: BlobContainers'
      return:
        type:
          - '@azure/arm-storage.BlobContainers'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.blobServices'
    name: blobServices
    fullName: blobServices
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'blobServices: BlobServices'
      return:
        type:
          - '@azure/arm-storage.BlobServices'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.encryptionScopes'
    name: encryptionScopes
    fullName: encryptionScopes
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'encryptionScopes: EncryptionScopes'
      return:
        type:
          - '@azure/arm-storage.EncryptionScopes'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.fileServices'
    name: fileServices
    fullName: fileServices
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'fileServices: FileServices'
      return:
        type:
          - '@azure/arm-storage.FileServices'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.fileShares'
    name: fileShares
    fullName: fileShares
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'fileShares: FileShares'
      return:
        type:
          - '@azure/arm-storage.FileShares'
        description: ''
    package: '@azure/arm-storage'
  - uid: >-
      @azure/arm-storage.StorageManagementClient.longRunningOperationRetryTimeout
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The retry timeout in seconds for Long Running Operations. Default value is
      30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.managementPolicies'
    name: managementPolicies
    fullName: managementPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'managementPolicies: ManagementPolicies'
      return:
        type:
          - '@azure/arm-storage.ManagementPolicies'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.objectReplicationPolicies'
    name: objectReplicationPolicies
    fullName: objectReplicationPolicies
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'objectReplicationPolicies: ObjectReplicationPoliciesOperations'
      return:
        type:
          - '@azure/arm-storage.ObjectReplicationPoliciesOperations'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-storage.Operations'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.privateEndpointConnections'
    name: privateEndpointConnections
    fullName: privateEndpointConnections
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'privateEndpointConnections: PrivateEndpointConnections'
      return:
        type:
          - '@azure/arm-storage.PrivateEndpointConnections'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.privateLinkResources'
    name: privateLinkResources
    fullName: privateLinkResources
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'privateLinkResources: PrivateLinkResources'
      return:
        type:
          - '@azure/arm-storage.PrivateLinkResources'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.queue'
    name: queue
    fullName: queue
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'queue: Queue'
      return:
        type:
          - '@azure/arm-storage.Queue'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.queueServices'
    name: queueServices
    fullName: queueServices
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'queueServices: QueueServices'
      return:
        type:
          - '@azure/arm-storage.QueueServices'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Restore an LROPoller from the provided LROPollState. This method can be
      used to recreate an

      LROPoller on a different process or machine.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.sendLongRunningRequest'
    name: >-
      sendLongRunningRequest(RequestPrepareOptions | WebResource,
      RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Provides a mechanism to make a request that will poll and provide the
      final result.
    syntax:
      content: >-
        function sendLongRunningRequest(request: RequestPrepareOptions |
        WebResource, options?: RequestOptionsBase)
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: The request object
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
        description: >-
          The HttpOperationResponse containing the final polling request,
          response and the responseBody.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Send the initial request of a LRO (long running operation) and get back an

      LROPoller that provides methods for polling the LRO and checking if the
      LRO is finished.
    syntax:
      content: >-
        function sendLRORequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, options?: RequestOptionsBase)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: The arguments to the operation.
        - id: operationSpec
          type:
            - OperationSpec
          description: The specification for the operation.
        - id: options
          type:
            - RequestOptionsBase
          description: Additional options to be sent while making the request.
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: >-
          The LROPoller object that provides methods for interacting with the
          LRO.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.sendOperationRequest'
    name: >-
      sendOperationRequest(OperationArguments, OperationSpec,
      ServiceCallback<any>)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send an HTTP request that is populated using the provided OperationSpec.
    syntax:
      content: >-
        function sendOperationRequest(operationArguments: OperationArguments,
        operationSpec: OperationSpec, callback?: ServiceCallback<any>)
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: >-
            The arguments that the HTTP request's templated values will be
            populated from.
        - id: operationSpec
          type:
            - OperationSpec
          description: The OperationSpec to use to populate the httpRequest.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            The callback to call when the response is received.
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResourceLike)
    children: []
    type: method
    langs:
      - typeScript
    summary: Send the provided httpRequest.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResourceLike)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResourceLike
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.skus'
    name: skus
    fullName: skus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'skus: Skus'
      return:
        type:
          - '@azure/arm-storage.Skus'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.storageAccounts'
    name: storageAccounts
    fullName: storageAccounts
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'storageAccounts: StorageAccounts'
      return:
        type:
          - '@azure/arm-storage.StorageAccounts'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.constructor'
    name: >-
      StorageManagementClient(ServiceClientCredentials, string,
      Models.StorageManagementClientOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Initializes a new instance of the StorageManagementClient class.
    syntax:
      content: >-
        new StorageManagementClient(credentials: ServiceClientCredentials,
        subscriptionId: string, options?: Models.StorageManagementClientOptions)
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credentials needed for the client to connect to Azure.
        - id: subscriptionId
          type:
            - string
          description: The ID of the target subscription.
        - id: options
          type:
            - Models.StorageManagementClientOptions
          description: ''
          optional: true
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.table'
    name: table
    fullName: table
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'table: TableOperations'
      return:
        type:
          - '@azure/arm-storage.TableOperations'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.tableServices'
    name: tableServices
    fullName: tableServices
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'tableServices: TableServices'
      return:
        type:
          - '@azure/arm-storage.TableServices'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageManagementClient.usages'
    name: usages
    fullName: usages
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'usages: Usages'
      return:
        type:
          - '@azure/arm-storage.Usages'
        description: ''
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.StorageManagementClientContext'
    name: StorageManagementClientContext
    spec.typeScript:
      - name: StorageManagementClientContext
        fullName: StorageManagementClientContext
        uid: '@azure/arm-storage.StorageManagementClientContext'
  - uid: '@azure/arm-storage.BlobContainers'
    name: BlobContainers
    spec.typeScript:
      - name: BlobContainers
        fullName: BlobContainers
        uid: '@azure/arm-storage.BlobContainers'
  - uid: '@azure/arm-storage.BlobServices'
    name: BlobServices
    spec.typeScript:
      - name: BlobServices
        fullName: BlobServices
        uid: '@azure/arm-storage.BlobServices'
  - uid: '@azure/arm-storage.EncryptionScopes'
    name: EncryptionScopes
    spec.typeScript:
      - name: EncryptionScopes
        fullName: EncryptionScopes
        uid: '@azure/arm-storage.EncryptionScopes'
  - uid: '@azure/arm-storage.FileServices'
    name: FileServices
    spec.typeScript:
      - name: FileServices
        fullName: FileServices
        uid: '@azure/arm-storage.FileServices'
  - uid: '@azure/arm-storage.FileShares'
    name: FileShares
    spec.typeScript:
      - name: FileShares
        fullName: FileShares
        uid: '@azure/arm-storage.FileShares'
  - uid: '@azure/arm-storage.ManagementPolicies'
    name: ManagementPolicies
    spec.typeScript:
      - name: ManagementPolicies
        fullName: ManagementPolicies
        uid: '@azure/arm-storage.ManagementPolicies'
  - uid: '@azure/arm-storage.ObjectReplicationPoliciesOperations'
    name: ObjectReplicationPoliciesOperations
    spec.typeScript:
      - name: ObjectReplicationPoliciesOperations
        fullName: ObjectReplicationPoliciesOperations
        uid: '@azure/arm-storage.ObjectReplicationPoliciesOperations'
  - uid: '@azure/arm-storage.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-storage.Operations'
  - uid: '@azure/arm-storage.PrivateEndpointConnections'
    name: PrivateEndpointConnections
    spec.typeScript:
      - name: PrivateEndpointConnections
        fullName: PrivateEndpointConnections
        uid: '@azure/arm-storage.PrivateEndpointConnections'
  - uid: '@azure/arm-storage.PrivateLinkResources'
    name: PrivateLinkResources
    spec.typeScript:
      - name: PrivateLinkResources
        fullName: PrivateLinkResources
        uid: '@azure/arm-storage.PrivateLinkResources'
  - uid: '@azure/arm-storage.Queue'
    name: Queue
    spec.typeScript:
      - name: Queue
        fullName: Queue
        uid: '@azure/arm-storage.Queue'
  - uid: '@azure/arm-storage.QueueServices'
    name: QueueServices
    spec.typeScript:
      - name: QueueServices
        fullName: QueueServices
        uid: '@azure/arm-storage.QueueServices'
  - uid: '@azure/arm-storage.Skus'
    name: Skus
    spec.typeScript:
      - name: Skus
        fullName: Skus
        uid: '@azure/arm-storage.Skus'
  - uid: '@azure/arm-storage.StorageAccounts'
    name: StorageAccounts
    spec.typeScript:
      - name: StorageAccounts
        fullName: StorageAccounts
        uid: '@azure/arm-storage.StorageAccounts'
  - uid: '@azure/arm-storage.TableOperations'
    name: TableOperations
    spec.typeScript:
      - name: TableOperations
        fullName: TableOperations
        uid: '@azure/arm-storage.TableOperations'
  - uid: '@azure/arm-storage.TableServices'
    name: TableServices
    spec.typeScript:
      - name: TableServices
        fullName: TableServices
        uid: '@azure/arm-storage.TableServices'
  - uid: '@azure/arm-storage.Usages'
    name: Usages
    spec.typeScript:
      - name: Usages
        fullName: Usages
        uid: '@azure/arm-storage.Usages'
