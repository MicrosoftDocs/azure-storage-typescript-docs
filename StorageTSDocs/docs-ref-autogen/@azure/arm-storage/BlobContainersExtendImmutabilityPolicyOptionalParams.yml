### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams'
    name: BlobContainersExtendImmutabilityPolicyOptionalParams
    fullName: BlobContainersExtendImmutabilityPolicyOptionalParams
    children:
      - >-
        @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.abortSignal
      - >-
        @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.allowProtectedAppendWrites
      - >-
        @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.customHeaders
      - >-
        @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.immutabilityPeriodSinceCreationInDays
      - >-
        @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.onDownloadProgress
      - >-
        @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.onUploadProgress
      - >-
        @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.timeout
    langs:
      - typeScript
    type: interface
    summary: Optional Parameters.
    extends:
      name: RequestOptionsBase
    package: '@azure/arm-storage'
  - uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.abortSignal
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: The signal which can be used to abort requests.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/arm-storage'
  - uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.allowProtectedAppendWrites
    name: allowProtectedAppendWrites
    fullName: allowProtectedAppendWrites
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      This property can only be changed for unlocked time-based retention
      policies. When enabled,

      new blocks can be written to an append blob while maintaining immutability
      protection and

      compliance. Only new blocks can be added and any existing blocks cannot be
      modified or

      deleted. This property cannot be changed with ExtendImmutabilityPolicy API
    optional: true
    syntax:
      content: 'allowProtectedAppendWrites?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-storage'
  - uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.customHeaders
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      {object} [customHeaders] User defined custom request headers that
      will be applied before the request is sent.
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/arm-storage'
  - uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.immutabilityPeriodSinceCreationInDays
    name: immutabilityPeriodSinceCreationInDays
    fullName: immutabilityPeriodSinceCreationInDays
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The immutability period for the blobs in the container since the policy
      creation, in days.
    optional: true
    syntax:
      content: 'immutabilityPeriodSinceCreationInDays?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-storage'
  - uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.onDownloadProgress
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon download progress.
    optional: true
    syntax:
      content: >-
        onDownloadProgress?: undefined | (progress: TransferProgressEvent) =>
        void
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/arm-storage'
  - uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.onUploadProgress
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Callback which fires upon upload progress.
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/arm-storage'
  - uid: >-
      @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams.timeout
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The number of milliseconds a request can take before automatically being
      terminated.
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-storage'
