### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.BlobContainers'
    name: BlobContainers
    fullName: BlobContainers
    children:
      - '@azure/arm-storage.BlobContainers.constructor'
      - '@azure/arm-storage.BlobContainers.clearLegalHold'
      - '@azure/arm-storage.BlobContainers.clearLegalHold_2'
      - '@azure/arm-storage.BlobContainers.clearLegalHold_1'
      - '@azure/arm-storage.BlobContainers.create'
      - '@azure/arm-storage.BlobContainers.create_2'
      - '@azure/arm-storage.BlobContainers.create_1'
      - '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.deleteMethod'
      - '@azure/arm-storage.BlobContainers.deleteMethod_2'
      - '@azure/arm-storage.BlobContainers.deleteMethod_1'
      - '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.get'
      - '@azure/arm-storage.BlobContainers.get_2'
      - '@azure/arm-storage.BlobContainers.get_1'
      - '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.getImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.lease_2'
      - '@azure/arm-storage.BlobContainers.lease'
      - '@azure/arm-storage.BlobContainers.lease_1'
      - '@azure/arm-storage.BlobContainers.list_2'
      - '@azure/arm-storage.BlobContainers.list'
      - '@azure/arm-storage.BlobContainers.list_1'
      - '@azure/arm-storage.BlobContainers.listNext'
      - '@azure/arm-storage.BlobContainers.listNext_2'
      - '@azure/arm-storage.BlobContainers.listNext_1'
      - '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_2'
      - '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_1'
      - '@azure/arm-storage.BlobContainers.setLegalHold'
      - '@azure/arm-storage.BlobContainers.setLegalHold_2'
      - '@azure/arm-storage.BlobContainers.setLegalHold_1'
      - '@azure/arm-storage.BlobContainers.update'
      - '@azure/arm-storage.BlobContainers.update_2'
      - '@azure/arm-storage.BlobContainers.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a BlobContainers.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.constructor'
    name: BlobContainers(StorageManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a BlobContainers.
    syntax:
      content: 'new BlobContainers(client: StorageManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-storage.StorageManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.clearLegalHold'
    name: >-
      clearLegalHold(string, string, string, string[],
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Clears legal hold tags. Clearing the same or non-existent tag results in
      an idempotent

      operation. ClearLegalHold clears out only the specified tags in the
      request.
    syntax:
      content: >-
        function clearLegalHold(resourceGroupName: string, accountName: string,
        containerName: string, tags: string[], options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: tags
          type:
            - 'string[]'
          description: >-
            Each tag should be 3 to 23 alphanumeric characters and is normalized
            to lower case

            at SRP.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersClearLegalHoldResponse>
        description: Promise<Models.BlobContainersClearLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.clearLegalHold_2'
    name: >-
      clearLegalHold(string, string, string, string[], RequestOptionsBase,
      ServiceCallback<LegalHold>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function clearLegalHold(resourceGroupName: string, accountName: string,
        containerName: string, tags: string[], options: RequestOptionsBase,
        callback: ServiceCallback<LegalHold>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: tags
          type:
            - 'string[]'
          description: >-
            Each tag should be 3 to 23 alphanumeric characters and is normalized
            to lower case

            at SRP.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.clearLegalHold_1'
    name: >-
      clearLegalHold(string, string, string, string[],
      ServiceCallback<LegalHold>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function clearLegalHold(resourceGroupName: string, accountName: string,
        containerName: string, tags: string[], callback:
        ServiceCallback<LegalHold>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: tags
          type:
            - 'string[]'
          description: >-
            Each tag should be 3 to 23 alphanumeric characters and is normalized
            to lower case

            at SRP.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.create'
    name: 'create(string, string, string, BlobContainer, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates a new container under the specified account as described by
      request body. The container

      resource includes metadata and properties for that container. It does not
      include a list of the

      blobs contained by the container.
    syntax:
      content: >-
        function create(resourceGroupName: string, accountName: string,
        containerName: string, blobContainer: BlobContainer, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: blobContainer
          type:
            - '@azure/arm-storage.BlobContainer'
          description: Properties of the blob container to create.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersCreateResponse>
        description: Promise<Models.BlobContainersCreateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.create_2'
    name: >-
      create(string, string, string, BlobContainer, RequestOptionsBase,
      ServiceCallback<BlobContainer>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroupName: string, accountName: string,
        containerName: string, blobContainer: BlobContainer, options:
        RequestOptionsBase, callback: ServiceCallback<BlobContainer>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: blobContainer
          type:
            - '@azure/arm-storage.BlobContainer'
          description: Properties of the blob container to create.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.create_1'
    name: >-
      create(string, string, string, BlobContainer,
      ServiceCallback<BlobContainer>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(resourceGroupName: string, accountName: string,
        containerName: string, blobContainer: BlobContainer, callback:
        ServiceCallback<BlobContainer>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: blobContainer
          type:
            - '@azure/arm-storage.BlobContainer'
          description: Properties of the blob container to create.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2'
    name: >-
      createOrUpdateImmutabilityPolicy(string, string, string,
      BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams,
      ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateImmutabilityPolicy(resourceGroupName: string,
        accountName: string, containerName: string, options:
        BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams, callback:
        ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - >-
              @azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy'
    name: >-
      createOrUpdateImmutabilityPolicy(string, string, string,
      Models.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Creates or updates an unlocked immutability policy. ETag in If-Match is
      honored if given but not

      required for this operation.
    syntax:
      content: >-
        function createOrUpdateImmutabilityPolicy(resourceGroupName: string,
        accountName: string, containerName: string, options?:
        Models.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - >-
              Models.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - >-
            Promise<Models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
        description: Promise<Models.BlobContainersCreateOrUpdateImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1'
    name: >-
      createOrUpdateImmutabilityPolicy(string, string, string,
      ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function createOrUpdateImmutabilityPolicy(resourceGroupName: string,
        accountName: string, containerName: string, callback:
        ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy'
    name: >-
      deleteImmutabilityPolicy(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Aborts an unlocked immutability policy. The response of delete has

      immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is
      required for this operation.

      Deleting a locked immutability policy is not allowed, the only way is to
      delete the container

      after deleting all expired blobs inside the policy locked container.
    syntax:
      content: >-
        function deleteImmutabilityPolicy(resourceGroupName: string,
        accountName: string, containerName: string, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability policy to
            update. A value of

            "*" can be used to apply the operation only if the immutability
            policy already exists. If

            omitted, this operation will always be applied.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersDeleteImmutabilityPolicyResponse>
        description: Promise<Models.BlobContainersDeleteImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_2'
    name: >-
      deleteImmutabilityPolicy(string, string, string, string,
      RequestOptionsBase, ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteImmutabilityPolicy(resourceGroupName: string,
        accountName: string, containerName: string, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability policy to
            update. A value of

            "*" can be used to apply the operation only if the immutability
            policy already exists. If

            omitted, this operation will always be applied.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteImmutabilityPolicy_1'
    name: >-
      deleteImmutabilityPolicy(string, string, string, string,
      ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteImmutabilityPolicy(resourceGroupName: string,
        accountName: string, containerName: string, ifMatch: string, callback:
        ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability policy to
            update. A value of

            "*" can be used to apply the operation only if the immutability
            policy already exists. If

            omitted, this operation will always be applied.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteMethod'
    name: 'deleteMethod(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes specified container under its account.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        containerName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteMethod_2'
    name: >-
      deleteMethod(string, string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        containerName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.deleteMethod_1'
    name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        containerName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_2'
    name: >-
      extendImmutabilityPolicy(string, string, string, string,
      BlobContainersExtendImmutabilityPolicyOptionalParams,
      ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function extendImmutabilityPolicy(resourceGroupName: string,
        accountName: string, containerName: string, ifMatch: string, options:
        BlobContainersExtendImmutabilityPolicyOptionalParams, callback:
        ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability policy to
            update. A value of

            "*" can be used to apply the operation only if the immutability
            policy already exists. If

            omitted, this operation will always be applied.
        - id: options
          type:
            - >-
              @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy'
    name: >-
      extendImmutabilityPolicy(string, string, string, string,
      Models.BlobContainersExtendImmutabilityPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Extends the immutabilityPeriodSinceCreationInDays of a locked
      immutabilityPolicy. The only

      action allowed on a Locked policy will be this action. ETag in If-Match is
      required for this

      operation.
    syntax:
      content: >-
        function extendImmutabilityPolicy(resourceGroupName: string,
        accountName: string, containerName: string, ifMatch: string, options?:
        Models.BlobContainersExtendImmutabilityPolicyOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability policy to
            update. A value of

            "*" can be used to apply the operation only if the immutability
            policy already exists. If

            omitted, this operation will always be applied.
        - id: options
          type:
            - Models.BlobContainersExtendImmutabilityPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersExtendImmutabilityPolicyResponse>
        description: Promise<Models.BlobContainersExtendImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.extendImmutabilityPolicy_1'
    name: >-
      extendImmutabilityPolicy(string, string, string, string,
      ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function extendImmutabilityPolicy(resourceGroupName: string,
        accountName: string, containerName: string, ifMatch: string, callback:
        ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability policy to
            update. A value of

            "*" can be used to apply the operation only if the immutability
            policy already exists. If

            omitted, this operation will always be applied.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.get'
    name: 'get(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets properties of a specified container.
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string,
        containerName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersGetResponse>
        description: Promise<Models.BlobContainersGetResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.get_2'
    name: >-
      get(string, string, string, RequestOptionsBase,
      ServiceCallback<BlobContainer>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string,
        containerName: string, options: RequestOptionsBase, callback:
        ServiceCallback<BlobContainer>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.get_1'
    name: 'get(string, string, string, ServiceCallback<BlobContainer>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string,
        containerName: string, callback: ServiceCallback<BlobContainer>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_2'
    name: >-
      getImmutabilityPolicy(string, string, string,
      BlobContainersGetImmutabilityPolicyOptionalParams,
      ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getImmutabilityPolicy(resourceGroupName: string, accountName:
        string, containerName: string, options:
        BlobContainersGetImmutabilityPolicyOptionalParams, callback:
        ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - >-
              @azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.getImmutabilityPolicy'
    name: >-
      getImmutabilityPolicy(string, string, string,
      Models.BlobContainersGetImmutabilityPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the existing immutability policy along with the corresponding ETag in
      response headers and

      body.
    syntax:
      content: >-
        function getImmutabilityPolicy(resourceGroupName: string, accountName:
        string, containerName: string, options?:
        Models.BlobContainersGetImmutabilityPolicyOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - Models.BlobContainersGetImmutabilityPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersGetImmutabilityPolicyResponse>
        description: Promise<Models.BlobContainersGetImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.getImmutabilityPolicy_1'
    name: >-
      getImmutabilityPolicy(string, string, string,
      ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getImmutabilityPolicy(resourceGroupName: string, accountName:
        string, containerName: string, callback:
        ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lease_2'
    name: >-
      lease(string, string, string, BlobContainersLeaseOptionalParams,
      ServiceCallback<LeaseContainerResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function lease(resourceGroupName: string, accountName: string,
        containerName: string, options: BlobContainersLeaseOptionalParams,
        callback: ServiceCallback<LeaseContainerResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersLeaseOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LeaseContainerResponse>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lease'
    name: 'lease(string, string, string, Models.BlobContainersLeaseOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Lease Container operation establishes and manages a lock on a
      container for delete

      operations. The lock duration can be 15 to 60 seconds, or can be infinite.
    syntax:
      content: >-
        function lease(resourceGroupName: string, accountName: string,
        containerName: string, options?:
        Models.BlobContainersLeaseOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: options
          type:
            - Models.BlobContainersLeaseOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersLeaseResponse>
        description: Promise<Models.BlobContainersLeaseResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lease_1'
    name: 'lease(string, string, string, ServiceCallback<LeaseContainerResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function lease(resourceGroupName: string, accountName: string,
        containerName: string, callback:
        ServiceCallback<LeaseContainerResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LeaseContainerResponse>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.list_2'
    name: >-
      list(string, string, BlobContainersListOptionalParams,
      ServiceCallback<ListContainerItems>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, accountName: string, options:
        BlobContainersListOptionalParams, callback:
        ServiceCallback<ListContainerItems>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - '@azure/arm-storage.BlobContainersListOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.list'
    name: 'list(string, string, Models.BlobContainersListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all containers and does not support a prefix like data plane. Also
      SRP today does not

      return continuation token.
    syntax:
      content: >-
        function list(resourceGroupName: string, accountName: string, options?:
        Models.BlobContainersListOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - Models.BlobContainersListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersListResponse>
        description: Promise<Models.BlobContainersListResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.list_1'
    name: 'list(string, string, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(resourceGroupName: string, accountName: string, callback:
        ServiceCallback<ListContainerItems>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all containers and does not support a prefix like data plane. Also
      SRP today does not

      return continuation token.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersListNextResponse>
        description: Promise<Models.BlobContainersListNextResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ListContainerItems>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.listNext_1'
    name: 'listNext(string, ServiceCallback<ListContainerItems>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<ListContainerItems>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListContainerItems>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy'
    name: >-
      lockImmutabilityPolicy(string, string, string, string,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
      Locked policy is

      ExtendImmutabilityPolicy action. ETag in If-Match is required for this
      operation.
    syntax:
      content: >-
        function lockImmutabilityPolicy(resourceGroupName: string, accountName:
        string, containerName: string, ifMatch: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability policy to
            update. A value of

            "*" can be used to apply the operation only if the immutability
            policy already exists. If

            omitted, this operation will always be applied.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersLockImmutabilityPolicyResponse>
        description: Promise<Models.BlobContainersLockImmutabilityPolicyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_2'
    name: >-
      lockImmutabilityPolicy(string, string, string, string, RequestOptionsBase,
      ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function lockImmutabilityPolicy(resourceGroupName: string, accountName:
        string, containerName: string, ifMatch: string, options:
        RequestOptionsBase, callback: ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability policy to
            update. A value of

            "*" can be used to apply the operation only if the immutability
            policy already exists. If

            omitted, this operation will always be applied.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.lockImmutabilityPolicy_1'
    name: >-
      lockImmutabilityPolicy(string, string, string, string,
      ServiceCallback<ImmutabilityPolicy>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function lockImmutabilityPolicy(resourceGroupName: string, accountName:
        string, containerName: string, ifMatch: string, callback:
        ServiceCallback<ImmutabilityPolicy>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: ifMatch
          type:
            - string
          description: >-
            The entity state (ETag) version of the immutability policy to
            update. A value of

            "*" can be used to apply the operation only if the immutability
            policy already exists. If

            omitted, this operation will always be applied.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.setLegalHold'
    name: 'setLegalHold(string, string, string, string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets legal hold tags. Setting the same tag results in an idempotent
      operation. SetLegalHold

      follows an append pattern and does not clear out the existing tags that
      are not specified in the

      request.
    syntax:
      content: >-
        function setLegalHold(resourceGroupName: string, accountName: string,
        containerName: string, tags: string[], options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: tags
          type:
            - 'string[]'
          description: >-
            Each tag should be 3 to 23 alphanumeric characters and is normalized
            to lower case

            at SRP.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersSetLegalHoldResponse>
        description: Promise<Models.BlobContainersSetLegalHoldResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.setLegalHold_2'
    name: >-
      setLegalHold(string, string, string, string[], RequestOptionsBase,
      ServiceCallback<LegalHold>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setLegalHold(resourceGroupName: string, accountName: string,
        containerName: string, tags: string[], options: RequestOptionsBase,
        callback: ServiceCallback<LegalHold>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: tags
          type:
            - 'string[]'
          description: >-
            Each tag should be 3 to 23 alphanumeric characters and is normalized
            to lower case

            at SRP.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.setLegalHold_1'
    name: 'setLegalHold(string, string, string, string[], ServiceCallback<LegalHold>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setLegalHold(resourceGroupName: string, accountName: string,
        containerName: string, tags: string[], callback:
        ServiceCallback<LegalHold>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: tags
          type:
            - 'string[]'
          description: >-
            Each tag should be 3 to 23 alphanumeric characters and is normalized
            to lower case

            at SRP.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.LegalHold>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.update'
    name: 'update(string, string, string, BlobContainer, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Updates container properties as specified in request body. Properties not
      mentioned in the

      request will be unchanged. Update fails if the specified container doesn't
      already exist.
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        containerName: string, blobContainer: BlobContainer, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: blobContainer
          type:
            - '@azure/arm-storage.BlobContainer'
          description: Properties to update for the blob container.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.BlobContainersUpdateResponse>
        description: Promise<Models.BlobContainersUpdateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.update_2'
    name: >-
      update(string, string, string, BlobContainer, RequestOptionsBase,
      ServiceCallback<BlobContainer>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        containerName: string, blobContainer: BlobContainer, options:
        RequestOptionsBase, callback: ServiceCallback<BlobContainer>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: blobContainer
          type:
            - '@azure/arm-storage.BlobContainer'
          description: Properties to update for the blob container.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainers.update_1'
    name: >-
      update(string, string, string, BlobContainer,
      ServiceCallback<BlobContainer>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        containerName: string, blobContainer: BlobContainer, callback:
        ServiceCallback<BlobContainer>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: containerName
          type:
            - string
          description: >-
            The name of the blob container within the specified storage account.
            Blob

            container names must be between 3 and 63 characters in length and
            use numbers, lower-case

            letters and dash (-) only. Every dash (-) character must be
            immediately preceded and followed by

            a letter or number.
        - id: blobContainer
          type:
            - '@azure/arm-storage.BlobContainer'
          description: Properties to update for the blob container.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.BlobContainer>
          description: |
            The callback
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.StorageManagementClientContext'
    name: StorageManagementClientContext
    spec.typeScript:
      - name: StorageManagementClientContext
        fullName: StorageManagementClientContext
        uid: '@azure/arm-storage.StorageManagementClientContext'
  - uid: ServiceCallback<@azure/arm-storage.LegalHold>
    name: LegalHold>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LegalHold
        fullName: LegalHold
        uid: '@azure/arm-storage.LegalHold'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainer'
    name: BlobContainer
    spec.typeScript:
      - name: BlobContainer
        fullName: BlobContainer
        uid: '@azure/arm-storage.BlobContainer'
  - uid: ServiceCallback<@azure/arm-storage.BlobContainer>
    name: BlobContainer>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: BlobContainer
        fullName: BlobContainer
        uid: '@azure/arm-storage.BlobContainer'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-storage.ImmutabilityPolicy>
    name: ImmutabilityPolicy>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ImmutabilityPolicy
        fullName: ImmutabilityPolicy
        uid: '@azure/arm-storage.ImmutabilityPolicy'
      - name: '>'
        fullName: '>'
  - uid: >-
      @azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
    name: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
    spec.typeScript:
      - name: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
        fullName: BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
        uid: >-
          @azure/arm-storage.BlobContainersCreateOrUpdateImmutabilityPolicyOptionalParams
  - uid: '@azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams'
    name: BlobContainersExtendImmutabilityPolicyOptionalParams
    spec.typeScript:
      - name: BlobContainersExtendImmutabilityPolicyOptionalParams
        fullName: BlobContainersExtendImmutabilityPolicyOptionalParams
        uid: >-
          @azure/arm-storage.BlobContainersExtendImmutabilityPolicyOptionalParams
  - uid: '@azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams'
    name: BlobContainersGetImmutabilityPolicyOptionalParams
    spec.typeScript:
      - name: BlobContainersGetImmutabilityPolicyOptionalParams
        fullName: BlobContainersGetImmutabilityPolicyOptionalParams
        uid: '@azure/arm-storage.BlobContainersGetImmutabilityPolicyOptionalParams'
  - uid: ServiceCallback<@azure/arm-storage.LeaseContainerResponse>
    name: LeaseContainerResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LeaseContainerResponse
        fullName: LeaseContainerResponse
        uid: '@azure/arm-storage.LeaseContainerResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersLeaseOptionalParams'
    name: BlobContainersLeaseOptionalParams
    spec.typeScript:
      - name: BlobContainersLeaseOptionalParams
        fullName: BlobContainersLeaseOptionalParams
        uid: '@azure/arm-storage.BlobContainersLeaseOptionalParams'
  - uid: ServiceCallback<@azure/arm-storage.ListContainerItems>
    name: ListContainerItems>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListContainerItems
        fullName: ListContainerItems
        uid: '@azure/arm-storage.ListContainerItems'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.BlobContainersListOptionalParams'
    name: BlobContainersListOptionalParams
    spec.typeScript:
      - name: BlobContainersListOptionalParams
        fullName: BlobContainersListOptionalParams
        uid: '@azure/arm-storage.BlobContainersListOptionalParams'
