### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.ListContainerItem'
    name: ListContainerItem
    fullName: ListContainerItem
    children:
      - '@azure/arm-storage.ListContainerItem.defaultEncryptionScope'
      - '@azure/arm-storage.ListContainerItem.deleted'
      - '@azure/arm-storage.ListContainerItem.deletedTime'
      - '@azure/arm-storage.ListContainerItem.denyEncryptionScopeOverride'
      - '@azure/arm-storage.ListContainerItem.etag'
      - '@azure/arm-storage.ListContainerItem.hasImmutabilityPolicy'
      - '@azure/arm-storage.ListContainerItem.hasLegalHold'
      - '@azure/arm-storage.ListContainerItem.id'
      - '@azure/arm-storage.ListContainerItem.immutabilityPolicy'
      - '@azure/arm-storage.ListContainerItem.lastModifiedTime'
      - '@azure/arm-storage.ListContainerItem.leaseDuration'
      - '@azure/arm-storage.ListContainerItem.leaseState'
      - '@azure/arm-storage.ListContainerItem.leaseStatus'
      - '@azure/arm-storage.ListContainerItem.legalHold'
      - '@azure/arm-storage.ListContainerItem.metadata'
      - '@azure/arm-storage.ListContainerItem.name'
      - '@azure/arm-storage.ListContainerItem.publicAccess'
      - '@azure/arm-storage.ListContainerItem.remainingRetentionDays'
      - '@azure/arm-storage.ListContainerItem.type'
      - '@azure/arm-storage.ListContainerItem.version'
    langs:
      - typeScript
    type: interface
    summary: The blob container properties be listed out.
    extends:
      name: '@azure/arm-storage.AzureEntityResource'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.defaultEncryptionScope'
    name: defaultEncryptionScope
    fullName: defaultEncryptionScope
    children: []
    langs:
      - typeScript
    type: property
    summary: Default the container to use specified encryption scope for all writes.
    optional: true
    syntax:
      content: 'defaultEncryptionScope?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.deleted'
    name: deleted
    fullName: deleted
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates whether the blob container was deleted.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'deleted?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.deletedTime'
    name: deletedTime
    fullName: deletedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Blob container deletion time.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'deletedTime?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.denyEncryptionScopeOverride'
    name: denyEncryptionScopeOverride
    fullName: denyEncryptionScopeOverride
    children: []
    langs:
      - typeScript
    type: property
    summary: Block override of encryption scope from the container default.
    optional: true
    syntax:
      content: 'denyEncryptionScopeOverride?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Resource Etag.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'etag?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.hasImmutabilityPolicy'
    name: hasImmutabilityPolicy
    fullName: hasImmutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The hasImmutabilityPolicy public property is set to true by SRP if
      ImmutabilityPolicy has been

      created for this container. The hasImmutabilityPolicy public property is
      set to false by SRP

      if ImmutabilityPolicy has not been created for this container.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'hasImmutabilityPolicy?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.hasLegalHold'
    name: hasLegalHold
    fullName: hasLegalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The hasLegalHold public property is set to true by SRP if there are at
      least one existing tag.

      The hasLegalHold public property is set to false by SRP if all existing
      legal hold tags are

      cleared out. There can be a maximum of 1000 blob containers with
      hasLegalHold=true for a given

      account.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'hasLegalHold?: undefined | false | true'
      return:
        type:
          - undefined | false | true
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Fully qualified resource Id for the resource. Ex -

      /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.immutabilityPolicy'
    name: immutabilityPolicy
    fullName: immutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The ImmutabilityPolicy property of the container.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'immutabilityPolicy?: ImmutabilityPolicyProperties'
      return:
        type:
          - '@azure/arm-storage.ImmutabilityPolicyProperties'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.lastModifiedTime'
    name: lastModifiedTime
    fullName: lastModifiedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Returns the date and time the container was last modified.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'lastModifiedTime?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.leaseDuration'
    name: leaseDuration
    fullName: leaseDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether the lease on a container is of infinite or fixed
      duration, only when the

      container is leased. Possible values include: 'Infinite', 'Fixed'

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'leaseDuration?: LeaseDuration'
      return:
        type:
          - '@azure/arm-storage.LeaseDuration'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.leaseState'
    name: leaseState
    fullName: leaseState
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Lease state of the container. Possible values include: 'Available',
      'Leased', 'Expired',

      'Breaking', 'Broken'

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'leaseState?: LeaseState'
      return:
        type:
          - '@azure/arm-storage.LeaseState'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.leaseStatus'
    name: leaseStatus
    fullName: leaseStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The lease status of the container. Possible values include: 'Locked',
      'Unlocked'

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'leaseStatus?: LeaseStatus'
      return:
        type:
          - '@azure/arm-storage.LeaseStatus'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.legalHold'
    name: legalHold
    fullName: legalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The LegalHold property of the container.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'legalHold?: LegalHoldProperties'
      return:
        type:
          - '@azure/arm-storage.LegalHoldProperties'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: A name-value pair to associate with the container as metadata.
    optional: true
    syntax:
      content: 'metadata?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The name of the resource

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.publicAccess'
    name: publicAccess
    fullName: publicAccess
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether data in the container may be accessed publicly and the
      level of access.

      Possible values include: 'Container', 'Blob', 'None'
    optional: true
    syntax:
      content: 'publicAccess?: PublicAccess'
      return:
        type:
          - '@azure/arm-storage.PublicAccess'
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.remainingRetentionDays'
    name: remainingRetentionDays
    fullName: remainingRetentionDays
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Remaining retention days for soft deleted blob container.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'remainingRetentionDays?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The type of the resource. Ex- Microsoft.Compute/virtualMachines or

      Microsoft.Storage/storageAccounts.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'type?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.ListContainerItem.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The version of the deleted blob container.

      **NOTE: This property will not be serialized. It can only be populated by
      the server.**
    optional: true
    syntax:
      content: 'version?: undefined | string'
      return:
        type:
          - undefined | string
        description: ''
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.AzureEntityResource'
    name: AzureEntityResource
    spec.typeScript:
      - name: AzureEntityResource
        fullName: AzureEntityResource
        uid: '@azure/arm-storage.AzureEntityResource'
  - uid: '@azure/arm-storage.ImmutabilityPolicyProperties'
    name: ImmutabilityPolicyProperties
    spec.typeScript:
      - name: ImmutabilityPolicyProperties
        fullName: ImmutabilityPolicyProperties
        uid: '@azure/arm-storage.ImmutabilityPolicyProperties'
  - uid: '@azure/arm-storage.LeaseDuration'
    name: LeaseDuration
    spec.typeScript:
      - name: LeaseDuration
        fullName: LeaseDuration
        uid: '@azure/arm-storage.LeaseDuration'
  - uid: '@azure/arm-storage.LeaseState'
    name: LeaseState
    spec.typeScript:
      - name: LeaseState
        fullName: LeaseState
        uid: '@azure/arm-storage.LeaseState'
  - uid: '@azure/arm-storage.LeaseStatus'
    name: LeaseStatus
    spec.typeScript:
      - name: LeaseStatus
        fullName: LeaseStatus
        uid: '@azure/arm-storage.LeaseStatus'
  - uid: '@azure/arm-storage.LegalHoldProperties'
    name: LegalHoldProperties
    spec.typeScript:
      - name: LegalHoldProperties
        fullName: LegalHoldProperties
        uid: '@azure/arm-storage.LegalHoldProperties'
  - uid: '@azure/arm-storage.PublicAccess'
    name: PublicAccess
    spec.typeScript:
      - name: PublicAccess
        fullName: PublicAccess
        uid: '@azure/arm-storage.PublicAccess'
