### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.StorageAccounts'
    name: StorageAccounts
    fullName: StorageAccounts
    children:
      - '@azure/arm-storage.StorageAccounts.beginCreate'
      - '@azure/arm-storage.StorageAccounts.beginFailover'
      - '@azure/arm-storage.StorageAccounts.beginRestoreBlobRanges'
      - '@azure/arm-storage.StorageAccounts.checkNameAvailability'
      - '@azure/arm-storage.StorageAccounts.checkNameAvailability_2'
      - '@azure/arm-storage.StorageAccounts.checkNameAvailability_1'
      - '@azure/arm-storage.StorageAccounts.create'
      - '@azure/arm-storage.StorageAccounts.deleteMethod'
      - '@azure/arm-storage.StorageAccounts.deleteMethod_2'
      - '@azure/arm-storage.StorageAccounts.deleteMethod_1'
      - '@azure/arm-storage.StorageAccounts.failover'
      - '@azure/arm-storage.StorageAccounts.getProperties'
      - '@azure/arm-storage.StorageAccounts.getProperties_1'
      - '@azure/arm-storage.StorageAccounts.getProperties_2'
      - '@azure/arm-storage.StorageAccounts.list'
      - '@azure/arm-storage.StorageAccounts.list_2'
      - '@azure/arm-storage.StorageAccounts.list_1'
      - '@azure/arm-storage.StorageAccounts.listAccountSAS'
      - '@azure/arm-storage.StorageAccounts.listAccountSAS_2'
      - '@azure/arm-storage.StorageAccounts.listAccountSAS_1'
      - '@azure/arm-storage.StorageAccounts.listByResourceGroup'
      - '@azure/arm-storage.StorageAccounts.listByResourceGroup_2'
      - '@azure/arm-storage.StorageAccounts.listByResourceGroup_1'
      - '@azure/arm-storage.StorageAccounts.listKeys'
      - '@azure/arm-storage.StorageAccounts.listKeys_1'
      - '@azure/arm-storage.StorageAccounts.listKeys_2'
      - '@azure/arm-storage.StorageAccounts.listNext'
      - '@azure/arm-storage.StorageAccounts.listNext_2'
      - '@azure/arm-storage.StorageAccounts.listNext_1'
      - '@azure/arm-storage.StorageAccounts.listServiceSAS'
      - '@azure/arm-storage.StorageAccounts.listServiceSAS_2'
      - '@azure/arm-storage.StorageAccounts.listServiceSAS_1'
      - '@azure/arm-storage.StorageAccounts.regenerateKey'
      - '@azure/arm-storage.StorageAccounts.regenerateKey_2'
      - '@azure/arm-storage.StorageAccounts.regenerateKey_1'
      - '@azure/arm-storage.StorageAccounts.restoreBlobRanges'
      - '@azure/arm-storage.StorageAccounts.revokeUserDelegationKeys'
      - '@azure/arm-storage.StorageAccounts.revokeUserDelegationKeys_2'
      - '@azure/arm-storage.StorageAccounts.revokeUserDelegationKeys_1'
      - '@azure/arm-storage.StorageAccounts.constructor'
      - '@azure/arm-storage.StorageAccounts.update'
      - '@azure/arm-storage.StorageAccounts.update_2'
      - '@azure/arm-storage.StorageAccounts.update_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a StorageAccounts.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.beginCreate'
    name: >-
      beginCreate(string, string, StorageAccountCreateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Asynchronously creates a new storage account with the specified
      parameters. If an account is

      already created and a subsequent create request is issued with different
      properties, the account

      properties will be updated. If an account is already created and a
      subsequent create or update

      request is issued with the exact same set of properties, the request will
      succeed.
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, accountName: string,
        parameters: StorageAccountCreateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.StorageAccountCreateParameters'
          description: The parameters to provide for the created account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.beginFailover'
    name: 'beginFailover(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Failover request can be triggered for a storage account in case of
      availability issues. The

      failover occurs from the storage account's primary cluster to secondary
      cluster for RA-GRS

      accounts. The secondary cluster will become primary after failover.
    syntax:
      content: >-
        function beginFailover(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.beginRestoreBlobRanges'
    name: >-
      beginRestoreBlobRanges(string, string, Date | string, BlobRestoreRange[],
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restore blobs in the specified blob ranges
    syntax:
      content: >-
        function beginRestoreBlobRanges(resourceGroupName: string, accountName:
        string, timeToRestore: Date | string, blobRanges: BlobRestoreRange[],
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: timeToRestore
          type:
            - Date | string
          description: Restore blob to the specified time.
        - id: blobRanges
          type:
            - '@azure/arm-storage.BlobRestoreRange[]'
          description: Blob ranges to restore.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
        description: Promise<msRestAzure.LROPoller>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.checkNameAvailability'
    name: 'checkNameAvailability(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Checks that the storage account name is valid and is not already in use.
    syntax:
      content: >-
        function checkNameAvailability(name: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: name
          type:
            - string
          description: The storage account name.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsCheckNameAvailabilityResponse>
        description: Promise<Models.StorageAccountsCheckNameAvailabilityResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.checkNameAvailability_2'
    name: >-
      checkNameAvailability(string, RequestOptionsBase,
      ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(name: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: name
          type:
            - string
          description: The storage account name.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.CheckNameAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.checkNameAvailability_1'
    name: >-
      checkNameAvailability(string,
      ServiceCallback<CheckNameAvailabilityResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function checkNameAvailability(name: string, callback:
        ServiceCallback<CheckNameAvailabilityResult>)
      parameters:
        - id: name
          type:
            - string
          description: The storage account name.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.CheckNameAvailabilityResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.create'
    name: >-
      create(string, string, StorageAccountCreateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Asynchronously creates a new storage account with the specified
      parameters. If an account is

      already created and a subsequent create request is issued with different
      properties, the account

      properties will be updated. If an account is already created and a
      subsequent create or update

      request is issued with the exact same set of properties, the request will
      succeed.
    syntax:
      content: >-
        function create(resourceGroupName: string, accountName: string,
        parameters: StorageAccountCreateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.StorageAccountCreateParameters'
          description: The parameters to provide for the created account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsCreateResponse>
        description: Promise<Models.StorageAccountsCreateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes a storage account in Microsoft Azure.
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.failover'
    name: 'failover(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Failover request can be triggered for a storage account in case of
      availability issues. The

      failover occurs from the storage account's primary cluster to secondary
      cluster for RA-GRS

      accounts. The secondary cluster will become primary after failover.
    syntax:
      content: >-
        function failover(resourceGroupName: string, accountName: string,
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.getProperties'
    name: >-
      getProperties(string, string,
      Models.StorageAccountsGetPropertiesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns the properties for the specified storage account including but not
      limited to name, SKU

      name, location, and account status. The ListKeys operation should be used
      to retrieve storage

      keys.
    syntax:
      content: >-
        function getProperties(resourceGroupName: string, accountName: string,
        options?: Models.StorageAccountsGetPropertiesOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - Models.StorageAccountsGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsGetPropertiesResponse>
        description: Promise<Models.StorageAccountsGetPropertiesResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.getProperties_1'
    name: 'getProperties(string, string, ServiceCallback<StorageAccount>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProperties(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<StorageAccount>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccount>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.getProperties_2'
    name: >-
      getProperties(string, string, StorageAccountsGetPropertiesOptionalParams,
      ServiceCallback<StorageAccount>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProperties(resourceGroupName: string, accountName: string,
        options: StorageAccountsGetPropertiesOptionalParams, callback:
        ServiceCallback<StorageAccount>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - '@azure/arm-storage.StorageAccountsGetPropertiesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccount>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.list'
    name: list(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the storage accounts available under the subscription. Note that
      storage keys are not

      returned; use the ListKeys operation for this.
    syntax:
      content: 'function list(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsListResponse>
        description: Promise<Models.StorageAccountsListResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.list_2'
    name: 'list(RequestOptionsBase, ServiceCallback<StorageAccountListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function list(options: RequestOptionsBase, callback:
        ServiceCallback<StorageAccountListResult>)
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.list_1'
    name: list(ServiceCallback<StorageAccountListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<StorageAccountListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listAccountSAS'
    name: >-
      listAccountSAS(string, string, AccountSasParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: List SAS credentials of a storage account.
    syntax:
      content: >-
        function listAccountSAS(resourceGroupName: string, accountName: string,
        parameters: AccountSasParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.AccountSasParameters'
          description: >-
            The parameters to provide to list SAS credentials for the storage
            account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsListAccountSASResponse>
        description: Promise<Models.StorageAccountsListAccountSASResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listAccountSAS_2'
    name: >-
      listAccountSAS(string, string, AccountSasParameters, RequestOptionsBase,
      ServiceCallback<ListAccountSasResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAccountSAS(resourceGroupName: string, accountName: string,
        parameters: AccountSasParameters, options: RequestOptionsBase, callback:
        ServiceCallback<ListAccountSasResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.AccountSasParameters'
          description: >-
            The parameters to provide to list SAS credentials for the storage
            account.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListAccountSasResponse>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listAccountSAS_1'
    name: >-
      listAccountSAS(string, string, AccountSasParameters,
      ServiceCallback<ListAccountSasResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listAccountSAS(resourceGroupName: string, accountName: string,
        parameters: AccountSasParameters, callback:
        ServiceCallback<ListAccountSasResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.AccountSasParameters'
          description: >-
            The parameters to provide to list SAS credentials for the storage
            account.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListAccountSasResponse>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listByResourceGroup'
    name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the storage accounts available under the given resource group.
      Note that storage keys

      are not returned; use the ListKeys operation for this.
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsListByResourceGroupResponse>
        description: Promise<Models.StorageAccountsListByResourceGroupResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listByResourceGroup_2'
    name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<StorageAccountListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<StorageAccountListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listByResourceGroup_1'
    name: 'listByResourceGroup(string, ServiceCallback<StorageAccountListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<StorageAccountListResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listKeys'
    name: 'listKeys(string, string, Models.StorageAccountsListKeysOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists the access keys or Kerberos keys (if active directory enabled) for
      the specified storage

      account.
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options?: Models.StorageAccountsListKeysOptionalParams)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - Models.StorageAccountsListKeysOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsListKeysResponse>
        description: Promise<Models.StorageAccountsListKeysResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listKeys_1'
    name: 'listKeys(string, string, ServiceCallback<StorageAccountListKeysResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        callback: ServiceCallback<StorageAccountListKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListKeysResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listKeys_2'
    name: >-
      listKeys(string, string, StorageAccountsListKeysOptionalParams,
      ServiceCallback<StorageAccountListKeysResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listKeys(resourceGroupName: string, accountName: string,
        options: StorageAccountsListKeysOptionalParams, callback:
        ServiceCallback<StorageAccountListKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - '@azure/arm-storage.StorageAccountsListKeysOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListKeysResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Lists all the storage accounts available under the subscription. Note that
      storage keys are not

      returned; use the ListKeys operation for this.
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsListNextResponse>
        description: Promise<Models.StorageAccountsListNextResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listNext_2'
    name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<StorageAccountListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<StorageAccountListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listNext_1'
    name: 'listNext(string, ServiceCallback<StorageAccountListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<StorageAccountListResult>)
      parameters:
        - id: nextPageLink
          type:
            - string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listServiceSAS'
    name: >-
      listServiceSAS(string, string, ServiceSasParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: List service SAS credentials of a specific resource.
    syntax:
      content: >-
        function listServiceSAS(resourceGroupName: string, accountName: string,
        parameters: ServiceSasParameters, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.ServiceSasParameters'
          description: The parameters to provide to list service SAS credentials.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsListServiceSASResponse>
        description: Promise<Models.StorageAccountsListServiceSASResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listServiceSAS_2'
    name: >-
      listServiceSAS(string, string, ServiceSasParameters, RequestOptionsBase,
      ServiceCallback<ListServiceSasResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listServiceSAS(resourceGroupName: string, accountName: string,
        parameters: ServiceSasParameters, options: RequestOptionsBase, callback:
        ServiceCallback<ListServiceSasResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.ServiceSasParameters'
          description: The parameters to provide to list service SAS credentials.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListServiceSasResponse>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.listServiceSAS_1'
    name: >-
      listServiceSAS(string, string, ServiceSasParameters,
      ServiceCallback<ListServiceSasResponse>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function listServiceSAS(resourceGroupName: string, accountName: string,
        parameters: ServiceSasParameters, callback:
        ServiceCallback<ListServiceSasResponse>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.ServiceSasParameters'
          description: The parameters to provide to list service SAS credentials.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.ListServiceSasResponse>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.regenerateKey'
    name: 'regenerateKey(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Regenerates one of the access keys or Kerberos keys for the specified
      storage account.
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        keyName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: keyName
          type:
            - string
          description: >-
            The name of storage keys that want to be regenerated, possible
            values are key1,

            key2, kerb1, kerb2.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsRegenerateKeyResponse>
        description: Promise<Models.StorageAccountsRegenerateKeyResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.regenerateKey_2'
    name: >-
      regenerateKey(string, string, string, RequestOptionsBase,
      ServiceCallback<StorageAccountListKeysResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        keyName: string, options: RequestOptionsBase, callback:
        ServiceCallback<StorageAccountListKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: keyName
          type:
            - string
          description: >-
            The name of storage keys that want to be regenerated, possible
            values are key1,

            key2, kerb1, kerb2.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListKeysResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.regenerateKey_1'
    name: >-
      regenerateKey(string, string, string,
      ServiceCallback<StorageAccountListKeysResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function regenerateKey(resourceGroupName: string, accountName: string,
        keyName: string, callback:
        ServiceCallback<StorageAccountListKeysResult>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: keyName
          type:
            - string
          description: >-
            The name of storage keys that want to be regenerated, possible
            values are key1,

            key2, kerb1, kerb2.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccountListKeysResult>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.restoreBlobRanges'
    name: >-
      restoreBlobRanges(string, string, Date | string, BlobRestoreRange[],
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restore blobs in the specified blob ranges
    syntax:
      content: >-
        function restoreBlobRanges(resourceGroupName: string, accountName:
        string, timeToRestore: Date | string, blobRanges: BlobRestoreRange[],
        options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: timeToRestore
          type:
            - Date | string
          description: Restore blob to the specified time.
        - id: blobRanges
          type:
            - '@azure/arm-storage.BlobRestoreRange[]'
          description: Blob ranges to restore.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsRestoreBlobRangesResponse>
        description: Promise<Models.StorageAccountsRestoreBlobRangesResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.revokeUserDelegationKeys'
    name: 'revokeUserDelegationKeys(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Revoke user delegation keys.
    syntax:
      content: >-
        function revokeUserDelegationKeys(resourceGroupName: string,
        accountName: string, options?: msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
        description: Promise<msRest.RestResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.revokeUserDelegationKeys_2'
    name: >-
      revokeUserDelegationKeys(string, string, RequestOptionsBase,
      ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function revokeUserDelegationKeys(resourceGroupName: string,
        accountName: string, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.revokeUserDelegationKeys_1'
    name: 'revokeUserDelegationKeys(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function revokeUserDelegationKeys(resourceGroupName: string,
        accountName: string, callback: ServiceCallback<void>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.constructor'
    name: StorageAccounts(StorageManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a StorageAccounts.
    syntax:
      content: 'new StorageAccounts(client: StorageManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-storage.StorageManagementClientContext'
          description: |
            Reference to the service client.
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.update'
    name: >-
      update(string, string, StorageAccountUpdateParameters,
      msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The update operation can be used to update the SKU, encryption, access
      tier, or tags for a

      storage account. It can also be used to map the account to a custom
      domain. Only one custom

      domain is supported per storage account; the replacement/change of custom
      domain is not

      supported. In order to replace an old custom domain, the old value must be
      cleared/unregistered

      before a new value can be set. The update of multiple properties is
      supported. This call does

      not change the storage keys for the account. If you want to change the
      storage account keys, use

      the regenerate keys operation. The location and name of the storage
      account cannot be changed

      after creation.
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        parameters: StorageAccountUpdateParameters, options?:
        msRest.RequestOptionsBase)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.StorageAccountUpdateParameters'
          description: The parameters to provide for the updated account.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.StorageAccountsUpdateResponse>
        description: Promise<Models.StorageAccountsUpdateResponse>
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.update_2'
    name: >-
      update(string, string, StorageAccountUpdateParameters, RequestOptionsBase,
      ServiceCallback<StorageAccount>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        parameters: StorageAccountUpdateParameters, options: RequestOptionsBase,
        callback: ServiceCallback<StorageAccount>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.StorageAccountUpdateParameters'
          description: The parameters to provide for the updated account.
        - id: options
          type:
            - RequestOptionsBase
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccount>
          description: |
            The callback
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.StorageAccounts.update_1'
    name: >-
      update(string, string, StorageAccountUpdateParameters,
      ServiceCallback<StorageAccount>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function update(resourceGroupName: string, accountName: string,
        parameters: StorageAccountUpdateParameters, callback:
        ServiceCallback<StorageAccount>)
      parameters:
        - id: resourceGroupName
          type:
            - string
          description: >-
            The name of the resource group within the user's subscription. The
            name

            is case insensitive.
        - id: accountName
          type:
            - string
          description: >-
            The name of the storage account within the specified resource group.
            Storage

            account names must be between 3 and 24 characters in length and use
            numbers and lower-case

            letters only.
        - id: parameters
          type:
            - '@azure/arm-storage.StorageAccountUpdateParameters'
          description: The parameters to provide for the updated account.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-storage.StorageAccount>
          description: |
            The callback
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.StorageManagementClientContext'
    name: StorageManagementClientContext
    spec.typeScript:
      - name: StorageManagementClientContext
        fullName: StorageManagementClientContext
        uid: '@azure/arm-storage.StorageManagementClientContext'
  - uid: '@azure/arm-storage.StorageAccountCreateParameters'
    name: StorageAccountCreateParameters
    spec.typeScript:
      - name: StorageAccountCreateParameters
        fullName: StorageAccountCreateParameters
        uid: '@azure/arm-storage.StorageAccountCreateParameters'
  - uid: '@azure/arm-storage.BlobRestoreRange[]'
    name: 'BlobRestoreRange[]'
    spec.typeScript:
      - name: BlobRestoreRange
        fullName: BlobRestoreRange
        uid: '@azure/arm-storage.BlobRestoreRange'
      - name: '[]'
        fullName: '[]'
  - uid: ServiceCallback<@azure/arm-storage.CheckNameAvailabilityResult>
    name: CheckNameAvailabilityResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: CheckNameAvailabilityResult
        fullName: CheckNameAvailabilityResult
        uid: '@azure/arm-storage.CheckNameAvailabilityResult'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-storage.StorageAccount>
    name: StorageAccount>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageAccount
        fullName: StorageAccount
        uid: '@azure/arm-storage.StorageAccount'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.StorageAccountsGetPropertiesOptionalParams'
    name: StorageAccountsGetPropertiesOptionalParams
    spec.typeScript:
      - name: StorageAccountsGetPropertiesOptionalParams
        fullName: StorageAccountsGetPropertiesOptionalParams
        uid: '@azure/arm-storage.StorageAccountsGetPropertiesOptionalParams'
  - uid: ServiceCallback<@azure/arm-storage.StorageAccountListResult>
    name: StorageAccountListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageAccountListResult
        fullName: StorageAccountListResult
        uid: '@azure/arm-storage.StorageAccountListResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.AccountSasParameters'
    name: AccountSasParameters
    spec.typeScript:
      - name: AccountSasParameters
        fullName: AccountSasParameters
        uid: '@azure/arm-storage.AccountSasParameters'
  - uid: ServiceCallback<@azure/arm-storage.ListAccountSasResponse>
    name: ListAccountSasResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListAccountSasResponse
        fullName: ListAccountSasResponse
        uid: '@azure/arm-storage.ListAccountSasResponse'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/arm-storage.StorageAccountListKeysResult>
    name: StorageAccountListKeysResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: StorageAccountListKeysResult
        fullName: StorageAccountListKeysResult
        uid: '@azure/arm-storage.StorageAccountListKeysResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.StorageAccountsListKeysOptionalParams'
    name: StorageAccountsListKeysOptionalParams
    spec.typeScript:
      - name: StorageAccountsListKeysOptionalParams
        fullName: StorageAccountsListKeysOptionalParams
        uid: '@azure/arm-storage.StorageAccountsListKeysOptionalParams'
  - uid: '@azure/arm-storage.ServiceSasParameters'
    name: ServiceSasParameters
    spec.typeScript:
      - name: ServiceSasParameters
        fullName: ServiceSasParameters
        uid: '@azure/arm-storage.ServiceSasParameters'
  - uid: ServiceCallback<@azure/arm-storage.ListServiceSasResponse>
    name: ListServiceSasResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: ListServiceSasResponse
        fullName: ListServiceSasResponse
        uid: '@azure/arm-storage.ListServiceSasResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-storage.StorageAccountUpdateParameters'
    name: StorageAccountUpdateParameters
    spec.typeScript:
      - name: StorageAccountUpdateParameters
        fullName: StorageAccountUpdateParameters
        uid: '@azure/arm-storage.StorageAccountUpdateParameters'
