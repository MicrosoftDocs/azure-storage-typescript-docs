### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse'
    name: PathDeleteIfExistsResponse
    fullName: PathDeleteIfExistsResponse
    children:
      - '@azure/storage-file-datalake.PathDeleteIfExistsResponse.continuation'
      - '@azure/storage-file-datalake.PathDeleteIfExistsResponse.date'
      - '@azure/storage-file-datalake.PathDeleteIfExistsResponse.errorCode'
      - '@azure/storage-file-datalake.PathDeleteIfExistsResponse.requestId'
      - '@azure/storage-file-datalake.PathDeleteIfExistsResponse.succeeded'
      - '@azure/storage-file-datalake.PathDeleteIfExistsResponse.version'
    langs:
      - typeScript
    type: interface
    summary: >-
      Contains response data for the <xref:DataLakePathClient.deleteIfExists>
      operation.
    extends:
      name: '@azure/storage-file-datalake.PathDeleteHeaders & Object'
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.continuation'
    name: continuation
    fullName: continuation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When deleting a directory, the number of paths that are deleted with each
      invocation is

      limited.  If the number of paths to be deleted exceeds this limit, a
      continuation token is

      returned in this response header.  When a continuation token is returned
      in the response, it

      must be specified in a subsequent invocation of the delete operation to
      continue deleting the

      directory.
    optional: true
    syntax:
      content: 'continuation?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.date'
    name: date
    fullName: date
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A UTC date/time value generated by the service that indicates the time at
      which the response

      was initiated.
    optional: true
    syntax:
      content: 'date?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.errorCode'
    name: errorCode
    fullName: errorCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'errorCode?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.requestId'
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A server-generated UUID recorded in the analytics logs for troubleshooting
      and correlation.
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.succeeded'
    name: succeeded
    fullName: succeeded
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicate whether the directory/file is successfully deleted. Is false if
      the directory/file doesn't exist in the first place.
    syntax:
      content: 'succeeded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathDeleteIfExistsResponse.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: The version of the REST protocol used to process the request.
    optional: true
    syntax:
      content: 'version?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
references:
  - uid: '@azure/storage-file-datalake.PathDeleteHeaders & Object'
    name: PathDeleteHeaders & Object
    spec.typeScript:
      - name: PathDeleteHeaders
        fullName: PathDeleteHeaders
        uid: '@azure/storage-file-datalake.PathDeleteHeaders'
      - name: ' & Object'
        fullName: ' & Object'
