### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.DataLakeLeaseClient'
    name: DataLakeLeaseClient
    fullName: DataLakeLeaseClient
    children:
      - '@azure/storage-file-datalake.DataLakeLeaseClient.acquireLease'
      - '@azure/storage-file-datalake.DataLakeLeaseClient.breakLease'
      - '@azure/storage-file-datalake.DataLakeLeaseClient.changeLease'
      - '@azure/storage-file-datalake.DataLakeLeaseClient.constructor'
      - '@azure/storage-file-datalake.DataLakeLeaseClient.leaseId'
      - '@azure/storage-file-datalake.DataLakeLeaseClient.releaseLease'
      - '@azure/storage-file-datalake.DataLakeLeaseClient.renewLease'
      - '@azure/storage-file-datalake.DataLakeLeaseClient.url'
    langs:
      - typeScript
    type: class
    summary: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DataLakeLeaseClient.acquireLease'
    name: 'acquireLease(number, LeaseOperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function acquireLease(duration: number, options?: LeaseOperationOptions)'
      parameters:
        - id: duration
          type:
            - number
          description: ''
        - id: options
          type:
            - LeaseOperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<LeaseOperationResponse>
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DataLakeLeaseClient.breakLease'
    name: 'breakLease(number, LeaseOperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function breakLease(breakPeriod: number, options?:
        LeaseOperationOptions)
      parameters:
        - id: breakPeriod
          type:
            - number
          description: ''
        - id: options
          type:
            - LeaseOperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<LeaseOperationResponse>
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DataLakeLeaseClient.changeLease'
    name: 'changeLease(string, LeaseOperationOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function changeLease(proposedLeaseId: string, options?:
        LeaseOperationOptions)
      parameters:
        - id: proposedLeaseId
          type:
            - string
          description: ''
        - id: options
          type:
            - LeaseOperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<LeaseOperationResponse>
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DataLakeLeaseClient.constructor'
    name: DataLakeLeaseClient(BlobLeaseClient)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new DataLakeLeaseClient(client: BlobLeaseClient)'
      parameters:
        - id: client
          type:
            - BlobLeaseClient
          description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DataLakeLeaseClient.leaseId'
    name: leaseId
    fullName: leaseId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string leaseId
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DataLakeLeaseClient.releaseLease'
    name: releaseLease(LeaseOperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function releaseLease(options?: LeaseOperationOptions)'
      parameters:
        - id: options
          type:
            - LeaseOperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<LeaseOperationResponse>
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DataLakeLeaseClient.renewLease'
    name: renewLease(LeaseOperationOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function renewLease(options?: LeaseOperationOptions)'
      parameters:
        - id: options
          type:
            - LeaseOperationOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<Lease>
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DataLakeLeaseClient.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string url
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
