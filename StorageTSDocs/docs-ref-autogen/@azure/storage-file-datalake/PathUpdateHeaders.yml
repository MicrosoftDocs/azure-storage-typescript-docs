### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders'
    name: PathUpdateHeaders
    fullName: PathUpdateHeaders
    children:
      - '@azure/storage-file-datalake.PathUpdateHeaders.acceptRanges'
      - '@azure/storage-file-datalake.PathUpdateHeaders.cacheControl'
      - '@azure/storage-file-datalake.PathUpdateHeaders.contentDisposition'
      - '@azure/storage-file-datalake.PathUpdateHeaders.contentEncoding'
      - '@azure/storage-file-datalake.PathUpdateHeaders.contentLanguage'
      - '@azure/storage-file-datalake.PathUpdateHeaders.contentLength'
      - '@azure/storage-file-datalake.PathUpdateHeaders.contentMD5'
      - '@azure/storage-file-datalake.PathUpdateHeaders.contentRange'
      - '@azure/storage-file-datalake.PathUpdateHeaders.contentType'
      - '@azure/storage-file-datalake.PathUpdateHeaders.date'
      - '@azure/storage-file-datalake.PathUpdateHeaders.errorCode'
      - '@azure/storage-file-datalake.PathUpdateHeaders.etag'
      - '@azure/storage-file-datalake.PathUpdateHeaders.lastModified'
      - '@azure/storage-file-datalake.PathUpdateHeaders.properties'
      - '@azure/storage-file-datalake.PathUpdateHeaders.requestId'
      - '@azure/storage-file-datalake.PathUpdateHeaders.version'
      - '@azure/storage-file-datalake.PathUpdateHeaders.xMsContinuation'
    langs:
      - typeScript
    type: interface
    summary: Defines headers for Update operation.
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.acceptRanges'
    name: acceptRanges
    fullName: acceptRanges
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates that the service supports requests for partial file content.
    optional: true
    syntax:
      content: 'acceptRanges?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.cacheControl'
    name: cacheControl
    fullName: cacheControl
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If the Cache-Control request header has previously been set for the
      resource, that value is

      returned in this header.
    optional: true
    syntax:
      content: 'cacheControl?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.contentDisposition'
    name: contentDisposition
    fullName: contentDisposition
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If the Content-Disposition request header has previously been set for the
      resource, that value

      is returned in this header.
    optional: true
    syntax:
      content: 'contentDisposition?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.contentEncoding'
    name: contentEncoding
    fullName: contentEncoding
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If the Content-Encoding request header has previously been set for the
      resource, that value is

      returned in this header.
    optional: true
    syntax:
      content: 'contentEncoding?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.contentLanguage'
    name: contentLanguage
    fullName: contentLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If the Content-Language request header has previously been set for the
      resource, that value is

      returned in this header.
    optional: true
    syntax:
      content: 'contentLanguage?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.contentLength'
    name: contentLength
    fullName: contentLength
    children: []
    langs:
      - typeScript
    type: property
    summary: The size of the resource in bytes.
    optional: true
    syntax:
      content: 'contentLength?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.contentMD5'
    name: contentMD5
    fullName: contentMD5
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An MD5 hash of the request content. This header is only returned for
      "Append" operation. This

      header is returned so that the client can check for message content
      integrity. The value of

      this header is computed by the service; it is not necessarily the same
      value specified in the

      request headers.
    optional: true
    syntax:
      content: 'contentMD5?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.contentRange'
    name: contentRange
    fullName: contentRange
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicates the range of bytes returned in the event that the client
      requested a subset of the

      file by setting the Range request header.
    optional: true
    syntax:
      content: 'contentRange?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.contentType'
    name: contentType
    fullName: contentType
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The content type specified for the resource. If no content type was
      specified, the default

      content type is application/octet-stream.
    optional: true
    syntax:
      content: 'contentType?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.date'
    name: date
    fullName: date
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A UTC date/time value generated by the service that indicates the time at
      which the response

      was initiated.
    optional: true
    syntax:
      content: 'date?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.errorCode'
    name: errorCode
    fullName: errorCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'errorCode?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: An HTTP entity tag associated with the file or directory.
    optional: true
    syntax:
      content: 'etag?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.lastModified'
    name: lastModified
    fullName: lastModified
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The data and time the file or directory was last modified.  Write
      operations on the file or

      directory update the last modified time.
    optional: true
    syntax:
      content: 'lastModified?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.properties'
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      User-defined properties associated with the file or directory, in the
      format of a

      comma-separated list of name and value pairs "n1=v1, n2=v2, ...", where
      each value is a base64

      encoded string. Note that the string may only contain ASCII characters in
      the ISO-8859-1

      character set.
    optional: true
    syntax:
      content: 'properties?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.requestId'
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A server-generated UUID recorded in the analytics logs for troubleshooting
      and correlation.
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: The version of the REST protocol used to process the request.
    optional: true
    syntax:
      content: 'version?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.PathUpdateHeaders.xMsContinuation'
    name: xMsContinuation
    fullName: xMsContinuation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When performing setAccessControlRecursive on a directory, the number of
      paths that are

      processed with each invocation is limited.  If the number of paths to be
      processed exceeds

      this limit, a continuation token is returned in this response header. 
      When a continuation

      token is returned in the response, it must be specified in a subsequent
      invocation of the

      setAccessControlRecursive operation to continue the
      setAccessControlRecursive operation on the

      directory.
    optional: true
    syntax:
      content: 'xMsContinuation?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
