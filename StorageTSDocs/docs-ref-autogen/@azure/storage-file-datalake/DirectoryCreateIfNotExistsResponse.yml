### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse'
    name: DirectoryCreateIfNotExistsResponse
    fullName: DirectoryCreateIfNotExistsResponse
    children:
      - >-
        @azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.contentLength
      - >-
        @azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.continuation
      - '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.date'
      - >-
        @azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.errorCode
      - '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.etag'
      - >-
        @azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.lastModified
      - >-
        @azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.requestId
      - >-
        @azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.succeeded
      - '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.version'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: '@azure/storage-file-datalake.PathCreateIfNotExistsResponse'
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.contentLength
    name: contentLength
    fullName: contentLength
    children: []
    langs:
      - typeScript
    type: property
    summary: The size of the resource in bytes.
    optional: true
    syntax:
      content: 'contentLength?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.continuation
    name: continuation
    fullName: continuation
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When renaming a directory, the number of paths that are renamed with each
      invocation is

      limited.  If the number of paths to be renamed exceeds this limit, a
      continuation token is

      returned in this response header.  When a continuation token is returned
      in the response, it

      must be specified in a subsequent invocation of the rename operation to
      continue renaming the

      directory.
    optional: true
    syntax:
      content: 'continuation?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.date'
    name: date
    fullName: date
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A UTC date/time value generated by the service that indicates the time at
      which the response

      was initiated.
    optional: true
    syntax:
      content: 'date?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.errorCode'
    name: errorCode
    fullName: errorCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'errorCode?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: An HTTP entity tag associated with the file or directory.
    optional: true
    syntax:
      content: 'etag?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.lastModified
    name: lastModified
    fullName: lastModified
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The data and time the file or directory was last modified.  Write
      operations on the file or

      directory update the last modified time.
    optional: true
    syntax:
      content: 'lastModified?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.requestId'
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A server-generated UUID recorded in the analytics logs for troubleshooting
      and correlation.
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.succeeded'
    name: succeeded
    fullName: succeeded
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicate whether the directory/file is successfully created. Is false when
      the directory/file is not changed as it already exists.
    syntax:
      content: 'succeeded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.DirectoryCreateIfNotExistsResponse.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: The version of the REST protocol used to process the request.
    optional: true
    syntax:
      content: 'version?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
references:
  - uid: '@azure/storage-file-datalake.PathCreateIfNotExistsResponse'
    name: PathCreateIfNotExistsResponse
    spec.typeScript:
      - name: PathCreateIfNotExistsResponse
        fullName: PathCreateIfNotExistsResponse
        uid: '@azure/storage-file-datalake.PathCreateIfNotExistsResponse'
