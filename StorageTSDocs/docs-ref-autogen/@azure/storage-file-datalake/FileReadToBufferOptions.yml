### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.FileReadToBufferOptions'
    name: FileReadToBufferOptions
    fullName: FileReadToBufferOptions
    children:
      - '@azure/storage-file-datalake.FileReadToBufferOptions.abortSignal'
      - '@azure/storage-file-datalake.FileReadToBufferOptions.chunkSize'
      - '@azure/storage-file-datalake.FileReadToBufferOptions.concurrency'
      - '@azure/storage-file-datalake.FileReadToBufferOptions.conditions'
      - >-
        @azure/storage-file-datalake.FileReadToBufferOptions.maxRetryRequestsPerChunk
      - '@azure/storage-file-datalake.FileReadToBufferOptions.onProgress'
      - '@azure/storage-file-datalake.FileReadToBufferOptions.tracingOptions'
    langs:
      - typeScript
    type: interface
    summary: |
      Option interface for Data Lake file - readToBuffer operations
      See:
      - <xref:DataLakeFileClient.readToBuffer>
    extends:
      name: '@azure/storage-file-datalake.CommonOptions'
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileReadToBufferOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileReadToBufferOptions.chunkSize'
    name: chunkSize
    fullName: chunkSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      chunkSize is size of data every request trying to read.

      Must be >= 0, if set to 0 or undefined, it will automatically calculated
      according

      to the file size.
    optional: true
    syntax:
      content: 'chunkSize?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileReadToBufferOptions.concurrency'
    name: concurrency
    fullName: concurrency
    children: []
    langs:
      - typeScript
    type: property
    summary: Concurrency of parallel read.
    optional: true
    syntax:
      content: 'concurrency?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileReadToBufferOptions.conditions'
    name: conditions
    fullName: conditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Access conditions headers.
    optional: true
    syntax:
      content: 'conditions?: DataLakeRequestConditions'
      return:
        type:
          - '@azure/storage-file-datalake.DataLakeRequestConditions'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.FileReadToBufferOptions.maxRetryRequestsPerChunk
    name: maxRetryRequestsPerChunk
    fullName: maxRetryRequestsPerChunk
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      How many retries will perform for each read when the original chunk read
      stream ends unexpectedly.

      Above kind of ends will not trigger retry policy defined in a pipeline,

      because they doesn't emit network errors. Default value is 5.
    optional: true
    syntax:
      content: 'maxRetryRequestsPerChunk?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileReadToBufferOptions.onProgress'
    name: onProgress
    fullName: onProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Progress updater.
    optional: true
    syntax:
      content: 'onProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileReadToBufferOptions.tracingOptions'
    name: tracingOptions
    fullName: tracingOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options to configure spans created when tracing is enabled.
    optional: true
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        type:
          - OperationTracingOptions
        description: ''
    package: '@azure/storage-file-datalake'
references:
  - uid: '@azure/storage-file-datalake.CommonOptions'
    name: CommonOptions
    spec.typeScript:
      - name: CommonOptions
        fullName: CommonOptions
        uid: '@azure/storage-file-datalake.CommonOptions'
  - uid: '@azure/storage-file-datalake.DataLakeRequestConditions'
    name: DataLakeRequestConditions
    spec.typeScript:
      - name: DataLakeRequestConditions
        fullName: DataLakeRequestConditions
        uid: '@azure/storage-file-datalake.DataLakeRequestConditions'
