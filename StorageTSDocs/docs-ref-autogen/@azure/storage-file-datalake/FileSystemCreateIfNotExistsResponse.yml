### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse'
    name: FileSystemCreateIfNotExistsResponse
    fullName: FileSystemCreateIfNotExistsResponse
    children:
      - >-
        @azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.clientRequestId
      - '@azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.date'
      - '@azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.etag'
      - >-
        @azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.lastModified
      - >-
        @azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.requestId
      - >-
        @azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.succeeded
      - '@azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.version'
    langs:
      - typeScript
    type: interface
    summary: >-
      Contains response data for the
      <xref:DataLakeFileSystemClient.createIfNotExists> operation.
    extends:
      name: '@azure/storage-file-datalake.FileSystemCreateHeaders & Object'
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.clientRequestId
    name: clientRequestId
    fullName: clientRequestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'clientRequestId?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.date'
    name: date
    fullName: date
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'date?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'etag?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.lastModified
    name: lastModified
    fullName: lastModified
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'lastModified?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.requestId'
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.succeeded'
    name: succeeded
    fullName: succeeded
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Indicate whether the file system is successfully created. Is false when
      the file system is not changed as it already exists.
    syntax:
      content: 'succeeded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemCreateIfNotExistsResponse.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'version?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
references:
  - uid: '@azure/storage-file-datalake.FileSystemCreateHeaders & Object'
    name: FileSystemCreateHeaders & Object
    spec.typeScript:
      - name: FileSystemCreateHeaders
        fullName: FileSystemCreateHeaders
        uid: '@azure/storage-file-datalake.FileSystemCreateHeaders'
      - name: ' & Object'
        fullName: ' & Object'
