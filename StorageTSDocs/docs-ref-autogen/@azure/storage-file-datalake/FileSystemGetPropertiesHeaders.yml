### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders'
    name: FileSystemGetPropertiesHeaders
    fullName: FileSystemGetPropertiesHeaders
    children:
      - >-
        @azure/storage-file-datalake.FileSystemGetPropertiesHeaders.clientRequestId
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.date'
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.etag'
      - >-
        @azure/storage-file-datalake.FileSystemGetPropertiesHeaders.hasImmutabilityPolicy
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.hasLegalHold'
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.lastModified'
      - >-
        @azure/storage-file-datalake.FileSystemGetPropertiesHeaders.leaseDuration
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.leaseState'
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.leaseStatus'
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.metadata'
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.publicAccess'
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.requestId'
      - '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.version'
    langs:
      - typeScript
    type: interface
    summary: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.FileSystemGetPropertiesHeaders.clientRequestId
    name: clientRequestId
    fullName: clientRequestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'clientRequestId?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.date'
    name: date
    fullName: date
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'date?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'etag?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.FileSystemGetPropertiesHeaders.hasImmutabilityPolicy
    name: hasImmutabilityPolicy
    fullName: hasImmutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'hasImmutabilityPolicy?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.hasLegalHold'
    name: hasLegalHold
    fullName: hasLegalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'hasLegalHold?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.lastModified'
    name: lastModified
    fullName: lastModified
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'lastModified?: Date'
      return:
        type:
          - Date
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.leaseDuration'
    name: leaseDuration
    fullName: leaseDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseDuration?: LeaseDurationType'
      return:
        type:
          - '@azure/storage-file-datalake.LeaseDurationType'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.leaseState'
    name: leaseState
    fullName: leaseState
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseState?: LeaseStateType'
      return:
        type:
          - '@azure/storage-file-datalake.LeaseStateType'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.leaseStatus'
    name: leaseStatus
    fullName: leaseStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'leaseStatus?: LeaseStatusType'
      return:
        type:
          - '@azure/storage-file-datalake.LeaseStatusType'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'metadata?: Metadata'
      return:
        type:
          - '@azure/storage-file-datalake.Metadata'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.publicAccess'
    name: publicAccess
    fullName: publicAccess
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'publicAccess?: PublicAccessType'
      return:
        type:
          - '@azure/storage-file-datalake.PublicAccessType'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.requestId'
    name: requestId
    fullName: requestId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'requestId?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileSystemGetPropertiesHeaders.version'
    name: version
    fullName: version
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'version?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
references:
  - uid: '@azure/storage-file-datalake.LeaseDurationType'
    name: LeaseDurationType
    spec.typeScript:
      - name: LeaseDurationType
        fullName: LeaseDurationType
        uid: '@azure/storage-file-datalake.LeaseDurationType'
  - uid: '@azure/storage-file-datalake.LeaseStateType'
    name: LeaseStateType
    spec.typeScript:
      - name: LeaseStateType
        fullName: LeaseStateType
        uid: '@azure/storage-file-datalake.LeaseStateType'
  - uid: '@azure/storage-file-datalake.LeaseStatusType'
    name: LeaseStatusType
    spec.typeScript:
      - name: LeaseStatusType
        fullName: LeaseStatusType
        uid: '@azure/storage-file-datalake.LeaseStatusType'
  - uid: '@azure/storage-file-datalake.Metadata'
    name: Metadata
    spec.typeScript:
      - name: Metadata
        fullName: Metadata
        uid: '@azure/storage-file-datalake.Metadata'
  - uid: '@azure/storage-file-datalake.PublicAccessType'
    name: PublicAccessType
    spec.typeScript:
      - name: PublicAccessType
        fullName: PublicAccessType
        uid: '@azure/storage-file-datalake.PublicAccessType'
