### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions'
    name: FileParallelUploadOptions
    fullName: FileParallelUploadOptions
    children:
      - '@azure/storage-file-datalake.FileParallelUploadOptions.abortSignal'
      - '@azure/storage-file-datalake.FileParallelUploadOptions.chunkSize'
      - '@azure/storage-file-datalake.FileParallelUploadOptions.close'
      - '@azure/storage-file-datalake.FileParallelUploadOptions.conditions'
      - '@azure/storage-file-datalake.FileParallelUploadOptions.maxConcurrency'
      - '@azure/storage-file-datalake.FileParallelUploadOptions.metadata'
      - '@azure/storage-file-datalake.FileParallelUploadOptions.onProgress'
      - '@azure/storage-file-datalake.FileParallelUploadOptions.pathHttpHeaders'
      - '@azure/storage-file-datalake.FileParallelUploadOptions.permissions'
      - >-
        @azure/storage-file-datalake.FileParallelUploadOptions.singleUploadThreshold
      - '@azure/storage-file-datalake.FileParallelUploadOptions.tracingOptions'
      - '@azure/storage-file-datalake.FileParallelUploadOptions.umask'
    langs:
      - typeScript
    type: interface
    summary: |
      Option interface for Data Lake file - Upload operations
      See:
      - <xref:DataLakeFileClient.upload>
      - <xref:DataLakeFileClient.uploadFile>
      - <xref:DataLakeFileClient.uploadStream>
    extends:
      name: '@azure/storage-file-datalake.CommonOptions'
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An implementation of the `AbortSignalLike` interface to signal the request
      to cancel the operation.

      For example, use the &commat;azure/abort-controller to create an
      `AbortSignal`.
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.chunkSize'
    name: chunkSize
    fullName: chunkSize
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The size of data in bytes that will be transferred in parallel.
      If set to 0 or undefined, it will be automatically calculated according
      to the data size. Its max value is FILE_UPLOAD_MAX_CHUNK_SIZE.
    optional: true
    syntax:
      content: 'chunkSize?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.close'
    name: close
    fullName: close
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When Azure Storage Events are enabled, a file changed event is raised.

      This event has a property indicating whether this is the final change

      to distinguish the difference between an intermediate flush to a file
      stream (when close set to "false")

      and the final close of a file stream (when close set to "true").
    optional: true
    syntax:
      content: 'close?: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.conditions'
    name: conditions
    fullName: conditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Access conditions headers.
    optional: true
    syntax:
      content: 'conditions?: DataLakeRequestConditions'
      return:
        type:
          - '@azure/storage-file-datalake.DataLakeRequestConditions'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.maxConcurrency'
    name: maxConcurrency
    fullName: maxConcurrency
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Max concurrency of parallel uploading. Must be >= 0. Its default value is
      DEFAULT_HIGH_LEVEL_CONCURRENCY.
    optional: true
    syntax:
      content: 'maxConcurrency?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A collection of key-value string pair to associate with the Data Lake
      file.
    optional: true
    syntax:
      content: 'metadata?: Metadata'
      return:
        type:
          - '@azure/storage-file-datalake.Metadata'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.onProgress'
    name: onProgress
    fullName: onProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: Progress updater.
    optional: true
    syntax:
      content: 'onProgress?: (progress: TransferProgressEvent) => void'
      return:
        type:
          - '(progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.pathHttpHeaders'
    name: pathHttpHeaders
    fullName: pathHttpHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: Http headers.
    optional: true
    syntax:
      content: 'pathHttpHeaders?: PathHttpHeaders'
      return:
        type:
          - '@azure/storage-file-datalake.PathHttpHeaders'
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.permissions'
    name: permissions
    fullName: permissions
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Sets POSIX access permissions for the file owner, the file owning group,
      and others.

      Each class may be granted read, write, or execute permission. The sticky
      bit is also supported.

      Both symbolic (rwxrw-rw-) and 4-digit octal notation (e.g. 0766) are
      supported.
    optional: true
    syntax:
      content: 'permissions?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: >-
      @azure/storage-file-datalake.FileParallelUploadOptions.singleUploadThreshold
    name: singleUploadThreshold
    fullName: singleUploadThreshold
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Data size threshold in bytes to use a single upload operation rather than
      parallel uploading.

      Data of smaller size than this limit will be transferred in a single
      upload.

      Data larger than this limit will be transferred in chunks in parallel.

      Its default and max value is FILE_MAX_SINGLE_UPLOAD_THRESHOLD.

      Note: <xref:DataLakeFileClient.uploadStream> do not respect this field and
      always do parallel uploading.
    optional: true
    syntax:
      content: 'singleUploadThreshold?: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.tracingOptions'
    name: tracingOptions
    fullName: tracingOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options to configure spans created when tracing is enabled.
    optional: true
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        type:
          - OperationTracingOptions
        description: ''
    package: '@azure/storage-file-datalake'
  - uid: '@azure/storage-file-datalake.FileParallelUploadOptions.umask'
    name: umask
    fullName: umask
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The umask restricts the permissions of the file to be created.

      The resulting permission is given by p & ^u, where p is the permission and
      u is the umask.

      For example, if p is 0777 and u is 0057, then the resulting permission is
      0720.

      The default permission is 0666 for a file. The default umask is 0027.

      The umask must be specified in 4-digit octal notation (e.g. 0766).
    optional: true
    syntax:
      content: 'umask?: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-file-datalake'
references:
  - uid: '@azure/storage-file-datalake.CommonOptions'
    name: CommonOptions
    spec.typeScript:
      - name: CommonOptions
        fullName: CommonOptions
        uid: '@azure/storage-file-datalake.CommonOptions'
  - uid: '@azure/storage-file-datalake.DataLakeRequestConditions'
    name: DataLakeRequestConditions
    spec.typeScript:
      - name: DataLakeRequestConditions
        fullName: DataLakeRequestConditions
        uid: '@azure/storage-file-datalake.DataLakeRequestConditions'
  - uid: '@azure/storage-file-datalake.Metadata'
    name: Metadata
    spec.typeScript:
      - name: Metadata
        fullName: Metadata
        uid: '@azure/storage-file-datalake.Metadata'
  - uid: '@azure/storage-file-datalake.PathHttpHeaders'
    name: PathHttpHeaders
    spec.typeScript:
      - name: PathHttpHeaders
        fullName: PathHttpHeaders
        uid: '@azure/storage-file-datalake.PathHttpHeaders'
