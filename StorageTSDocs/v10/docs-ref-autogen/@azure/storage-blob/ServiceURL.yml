### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.ServiceURL'
    name: ServiceURL
    fullName: ServiceURL
    children:
      - '@azure/storage-blob.ServiceURL.credential'
      - '@azure/storage-blob.ServiceURL.getAccountInfo'
      - '@azure/storage-blob.ServiceURL.getProperties'
      - '@azure/storage-blob.ServiceURL.getStatistics'
      - '@azure/storage-blob.ServiceURL.getUserDelegationKey'
      - '@azure/storage-blob.ServiceURL.listContainersSegment'
      - '@azure/storage-blob.ServiceURL.newPipeline'
      - '@azure/storage-blob.ServiceURL.pipeline'
      - '@azure/storage-blob.ServiceURL.constructor'
      - '@azure/storage-blob.ServiceURL.setProperties'
      - '@azure/storage-blob.ServiceURL.submitBatch'
      - '@azure/storage-blob.ServiceURL.url'
      - '@azure/storage-blob.ServiceURL.withPipeline'
    langs:
      - typeScript
    type: class
    summary: >-
      A ServiceURL represents a URL to the Azure Storage Blob service allowing
      you

      to manipulate blob containers.
    extends:
      name: '@azure/storage-blob.StorageURL'
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.credential'
    name: credential
    fullName: credential
    children: []
    langs:
      - typeScript
    type: property
    summary: Credential used for authentication and authorization.
    syntax:
      content: 'credential: Credential'
      return:
        type:
          - '@azure/storage-blob.Credential'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.getAccountInfo'
    name: getAccountInfo(Aborter)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Get Account Information operation returns the sku name and account
      kind

      for the specified account.

      The Get Account Information operation is available on service versions
      beginning

      with version 2018-03-28.
    syntax:
      content: 'function getAccountInfo(aborter: Aborter)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-blob.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type:
          - Promise<Models.ServiceGetAccountInfoResponse>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.getProperties'
    name: getProperties(Aborter)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Gets the properties of a storage account’s Blob service, including
      properties

      for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
    syntax:
      content: 'function getProperties(aborter: Aborter)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-blob.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type:
          - Promise<Models.ServiceGetPropertiesResponse>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.getStatistics'
    name: getStatistics(Aborter)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves statistics related to replication for the Blob service. It is
      only

      available on the secondary location endpoint when read-access
      geo-redundant

      replication is enabled for the storage account.
    syntax:
      content: 'function getStatistics(aborter: Aborter)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-blob.Aborter'
          description: ''
      return:
        type:
          - Promise<Models.ServiceGetStatisticsResponse>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.getUserDelegationKey'
    name: 'getUserDelegationKey(Aborter, Date, Date)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      ONLY AVAILABLE WHEN USING BEARER TOKEN AUTHENTICATION (TokenCredential).

      Retrieves a user delegation key for the Blob service. This is only a valid
      operation when using

      bearer token authentication.
    syntax:
      content: >-
        function getUserDelegationKey(aborter: Aborter, start: Date, expiry:
        Date)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-blob.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: start
          type:
            - Date
          description: >-
            The start time for the user delegation SAS. Must be within 7 days of
            the current time
        - id: expiry
          type:
            - Date
          description: >-
            The end time for the user delegation SAS. Must be within 7 days of
            the current time
      return:
        type:
          - Promise<@azure/storage-blob.ServiceGetUserDelegationKeyResponse>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.listContainersSegment'
    name: >-
      listContainersSegment(Aborter, undefined | string,
      IServiceListContainersSegmentOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: Returns a list of the containers under the specified account.
    syntax:
      content: >-
        function listContainersSegment(aborter: Aborter, marker?: undefined |
        string, options?: IServiceListContainersSegmentOptions)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-blob.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: marker
          type:
            - undefined | string
          description: ''
          optional: true
        - id: options
          type:
            - '@azure/storage-blob.IServiceListContainersSegmentOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ServiceListContainersSegmentResponse>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.newPipeline'
    name: 'newPipeline(Credential, INewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      A static method used to create a new Pipeline object with Credential
      provided.
    syntax:
      content: >-
        static function newPipeline(credential: Credential, pipelineOptions?:
        INewPipelineOptions)
      parameters:
        - id: credential
          type:
            - '@azure/storage-blob.Credential'
          description: 'Such as AnonymousCredential, SharedKeyCredential or TokenCredential.'
        - id: pipelineOptions
          type:
            - '@azure/storage-blob.INewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/storage-blob.Pipeline'
        description: A new Pipeline object.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: Request policy pipeline.
    syntax:
      content: 'pipeline: Pipeline'
      return:
        type:
          - '@azure/storage-blob.Pipeline'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.constructor'
    name: 'ServiceURL(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of ServiceURL.
    syntax:
      content: 'new ServiceURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage blob service, such as
                                "https://myaccount.blob.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.blob.core.windows.net?sasString".
        - id: pipeline
          type:
            - '@azure/storage-blob.Pipeline'
          description: |-
            Call StorageURL.newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.setProperties'
    name: 'setProperties(Aborter, StorageServiceProperties)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets properties for a storage account’s Blob service endpoint, including
      properties

      for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft
      delete settings.
    syntax:
      content: >-
        function setProperties(aborter: Aborter, properties:
        StorageServiceProperties)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-blob.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: properties
          type:
            - '@azure/storage-blob.StorageServiceProperties'
          description: ''
      return:
        type:
          - Promise<Models.ServiceSetPropertiesResponse>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.submitBatch'
    name: >-
      submitBatch(Aborter, BatchRequest,
      Models.ServiceSubmitBatchOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: Submit batch request which consists of multiple subrequests.
    syntax:
      content: >-
        function submitBatch(aborter: Aborter, batchRequest: BatchRequest,
        options?: Models.ServiceSubmitBatchOptionalParams)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-blob.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation.
        - id: batchRequest
          type:
            - '@azure/storage-blob.BatchRequest'
          description: 'Supported batch request: BatchDeleteRequest or BatchSetTierRequest.'
        - id: options
          type:
            - Models.ServiceSubmitBatchOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-blob.ServiceSubmitBatchResponse>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: Encoded URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.ServiceURL.withPipeline'
    name: withPipeline(Pipeline)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new ServiceURL object identical to the source but with the
      specified request policy pipeline.
    syntax:
      content: 'function withPipeline(pipeline: Pipeline)'
      parameters:
        - id: pipeline
          type:
            - '@azure/storage-blob.Pipeline'
          description: ''
      return:
        type:
          - '@azure/storage-blob.ServiceURL'
        description: ''
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.StorageURL'
    name: StorageURL
    spec.typeScript:
      - name: StorageURL
        fullName: StorageURL
        uid: '@azure/storage-blob.StorageURL'
  - uid: '@azure/storage-blob.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-blob.Pipeline'
  - uid: '@azure/storage-blob.Credential'
    name: Credential
    spec.typeScript:
      - name: Credential
        fullName: Credential
        uid: '@azure/storage-blob.Credential'
  - uid: '@azure/storage-blob.Aborter'
    name: Aborter
    spec.typeScript:
      - name: Aborter
        fullName: Aborter
        uid: '@azure/storage-blob.Aborter'
  - uid: Promise<@azure/storage-blob.ServiceGetUserDelegationKeyResponse>
    name: ServiceGetUserDelegationKeyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceGetUserDelegationKeyResponse
        fullName: ServiceGetUserDelegationKeyResponse
        uid: '@azure/storage-blob.ServiceGetUserDelegationKeyResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.IServiceListContainersSegmentOptions'
    name: IServiceListContainersSegmentOptions
    spec.typeScript:
      - name: IServiceListContainersSegmentOptions
        fullName: IServiceListContainersSegmentOptions
        uid: '@azure/storage-blob.IServiceListContainersSegmentOptions'
  - uid: '@azure/storage-blob.StorageServiceProperties'
    name: StorageServiceProperties
    spec.typeScript:
      - name: StorageServiceProperties
        fullName: StorageServiceProperties
        uid: '@azure/storage-blob.StorageServiceProperties'
  - uid: '@azure/storage-blob.BatchRequest'
    name: BatchRequest
    spec.typeScript:
      - name: BatchRequest
        fullName: BatchRequest
        uid: '@azure/storage-blob.BatchRequest'
  - uid: Promise<@azure/storage-blob.ServiceSubmitBatchResponse>
    name: ServiceSubmitBatchResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceSubmitBatchResponse
        fullName: ServiceSubmitBatchResponse
        uid: '@azure/storage-blob.ServiceSubmitBatchResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-blob.ServiceURL'
    name: ServiceURL
    spec.typeScript:
      - name: ServiceURL
        fullName: ServiceURL
        uid: '@azure/storage-blob.ServiceURL'
  - uid: '@azure/storage-blob.INewPipelineOptions'
    name: INewPipelineOptions
    spec.typeScript:
      - name: INewPipelineOptions
        fullName: INewPipelineOptions
        uid: '@azure/storage-blob.INewPipelineOptions'
