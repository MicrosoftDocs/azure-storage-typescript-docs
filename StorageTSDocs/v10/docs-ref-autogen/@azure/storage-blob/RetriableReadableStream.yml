### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.RetriableReadableStream'
    name: RetriableReadableStream
    fullName: RetriableReadableStream
    children:
      - '@azure/storage-blob.RetriableReadableStream.addListener'
      - '@azure/storage-blob.RetriableReadableStream.addListener_1'
      - '@azure/storage-blob.RetriableReadableStream.addListener_2'
      - '@azure/storage-blob.RetriableReadableStream.addListener_3'
      - '@azure/storage-blob.RetriableReadableStream.addListener_4'
      - '@azure/storage-blob.RetriableReadableStream.addListener_5'
      - '@azure/storage-blob.RetriableReadableStream.addListener_6'
      - '@azure/storage-blob.RetriableReadableStream.addListener_7'
      - '@azure/storage-blob.RetriableReadableStream.destroy'
      - '@azure/storage-blob.RetriableReadableStream.destroyed'
      - '@azure/storage-blob.RetriableReadableStream.emit'
      - '@azure/storage-blob.RetriableReadableStream.emit_1'
      - '@azure/storage-blob.RetriableReadableStream.emit_2'
      - '@azure/storage-blob.RetriableReadableStream.emit_3'
      - '@azure/storage-blob.RetriableReadableStream.emit_4'
      - '@azure/storage-blob.RetriableReadableStream.emit_5'
      - '@azure/storage-blob.RetriableReadableStream.emit_6'
      - '@azure/storage-blob.RetriableReadableStream.emit_7'
      - '@azure/storage-blob.RetriableReadableStream.eventNames'
      - '@azure/storage-blob.RetriableReadableStream.from'
      - '@azure/storage-blob.RetriableReadableStream.getMaxListeners'
      - '@azure/storage-blob.RetriableReadableStream.isPaused'
      - '@azure/storage-blob.RetriableReadableStream.listenerCount'
      - '@azure/storage-blob.RetriableReadableStream.listeners'
      - '@azure/storage-blob.RetriableReadableStream.off'
      - '@azure/storage-blob.RetriableReadableStream.on'
      - '@azure/storage-blob.RetriableReadableStream.on_1'
      - '@azure/storage-blob.RetriableReadableStream.on_2'
      - '@azure/storage-blob.RetriableReadableStream.on_3'
      - '@azure/storage-blob.RetriableReadableStream.on_4'
      - '@azure/storage-blob.RetriableReadableStream.on_5'
      - '@azure/storage-blob.RetriableReadableStream.on_6'
      - '@azure/storage-blob.RetriableReadableStream.on_7'
      - '@azure/storage-blob.RetriableReadableStream.once'
      - '@azure/storage-blob.RetriableReadableStream.once_1'
      - '@azure/storage-blob.RetriableReadableStream.once_2'
      - '@azure/storage-blob.RetriableReadableStream.once_3'
      - '@azure/storage-blob.RetriableReadableStream.once_4'
      - '@azure/storage-blob.RetriableReadableStream.once_5'
      - '@azure/storage-blob.RetriableReadableStream.once_6'
      - '@azure/storage-blob.RetriableReadableStream.once_7'
      - '@azure/storage-blob.RetriableReadableStream.pause'
      - '@azure/storage-blob.RetriableReadableStream.pipe'
      - '@azure/storage-blob.RetriableReadableStream.prependListener'
      - '@azure/storage-blob.RetriableReadableStream.prependListener_1'
      - '@azure/storage-blob.RetriableReadableStream.prependListener_2'
      - '@azure/storage-blob.RetriableReadableStream.prependListener_3'
      - '@azure/storage-blob.RetriableReadableStream.prependListener_4'
      - '@azure/storage-blob.RetriableReadableStream.prependListener_5'
      - '@azure/storage-blob.RetriableReadableStream.prependListener_6'
      - '@azure/storage-blob.RetriableReadableStream.prependListener_7'
      - '@azure/storage-blob.RetriableReadableStream.prependOnceListener'
      - '@azure/storage-blob.RetriableReadableStream.prependOnceListener_1'
      - '@azure/storage-blob.RetriableReadableStream.prependOnceListener_2'
      - '@azure/storage-blob.RetriableReadableStream.prependOnceListener_3'
      - '@azure/storage-blob.RetriableReadableStream.prependOnceListener_4'
      - '@azure/storage-blob.RetriableReadableStream.prependOnceListener_5'
      - '@azure/storage-blob.RetriableReadableStream.prependOnceListener_6'
      - '@azure/storage-blob.RetriableReadableStream.prependOnceListener_7'
      - '@azure/storage-blob.RetriableReadableStream.push'
      - '@azure/storage-blob.RetriableReadableStream.rawListeners'
      - '@azure/storage-blob.RetriableReadableStream.read'
      - '@azure/storage-blob.RetriableReadableStream.readable'
      - '@azure/storage-blob.RetriableReadableStream.readableEncoding'
      - '@azure/storage-blob.RetriableReadableStream.readableEnded'
      - '@azure/storage-blob.RetriableReadableStream.readableFlowing'
      - '@azure/storage-blob.RetriableReadableStream.readableHighWaterMark'
      - '@azure/storage-blob.RetriableReadableStream.readableLength'
      - '@azure/storage-blob.RetriableReadableStream.readableObjectMode'
      - '@azure/storage-blob.RetriableReadableStream.removeAllListeners'
      - '@azure/storage-blob.RetriableReadableStream.removeListener'
      - '@azure/storage-blob.RetriableReadableStream.removeListener_1'
      - '@azure/storage-blob.RetriableReadableStream.removeListener_2'
      - '@azure/storage-blob.RetriableReadableStream.removeListener_3'
      - '@azure/storage-blob.RetriableReadableStream.removeListener_4'
      - '@azure/storage-blob.RetriableReadableStream.removeListener_5'
      - '@azure/storage-blob.RetriableReadableStream.removeListener_6'
      - '@azure/storage-blob.RetriableReadableStream.removeListener_7'
      - '@azure/storage-blob.RetriableReadableStream.resume'
      - '@azure/storage-blob.RetriableReadableStream.constructor'
      - '@azure/storage-blob.RetriableReadableStream.setEncoding'
      - '@azure/storage-blob.RetriableReadableStream.setMaxListeners'
      - '@azure/storage-blob.RetriableReadableStream.unpipe'
      - '@azure/storage-blob.RetriableReadableStream.unshift'
      - '@azure/storage-blob.RetriableReadableStream.wrap'
    langs:
      - typeScript
    type: class
    summary: >
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      A Node.js ReadableStream will internally retry when internal
      ReadableStream unexpected ends.
    extends:
      name: Readable
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.addListener'
    name: 'addListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Event emitter
      The defined events on documents including:
      1. close
      2. data
      3. end
      4. error
      5. pause
      6. readable
      7. resume
    syntax:
      content: 'function addListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.addListener_1'
    name: 'addListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.addListener_2'
    name: 'addListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.addListener_3'
    name: 'addListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.addListener_4'
    name: 'addListener("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.addListener_5'
    name: 'addListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.addListener_6'
    name: 'addListener("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.addListener_7'
    name: 'addListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addListener(event: string | symbol, listener: (args: any[]) =>
        void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.destroy'
    name: destroy(Error)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function destroy(error?: Error)'
      parameters:
        - id: error
          type:
            - Error
          description: ''
          optional: true
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.destroyed'
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'destroyed: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.emit'
    name: emit("close")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "close")'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.emit_1'
    name: 'emit("data", any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "data", chunk: any)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: chunk
          type:
            - any
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.emit_2'
    name: emit("end")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "end")'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.emit_3'
    name: 'emit("error", Error)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "error", err: Error)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: err
          type:
            - Error
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.emit_4'
    name: emit("pause")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "pause")'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.emit_5'
    name: emit("readable")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "readable")'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.emit_6'
    name: emit("resume")
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: "resume")'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.emit_7'
    name: 'emit(string | symbol, any[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function emit(event: string | symbol, args: any[])'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.eventNames'
    name: eventNames()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function eventNames()
      parameters: []
      return:
        type:
          - Array<string | symbol>
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.from'
    name: 'from(Iterable<any> | AsyncIterable<any>, ReadableOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: A utility method for creating Readable Streams out of iterators.
    syntax:
      content: >-
        static function from(iterable: Iterable<any> | AsyncIterable<any>,
        options?: ReadableOptions)
      parameters:
        - id: iterable
          type:
            - Iterable<any> | AsyncIterable<any>
          description: ''
        - id: options
          type:
            - ReadableOptions
          description: ''
          optional: true
      return:
        type:
          - Readable
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.getMaxListeners'
    name: getMaxListeners()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMaxListeners()
      parameters: []
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.isPaused'
    name: isPaused()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isPaused()
      parameters: []
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.listenerCount'
    name: listenerCount(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listenerCount(type: string | symbol)'
      parameters:
        - id: type
          type:
            - string | symbol
          description: ''
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.listeners'
    name: listeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.off'
    name: 'off(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function off(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.on'
    name: 'on("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.on_1'
    name: 'on("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.on_2'
    name: 'on("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.on_3'
    name: 'on("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.on_4'
    name: 'on("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.on_5'
    name: 'on("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.on_6'
    name: 'on("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.on_7'
    name: 'on(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function on(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.once'
    name: 'once("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.once_1'
    name: 'once("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.once_2'
    name: 'once("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.once_3'
    name: 'once("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.once_4'
    name: 'once("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.once_5'
    name: 'once("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.once_6'
    name: 'once("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.once_7'
    name: 'once(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function once(event: string | symbol, listener: (args: any[]) => void)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.pause'
    name: pause()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function pause()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.pipe'
    name: 'pipe(T, undefined | Object)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pipe<T>(destination: T, options?: undefined | Object)'
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - undefined | Object
          description: ''
          optional: true
      return:
        type:
          - T
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependListener'
    name: 'prependListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependListener_1'
    name: 'prependListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependListener_2'
    name: 'prependListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependListener_3'
    name: 'prependListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependListener_4'
    name: 'prependListener("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependListener_5'
    name: 'prependListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependListener_6'
    name: 'prependListener("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependListener_7'
    name: 'prependListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependOnceListener'
    name: 'prependOnceListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependOnceListener_1'
    name: 'prependOnceListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "data", listener: (chunk: any) =>
        void)
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependOnceListener_2'
    name: 'prependOnceListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependOnceListener_3'
    name: 'prependOnceListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: "error", listener: (err: Error) =>
        void)
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependOnceListener_4'
    name: 'prependOnceListener("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependOnceListener_5'
    name: 'prependOnceListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependOnceListener_6'
    name: 'prependOnceListener("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function prependOnceListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.prependOnceListener_7'
    name: 'prependOnceListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function prependOnceListener(event: string | symbol, listener: (args:
        any[]) => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.push'
    name: 'push(any, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function push(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - BufferEncoding
          description: ''
          optional: true
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.rawListeners'
    name: rawListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rawListeners(event: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
      return:
        type:
          - 'Function[]'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.read'
    name: read(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function read(size?: undefined | number)'
      parameters:
        - id: size
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - any
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.readable'
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readable: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.readableEncoding'
    name: readableEncoding
    fullName: readableEncoding
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableEncoding: BufferEncoding | null'
      return:
        type:
          - BufferEncoding | null
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.readableEnded'
    name: readableEnded
    fullName: readableEnded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableEnded: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.readableFlowing'
    name: readableFlowing
    fullName: readableFlowing
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableFlowing: boolean | null'
      return:
        type:
          - boolean | null
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.readableHighWaterMark'
    name: readableHighWaterMark
    fullName: readableHighWaterMark
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableHighWaterMark: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.readableLength'
    name: readableLength
    fullName: readableLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableLength: number'
      return:
        type:
          - number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.readableObjectMode'
    name: readableObjectMode
    fullName: readableObjectMode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'readableObjectMode: boolean'
      return:
        type:
          - boolean
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.removeAllListeners'
    name: removeAllListeners(string | symbol)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeAllListeners(event?: string | symbol)'
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.removeListener'
    name: 'removeListener("close", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "close", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"close"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.removeListener_1'
    name: 'removeListener("data", (chunk: any) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "data", listener: (chunk: any) => void)'
      parameters:
        - id: event
          type:
            - '"data"'
          description: ''
        - id: listener
          type:
            - '(chunk: any) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.removeListener_2'
    name: 'removeListener("end", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "end", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"end"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.removeListener_3'
    name: 'removeListener("error", (err: Error) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "error", listener: (err: Error) => void)'
      parameters:
        - id: event
          type:
            - '"error"'
          description: ''
        - id: listener
          type:
            - '(err: Error) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.removeListener_4'
    name: 'removeListener("pause", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "pause", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"pause"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.removeListener_5'
    name: 'removeListener("readable", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "readable", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"readable"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.removeListener_6'
    name: 'removeListener("resume", () => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeListener(event: "resume", listener: () => void)'
      parameters:
        - id: event
          type:
            - '"resume"'
          description: ''
        - id: listener
          type:
            - () => void
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.removeListener_7'
    name: 'removeListener(string | symbol, (args: any[]) => void)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeListener(event: string | symbol, listener: (args: any[])
        => void)
      parameters:
        - id: event
          type:
            - string | symbol
          description: ''
        - id: listener
          type:
            - '(args: any[]) => void'
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.resume'
    name: resume()
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function resume()
      parameters: []
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.constructor'
    name: >-
      RetriableReadableStream(Aborter, ReadableStream, ReadableStreamGetter,
      number, number, IRetriableReadableStreamOptions)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of RetriableReadableStream.
    syntax:
      content: >-
        new RetriableReadableStream(aborter: Aborter, source: ReadableStream,
        getter: ReadableStreamGetter, offset: number, count: number, options?:
        IRetriableReadableStreamOptions)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-blob.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: source
          type:
            - ReadableStream
          description: The current ReadableStream returned from getter
        - id: getter
          type:
            - '@azure/storage-blob.ReadableStreamGetter'
          description: |-
            A method calling downloading request returning
                                                 a new ReadableStream from specified offset
        - id: offset
          type:
            - number
          description: Offset position in original data source to read
        - id: count
          type:
            - number
          description: How much data in original data source to read
        - id: options
          type:
            - '@azure/storage-blob.IRetriableReadableStreamOptions'
          description: ''
          optional: true
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.setEncoding'
    name: setEncoding(BufferEncoding)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setEncoding(encoding: BufferEncoding)'
      parameters:
        - id: encoding
          type:
            - BufferEncoding
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.setMaxListeners'
    name: setMaxListeners(number)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMaxListeners(n: number)'
      parameters:
        - id: 'n'
          type:
            - number
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.unpipe'
    name: unpipe(NodeJS.WritableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unpipe(destination?: NodeJS.WritableStream)'
      parameters:
        - id: destination
          type:
            - NodeJS.WritableStream
          description: ''
          optional: true
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.unshift'
    name: 'unshift(any, BufferEncoding)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unshift(chunk: any, encoding?: BufferEncoding)'
      parameters:
        - id: chunk
          type:
            - any
          description: ''
        - id: encoding
          type:
            - BufferEncoding
          description: ''
          optional: true
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.RetriableReadableStream.wrap'
    name: wrap(ReadableStream)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function wrap(oldStream: ReadableStream)'
      parameters:
        - id: oldStream
          type:
            - ReadableStream
          description: ''
      return:
        type:
          - this
        description: ''
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.Aborter'
    name: Aborter
    spec.typeScript:
      - name: Aborter
        fullName: Aborter
        uid: '@azure/storage-blob.Aborter'
  - uid: '@azure/storage-blob.ReadableStreamGetter'
    name: ReadableStreamGetter
    spec.typeScript:
      - name: ReadableStreamGetter
        fullName: ReadableStreamGetter
        uid: '@azure/storage-blob.ReadableStreamGetter'
  - uid: '@azure/storage-blob.IRetriableReadableStreamOptions'
    name: IRetriableReadableStreamOptions
    spec.typeScript:
      - name: IRetriableReadableStreamOptions
        fullName: IRetriableReadableStreamOptions
        uid: '@azure/storage-blob.IRetriableReadableStreamOptions'
