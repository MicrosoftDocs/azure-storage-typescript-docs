### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-blob.IDownloadFromBlobOptions'
    name: IDownloadFromBlobOptions
    fullName: IDownloadFromBlobOptions
    children:
      - '@azure/storage-blob.IDownloadFromBlobOptions.blobAccessConditions'
      - '@azure/storage-blob.IDownloadFromBlobOptions.blockSize'
      - '@azure/storage-blob.IDownloadFromBlobOptions.maxRetryRequestsPerBlock'
      - '@azure/storage-blob.IDownloadFromBlobOptions.parallelism'
      - '@azure/storage-blob.IDownloadFromBlobOptions.progress'
    langs:
      - typeScript
    type: interface
    summary: Option interface for DownloadBlockBlobToBuffer.
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IDownloadFromBlobOptions.blobAccessConditions'
    name: blobAccessConditions
    fullName: blobAccessConditions
    children: []
    langs:
      - typeScript
    type: property
    summary: Access conditions headers.
    optional: true
    syntax:
      content: 'blobAccessConditions?: IBlobAccessConditions'
      return:
        type:
          - '@azure/storage-blob.IBlobAccessConditions'
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IDownloadFromBlobOptions.blockSize'
    name: blockSize
    fullName: blockSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      blockSize is the data every request trying to download.

      Must be >= 0, if set to 0 or undefined, blockSize will automatically
      calculated according

      to the blob size.
    optional: true
    syntax:
      content: 'blockSize?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IDownloadFromBlobOptions.maxRetryRequestsPerBlock'
    name: maxRetryRequestsPerBlock
    fullName: maxRetryRequestsPerBlock
    children: []
    langs:
      - typeScript
    type: property
    summary: >
      Optional. ONLY AVAILABLE IN NODE.JS.

      How many retries will perform when original block download stream
      unexpected ends.

      Above kind of ends will not trigger retry policy defined in a pipeline,

      because they doesn't emit network errors.


      With this option, every additional retry means an additional
      FileURL.download() request will be made

      from the broken point, until the requested block has been successfully
      downloaded or

      maxRetryRequestsPerBlock is reached.


      Default value is 5, please set a larger value when in poor network.
    optional: true
    syntax:
      content: 'maxRetryRequestsPerBlock?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IDownloadFromBlobOptions.parallelism'
    name: parallelism
    fullName: parallelism
    children: []
    langs:
      - typeScript
    type: property
    summary: Concurrency of parallel download.
    optional: true
    syntax:
      content: 'parallelism?: undefined | number'
      return:
        type:
          - undefined | number
        description: ''
    package: '@azure/storage-blob'
  - uid: '@azure/storage-blob.IDownloadFromBlobOptions.progress'
    name: progress
    fullName: progress
    children: []
    langs:
      - typeScript
    type: property
    summary: Progress updater.
    optional: true
    syntax:
      content: 'progress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
        description: ''
    package: '@azure/storage-blob'
references:
  - uid: '@azure/storage-blob.IBlobAccessConditions'
    name: IBlobAccessConditions
    spec.typeScript:
      - name: IBlobAccessConditions
        fullName: IBlobAccessConditions
        uid: '@azure/storage-blob.IBlobAccessConditions'
