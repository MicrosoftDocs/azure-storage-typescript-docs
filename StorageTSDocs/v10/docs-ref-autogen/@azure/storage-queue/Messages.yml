### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-queue.Messages'
    name: Messages
    fullName: Messages
    children:
      - '@azure/storage-queue.Messages.clear_2'
      - '@azure/storage-queue.Messages.clear'
      - '@azure/storage-queue.Messages.clear_1'
      - '@azure/storage-queue.Messages.dequeue_2'
      - '@azure/storage-queue.Messages.dequeue'
      - '@azure/storage-queue.Messages.dequeue_1'
      - '@azure/storage-queue.Messages.enqueue_2'
      - '@azure/storage-queue.Messages.enqueue'
      - '@azure/storage-queue.Messages.enqueue_1'
      - '@azure/storage-queue.Messages.constructor'
      - '@azure/storage-queue.Messages.peek_2'
      - '@azure/storage-queue.Messages.peek'
      - '@azure/storage-queue.Messages.peek_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Messages.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.clear_2'
    name: 'clear(MessagesClearOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function clear(options: MessagesClearOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.MessagesClearOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.clear'
    name: clear(Models.MessagesClearOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: The Clear operation deletes all messages from the specified queue.
    syntax:
      content: 'function clear(options?: Models.MessagesClearOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.MessagesClearOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MessagesClearResponse>
        description: Promise<Models.MessagesClearResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.clear_1'
    name: clear(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clear(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.dequeue_2'
    name: >-
      dequeue(MessagesDequeueOptionalParams,
      ServiceCallback<DequeuedMessageItem[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function dequeue(options: MessagesDequeueOptionalParams, callback:
        ServiceCallback<DequeuedMessageItem[]>)
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.MessagesDequeueOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/storage-queue.DequeuedMessageItem[]>'
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.dequeue'
    name: dequeue(Models.MessagesDequeueOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Dequeue operation retrieves one or more messages from the front of the
      queue.
    syntax:
      content: 'function dequeue(options?: Models.MessagesDequeueOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.MessagesDequeueOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MessagesDequeueResponse>
        description: Promise<Models.MessagesDequeueResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.dequeue_1'
    name: 'dequeue(ServiceCallback<DequeuedMessageItem[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function dequeue(callback: ServiceCallback<DequeuedMessageItem[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/storage-queue.DequeuedMessageItem[]>'
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.enqueue_2'
    name: >-
      enqueue(QueueMessage, MessagesEnqueueOptionalParams,
      ServiceCallback<EnqueuedMessage[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function enqueue(queueMessage: QueueMessage, options:
        MessagesEnqueueOptionalParams, callback:
        ServiceCallback<EnqueuedMessage[]>)
      parameters:
        - id: queueMessage
          type:
            - '@azure/storage-queue.QueueMessage'
          description: A Message object which can be stored in a Queue
        - id: options
          type:
            - '@azure/storage-queue.MessagesEnqueueOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/storage-queue.EnqueuedMessage[]>'
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.enqueue'
    name: 'enqueue(QueueMessage, Models.MessagesEnqueueOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Enqueue operation adds a new message to the back of the message queue.
      A visibility timeout

      can also be specified to make the message invisible until the visibility
      timeout expires. A

      message must be in a format that can be included in an XML request with
      UTF-8 encoding. The

      encoded message can be up to 64 KB in size for versions 2011-08-18 and
      newer, or 8 KB in size

      for previous versions.
    syntax:
      content: >-
        function enqueue(queueMessage: QueueMessage, options?:
        Models.MessagesEnqueueOptionalParams)
      parameters:
        - id: queueMessage
          type:
            - '@azure/storage-queue.QueueMessage'
          description: A Message object which can be stored in a Queue
        - id: options
          type:
            - Models.MessagesEnqueueOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MessagesEnqueueResponse>
        description: Promise<Models.MessagesEnqueueResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.enqueue_1'
    name: 'enqueue(QueueMessage, ServiceCallback<EnqueuedMessage[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function enqueue(queueMessage: QueueMessage, callback:
        ServiceCallback<EnqueuedMessage[]>)
      parameters:
        - id: queueMessage
          type:
            - '@azure/storage-queue.QueueMessage'
          description: A Message object which can be stored in a Queue
        - id: callback
          type:
            - 'ServiceCallback<@azure/storage-queue.EnqueuedMessage[]>'
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.constructor'
    name: Messages(StorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Messages.
    syntax:
      content: 'new Messages(client: StorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-queue.StorageClientContext'
          description: |
            Reference to the service client.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.peek_2'
    name: 'peek(MessagesPeekOptionalParams, ServiceCallback<PeekedMessageItem[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function peek(options: MessagesPeekOptionalParams, callback:
        ServiceCallback<PeekedMessageItem[]>)
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.MessagesPeekOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/storage-queue.PeekedMessageItem[]>'
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.peek'
    name: peek(Models.MessagesPeekOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      The Peek operation retrieves one or more messages from the front of the
      queue, but does not

      alter the visibility of the message.
    syntax:
      content: 'function peek(options?: Models.MessagesPeekOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.MessagesPeekOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.MessagesPeekResponse>
        description: Promise<Models.MessagesPeekResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Messages.peek_1'
    name: 'peek(ServiceCallback<PeekedMessageItem[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function peek(callback: ServiceCallback<PeekedMessageItem[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/storage-queue.PeekedMessageItem[]>'
          description: |
            The callback
    package: '@azure/storage-queue'
references:
  - uid: '@azure/storage-queue.StorageClientContext'
    name: StorageClientContext
    spec.typeScript:
      - name: StorageClientContext
        fullName: StorageClientContext
        uid: '@azure/storage-queue.StorageClientContext'
  - uid: '@azure/storage-queue.MessagesClearOptionalParams'
    name: MessagesClearOptionalParams
    spec.typeScript:
      - name: MessagesClearOptionalParams
        fullName: MessagesClearOptionalParams
        uid: '@azure/storage-queue.MessagesClearOptionalParams'
  - uid: 'ServiceCallback<@azure/storage-queue.DequeuedMessageItem[]>'
    name: 'DequeuedMessageItem[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DequeuedMessageItem
        fullName: DequeuedMessageItem
        uid: '@azure/storage-queue.DequeuedMessageItem'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/storage-queue.MessagesDequeueOptionalParams'
    name: MessagesDequeueOptionalParams
    spec.typeScript:
      - name: MessagesDequeueOptionalParams
        fullName: MessagesDequeueOptionalParams
        uid: '@azure/storage-queue.MessagesDequeueOptionalParams'
  - uid: '@azure/storage-queue.QueueMessage'
    name: QueueMessage
    spec.typeScript:
      - name: QueueMessage
        fullName: QueueMessage
        uid: '@azure/storage-queue.QueueMessage'
  - uid: 'ServiceCallback<@azure/storage-queue.EnqueuedMessage[]>'
    name: 'EnqueuedMessage[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EnqueuedMessage
        fullName: EnqueuedMessage
        uid: '@azure/storage-queue.EnqueuedMessage'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/storage-queue.MessagesEnqueueOptionalParams'
    name: MessagesEnqueueOptionalParams
    spec.typeScript:
      - name: MessagesEnqueueOptionalParams
        fullName: MessagesEnqueueOptionalParams
        uid: '@azure/storage-queue.MessagesEnqueueOptionalParams'
  - uid: 'ServiceCallback<@azure/storage-queue.PeekedMessageItem[]>'
    name: 'PeekedMessageItem[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PeekedMessageItem
        fullName: PeekedMessageItem
        uid: '@azure/storage-queue.PeekedMessageItem'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/storage-queue.MessagesPeekOptionalParams'
    name: MessagesPeekOptionalParams
    spec.typeScript:
      - name: MessagesPeekOptionalParams
        fullName: MessagesPeekOptionalParams
        uid: '@azure/storage-queue.MessagesPeekOptionalParams'
