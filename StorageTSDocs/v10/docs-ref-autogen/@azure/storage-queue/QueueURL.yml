### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-queue.QueueURL'
    name: QueueURL
    fullName: QueueURL
    children:
      - '@azure/storage-queue.QueueURL.create'
      - '@azure/storage-queue.QueueURL.delete'
      - '@azure/storage-queue.QueueURL.fromServiceURL'
      - '@azure/storage-queue.QueueURL.getAccessPolicy'
      - '@azure/storage-queue.QueueURL.getProperties'
      - '@azure/storage-queue.QueueURL.newPipeline'
      - '@azure/storage-queue.QueueURL.pipeline'
      - '@azure/storage-queue.QueueURL.constructor'
      - '@azure/storage-queue.QueueURL.setAccessPolicy'
      - '@azure/storage-queue.QueueURL.setMetadata'
      - '@azure/storage-queue.QueueURL.url'
      - '@azure/storage-queue.QueueURL.withPipeline'
    langs:
      - typeScript
    type: class
    summary: A QueueURL represents a URL to the Azure Storage queue.
    extends:
      name: '@azure/storage-queue.StorageURL'
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.create'
    name: 'create(Aborter, IQueueCreateOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a new queue under the specified account.
    syntax:
      content: 'function create(aborter: Aborter, options?: IQueueCreateOptions)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: options
          type:
            - '@azure/storage-queue.IQueueCreateOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueCreateResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.delete'
    name: delete(Aborter)
    children: []
    type: method
    langs:
      - typeScript
    summary: Deletes the specified queue permanently.
    syntax:
      content: 'function delete(aborter: Aborter)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type:
          - Promise<Models.QueueDeleteResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.fromServiceURL'
    name: 'fromServiceURL(ServiceURL, string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a QueueURL object from ServiceURL
    syntax:
      content: >-
        static function fromServiceURL(serviceURL: ServiceURL, queueName:
        string)
      parameters:
        - id: serviceURL
          type:
            - '@azure/storage-queue.ServiceURL'
          description: ''
        - id: queueName
          type:
            - string
          description: |+

      return:
        type:
          - '@azure/storage-queue.QueueURL'
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.getAccessPolicy'
    name: getAccessPolicy(Aborter)
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Gets details about any stored access policies specified on the queue that
      may be used with Shared Access Signatures.

      WARNING: JavaScript Date will potential lost precision when parsing start
      and expiry string.

      For example, new Date("2018-12-31T03:44:23.8827891Z").toISOString() will
      get "2018-12-31T03:44:23.882Z".
    syntax:
      content: 'function getAccessPolicy(aborter: Aborter)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type:
          - Promise<@azure/storage-queue.QueueGetAccessPolicyResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.getProperties'
    name: getProperties(Aborter)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets all user-defined metadata and system properties for the specified
      queue. Metadata is associated with the queue as name-values pairs.
    syntax:
      content: 'function getProperties(aborter: Aborter)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type:
          - Promise<Models.QueueGetPropertiesResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.newPipeline'
    name: 'newPipeline(Credential, INewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      A static method used to create a new Pipeline object with Credential
      provided.
    syntax:
      content: >-
        static function newPipeline(credential: Credential, pipelineOptions?:
        INewPipelineOptions)
      parameters:
        - id: credential
          type:
            - '@azure/storage-queue.Credential'
          description: 'Such as AnonymousCredential, SharedKeyCredential or TokenCredential.'
        - id: pipelineOptions
          type:
            - '@azure/storage-queue.INewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/storage-queue.Pipeline'
        description: A new Pipeline object.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: Request policy pipeline.
    syntax:
      content: 'pipeline: Pipeline'
      return:
        type:
          - '@azure/storage-queue.Pipeline'
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.constructor'
    name: 'QueueURL(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of QueueURL.
    syntax:
      content: 'new QueueURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage queue, such as
                                "https://myaccount.queue.core.windows.net/myqueue". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.queue.core.windows.net/myqueue?sasString".
        - id: pipeline
          type:
            - '@azure/storage-queue.Pipeline'
          description: |-
            Call StorageURL.newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.setAccessPolicy'
    name: 'setAccessPolicy(Aborter, ISignedIdentifier[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets stored access policies for the queue that may be used with Shared
      Access Signatures.
    syntax:
      content: >-
        function setAccessPolicy(aborter: Aborter, queueAcl?:
        ISignedIdentifier[])
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: queueAcl
          type:
            - '@azure/storage-queue.ISignedIdentifier[]'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueSetAccessPolicyResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.setMetadata'
    name: 'setMetadata(Aborter, IMetadata)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets one or more user-defined name-value pairs for the specified queue.

      If no option provided, or no metadata defined in the option parameter, the
      queue

      metadata will be removed.
    syntax:
      content: 'function setMetadata(aborter: Aborter, metadata?: IMetadata)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: metadata
          type:
            - '@azure/storage-queue.IMetadata'
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueSetMetadataResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.QueueURL.withPipeline'
    name: withPipeline(Pipeline)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new QueueURL object identical to the source but with the
      specified request policy pipeline.
    syntax:
      content: 'function withPipeline(pipeline: Pipeline)'
      parameters:
        - id: pipeline
          type:
            - '@azure/storage-queue.Pipeline'
          description: ''
      return:
        type:
          - '@azure/storage-queue.QueueURL'
        description: ''
    package: '@azure/storage-queue'
references:
  - uid: '@azure/storage-queue.StorageURL'
    name: StorageURL
    spec.typeScript:
      - name: StorageURL
        fullName: StorageURL
        uid: '@azure/storage-queue.StorageURL'
  - uid: '@azure/storage-queue.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-queue.Pipeline'
  - uid: '@azure/storage-queue.Aborter'
    name: Aborter
    spec.typeScript:
      - name: Aborter
        fullName: Aborter
        uid: '@azure/storage-queue.Aborter'
  - uid: '@azure/storage-queue.IQueueCreateOptions'
    name: IQueueCreateOptions
    spec.typeScript:
      - name: IQueueCreateOptions
        fullName: IQueueCreateOptions
        uid: '@azure/storage-queue.IQueueCreateOptions'
  - uid: Promise<@azure/storage-queue.QueueGetAccessPolicyResponse>
    name: QueueGetAccessPolicyResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: QueueGetAccessPolicyResponse
        fullName: QueueGetAccessPolicyResponse
        uid: '@azure/storage-queue.QueueGetAccessPolicyResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.ISignedIdentifier[]'
    name: 'ISignedIdentifier[]'
    spec.typeScript:
      - name: ISignedIdentifier
        fullName: ISignedIdentifier
        uid: '@azure/storage-queue.ISignedIdentifier'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/storage-queue.IMetadata'
    name: IMetadata
    spec.typeScript:
      - name: IMetadata
        fullName: IMetadata
        uid: '@azure/storage-queue.IMetadata'
  - uid: '@azure/storage-queue.QueueURL'
    name: QueueURL
    spec.typeScript:
      - name: QueueURL
        fullName: QueueURL
        uid: '@azure/storage-queue.QueueURL'
  - uid: '@azure/storage-queue.ServiceURL'
    name: ServiceURL
    spec.typeScript:
      - name: ServiceURL
        fullName: ServiceURL
        uid: '@azure/storage-queue.ServiceURL'
  - uid: '@azure/storage-queue.Credential'
    name: Credential
    spec.typeScript:
      - name: Credential
        fullName: Credential
        uid: '@azure/storage-queue.Credential'
  - uid: '@azure/storage-queue.INewPipelineOptions'
    name: INewPipelineOptions
    spec.typeScript:
      - name: INewPipelineOptions
        fullName: INewPipelineOptions
        uid: '@azure/storage-queue.INewPipelineOptions'
