### YamlMime:TSType
name: Queue
uid: '@azure/storage-queue.Queue'
package: '@azure/storage-queue'
summary: Class representing a Queue.
fullName: Queue
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Queue(StorageClientContext)
    uid: '@azure/storage-queue.Queue.constructor'
    package: '@azure/storage-queue'
    summary: Create a Queue.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Queue(client: StorageClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/storage-queue.StorageClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: create(Models.QueueCreateOptionalParams)
    uid: '@azure/storage-queue.Queue.create'
    package: '@azure/storage-queue'
    summary: creates a new queue under the given account.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function create(options?: Models.QueueCreateOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.QueueCreateOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QueueCreateResponse" />&gt;
        description: Promise<Models.QueueCreateResponse>
  - name: 'create(QueueCreateOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-queue.Queue.create_2'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function create(options: QueueCreateOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-queue.QueueCreateOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: create(ServiceCallback<void>)
    uid: '@azure/storage-queue.Queue.create_1'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function create(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteMethod(Models.QueueDeleteMethodOptionalParams)
    uid: '@azure/storage-queue.Queue.deleteMethod'
    package: '@azure/storage-queue'
    summary: operation permanently deletes the specified queue
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteMethod(options?: Models.QueueDeleteMethodOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.QueueDeleteMethodOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QueueDeleteResponse" />&gt;
        description: Promise<Models.QueueDeleteResponse>
  - name: 'deleteMethod(QueueDeleteMethodOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-queue.Queue.deleteMethod_2'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(options: QueueDeleteMethodOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-queue.QueueDeleteMethodOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: deleteMethod(ServiceCallback<void>)
    uid: '@azure/storage-queue.Queue.deleteMethod_1'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteMethod(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getAccessPolicy(Models.QueueGetAccessPolicyOptionalParams)
    uid: '@azure/storage-queue.Queue.getAccessPolicy'
    package: '@azure/storage-queue'
    summary: >-
      returns details about any stored access policies specified on the queue
      that may be used with

      Shared Access Signatures.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAccessPolicy(options?:
        Models.QueueGetAccessPolicyOptionalParams)
      parameters:
        - id: options
          type: <xref uid="Models.QueueGetAccessPolicyOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QueueGetAccessPolicyResponse" />&gt;
        description: Promise<Models.QueueGetAccessPolicyResponse>
  - name: >-
      getAccessPolicy(QueueGetAccessPolicyOptionalParams,
      ServiceCallback<SignedIdentifier[]>)
    uid: '@azure/storage-queue.Queue.getAccessPolicy_2'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAccessPolicy(options: QueueGetAccessPolicyOptionalParams,
        callback: ServiceCallback<SignedIdentifier[]>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-queue.QueueGetAccessPolicyOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/storage-queue.SignedIdentifier"
            />[]&gt;
          description: |
            The callback
  - name: 'getAccessPolicy(ServiceCallback<SignedIdentifier[]>)'
    uid: '@azure/storage-queue.Queue.getAccessPolicy_1'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAccessPolicy(callback: ServiceCallback<SignedIdentifier[]>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/storage-queue.SignedIdentifier"
            />[]&gt;
          description: |
            The callback
  - name: getProperties(Models.QueueGetPropertiesOptionalParams)
    uid: '@azure/storage-queue.Queue.getProperties'
    package: '@azure/storage-queue'
    summary: >-
      Retrieves user-defined metadata and queue properties on the specified
      queue. Metadata is

      associated with the queue as name-values pairs.
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options?:
        Models.QueueGetPropertiesOptionalParams)
      parameters:
        - id: options
          type: <xref uid="Models.QueueGetPropertiesOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QueueGetPropertiesResponse" />&gt;
        description: Promise<Models.QueueGetPropertiesResponse>
  - name: 'getProperties(QueueGetPropertiesOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-queue.Queue.getProperties_2'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getProperties(options: QueueGetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-queue.QueueGetPropertiesOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: getProperties(ServiceCallback<void>)
    uid: '@azure/storage-queue.Queue.getProperties_1'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProperties(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setAccessPolicy(Models.QueueSetAccessPolicyOptionalParams)
    uid: '@azure/storage-queue.Queue.setAccessPolicy'
    package: '@azure/storage-queue'
    summary: >-
      sets stored access policies for the queue that may be used with Shared
      Access Signatures
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setAccessPolicy(options?:
        Models.QueueSetAccessPolicyOptionalParams)
      parameters:
        - id: options
          type: <xref uid="Models.QueueSetAccessPolicyOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QueueSetAccessPolicyResponse" />&gt;
        description: Promise<Models.QueueSetAccessPolicyResponse>
  - name: 'setAccessPolicy(QueueSetAccessPolicyOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-queue.Queue.setAccessPolicy_2'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setAccessPolicy(options: QueueSetAccessPolicyOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/storage-queue.QueueSetAccessPolicyOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setAccessPolicy(ServiceCallback<void>)
    uid: '@azure/storage-queue.Queue.setAccessPolicy_1'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setAccessPolicy(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setMetadata(Models.QueueSetMetadataOptionalParams)
    uid: '@azure/storage-queue.Queue.setMetadata'
    package: '@azure/storage-queue'
    summary: >-
      sets user-defined metadata on the specified queue. Metadata is associated
      with the queue as

      name-value pairs.
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMetadata(options?: Models.QueueSetMetadataOptionalParams)'
      parameters:
        - id: options
          type: <xref uid="Models.QueueSetMetadataOptionalParams" />
          description: ''
      return:
        type: Promise&lt;<xref uid="Models.QueueSetMetadataResponse" />&gt;
        description: Promise<Models.QueueSetMetadataResponse>
  - name: 'setMetadata(QueueSetMetadataOptionalParams, ServiceCallback<void>)'
    uid: '@azure/storage-queue.Queue.setMetadata_2'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(options: QueueSetMetadataOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type: <xref uid="@azure/storage-queue.QueueSetMetadataOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: setMetadata(ServiceCallback<void>)
    uid: '@azure/storage-queue.Queue.setMetadata_1'
    package: '@azure/storage-queue'
    summary: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setMetadata(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
