### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-queue.MessagesURL'
    name: MessagesURL
    fullName: MessagesURL
    children:
      - '@azure/storage-queue.MessagesURL.clear'
      - '@azure/storage-queue.MessagesURL.dequeue'
      - '@azure/storage-queue.MessagesURL.enqueue'
      - '@azure/storage-queue.MessagesURL.fromQueueURL'
      - '@azure/storage-queue.MessagesURL.constructor'
      - '@azure/storage-queue.MessagesURL.newPipeline'
      - '@azure/storage-queue.MessagesURL.peek'
      - '@azure/storage-queue.MessagesURL.pipeline'
      - '@azure/storage-queue.MessagesURL.url'
      - '@azure/storage-queue.MessagesURL.withPipeline'
    langs:
      - typeScript
    type: class
    summary: >-
      A MessagesURL represents a URL to an Azure Storage Queue's messages
      allowing you to manipulate its messages.
    extends:
      name: '@azure/storage-queue.StorageURL'
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.clear'
    name: clear(Aborter)
    children: []
    type: method
    langs:
      - typeScript
    summary: Clear deletes all messages from a queue.
    syntax:
      content: 'function clear(aborter: Aborter)'
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
      return:
        type:
          - Promise<Models.MessagesClearResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.dequeue'
    name: 'dequeue(Aborter, Models.MessagesDequeueOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Dequeue retrieves one or more messages from the front of the queue.
    syntax:
      content: >-
        function dequeue(aborter: Aborter, options?:
        Models.MessagesDequeueOptionalParams)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: options
          type:
            - Models.MessagesDequeueOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.MessagesDequeueResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.enqueue'
    name: 'enqueue(Aborter, string, Models.MessagesEnqueueOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Enqueue adds a new message to the back of a queue. The visibility timeout
      specifies how long

      the message should be invisible to Dequeue and Peek operations.

      The message content is up to 64KB in size, and must be in a format that
      can be included in an XML request with UTF-8 encoding.

      To include markup in the message, the contents of the message must either
      be XML-escaped or Base64-encode.
    syntax:
      content: >-
        function enqueue(aborter: Aborter, messageText: string, options?:
        Models.MessagesEnqueueOptionalParams)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: messageText
          type:
            - string
          description: ''
        - id: options
          type:
            - Models.MessagesEnqueueOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.MessagesEnqueueResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.fromQueueURL'
    name: fromQueueURL(QueueURL)
    children: []
    type: method
    langs:
      - typeScript
    summary: Creates a MessagesURL object from QueueURL
    syntax:
      content: 'static function fromQueueURL(queueURL: QueueURL)'
      parameters:
        - id: queueURL
          type:
            - '@azure/storage-queue.QueueURL'
          description: ''
      return:
        type:
          - '@azure/storage-queue.MessagesURL'
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.constructor'
    name: 'MessagesURL(string, Pipeline)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates an instance of MessagesURL.
    syntax:
      content: 'new MessagesURL(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type:
            - string
          description: |-
            A URL string pointing to Azure Storage queue's messages, such as
                                "https://myaccount.queue.core.windows.net/myqueue/messages". You can
                                append a SAS if using AnonymousCredential, such as
                                "https://myaccount.queue.core.windows.net/myqueue/messages?sasString".
        - id: pipeline
          type:
            - '@azure/storage-queue.Pipeline'
          description: |-
            Call StorageURL.newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.newPipeline'
    name: 'newPipeline(Credential, INewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      A static method used to create a new Pipeline object with Credential
      provided.
    syntax:
      content: >-
        static function newPipeline(credential: Credential, pipelineOptions?:
        INewPipelineOptions)
      parameters:
        - id: credential
          type:
            - '@azure/storage-queue.Credential'
          description: 'Such as AnonymousCredential, SharedKeyCredential or TokenCredential.'
        - id: pipelineOptions
          type:
            - '@azure/storage-queue.INewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - '@azure/storage-queue.Pipeline'
        description: A new Pipeline object.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.peek'
    name: 'peek(Aborter, Models.MessagesPeekOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Peek retrieves one or more messages from the front of the queue but does
      not alter the visibility of the message.
    syntax:
      content: >-
        function peek(aborter: Aborter, options?:
        Models.MessagesPeekOptionalParams)
      parameters:
        - id: aborter
          type:
            - '@azure/storage-queue.Aborter'
          description: >-
            Create a new Aborter instance with Aborter.none or
            Aborter.timeout(),
                                     goto documents of Aborter for more examples about request cancellation
        - id: options
          type:
            - Models.MessagesPeekOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/storage-queue.MessagesPeekResponse>
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: Request policy pipeline.
    syntax:
      content: 'pipeline: Pipeline'
      return:
        type:
          - '@azure/storage-queue.Pipeline'
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.url'
    name: url
    fullName: url
    children: []
    langs:
      - typeScript
    type: property
    summary: URL string value.
    syntax:
      content: 'url: string'
      return:
        type:
          - string
        description: ''
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.MessagesURL.withPipeline'
    name: withPipeline(Pipeline)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Creates a new MessagesURL object identical to the source but with the
      specified request policy pipeline.
    syntax:
      content: 'function withPipeline(pipeline: Pipeline)'
      parameters:
        - id: pipeline
          type:
            - '@azure/storage-queue.Pipeline'
          description: ''
      return:
        type:
          - '@azure/storage-queue.MessagesURL'
        description: ''
    package: '@azure/storage-queue'
references:
  - uid: '@azure/storage-queue.StorageURL'
    name: StorageURL
    spec.typeScript:
      - name: StorageURL
        fullName: StorageURL
        uid: '@azure/storage-queue.StorageURL'
  - uid: '@azure/storage-queue.Pipeline'
    name: Pipeline
    spec.typeScript:
      - name: Pipeline
        fullName: Pipeline
        uid: '@azure/storage-queue.Pipeline'
  - uid: '@azure/storage-queue.Aborter'
    name: Aborter
    spec.typeScript:
      - name: Aborter
        fullName: Aborter
        uid: '@azure/storage-queue.Aborter'
  - uid: Promise<@azure/storage-queue.MessagesDequeueResponse>
    name: MessagesDequeueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: MessagesDequeueResponse
        fullName: MessagesDequeueResponse
        uid: '@azure/storage-queue.MessagesDequeueResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/storage-queue.MessagesEnqueueResponse>
    name: MessagesEnqueueResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: MessagesEnqueueResponse
        fullName: MessagesEnqueueResponse
        uid: '@azure/storage-queue.MessagesEnqueueResponse'
      - name: '>'
        fullName: '>'
  - uid: Promise<@azure/storage-queue.MessagesPeekResponse>
    name: MessagesPeekResponse>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: MessagesPeekResponse
        fullName: MessagesPeekResponse
        uid: '@azure/storage-queue.MessagesPeekResponse'
      - name: '>'
        fullName: '>'
  - uid: '@azure/storage-queue.MessagesURL'
    name: MessagesURL
    spec.typeScript:
      - name: MessagesURL
        fullName: MessagesURL
        uid: '@azure/storage-queue.MessagesURL'
  - uid: '@azure/storage-queue.QueueURL'
    name: QueueURL
    spec.typeScript:
      - name: QueueURL
        fullName: QueueURL
        uid: '@azure/storage-queue.QueueURL'
  - uid: '@azure/storage-queue.Credential'
    name: Credential
    spec.typeScript:
      - name: Credential
        fullName: Credential
        uid: '@azure/storage-queue.Credential'
  - uid: '@azure/storage-queue.INewPipelineOptions'
    name: INewPipelineOptions
    spec.typeScript:
      - name: INewPipelineOptions
        fullName: INewPipelineOptions
        uid: '@azure/storage-queue.INewPipelineOptions'
