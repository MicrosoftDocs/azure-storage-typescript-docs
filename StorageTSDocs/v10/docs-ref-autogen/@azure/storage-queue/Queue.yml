### YamlMime:UniversalReference
items:
  - uid: '@azure/storage-queue.Queue'
    name: Queue
    fullName: Queue
    children:
      - '@azure/storage-queue.Queue.create'
      - '@azure/storage-queue.Queue.create_2'
      - '@azure/storage-queue.Queue.create_1'
      - '@azure/storage-queue.Queue.deleteMethod'
      - '@azure/storage-queue.Queue.deleteMethod_2'
      - '@azure/storage-queue.Queue.deleteMethod_1'
      - '@azure/storage-queue.Queue.getAccessPolicy'
      - '@azure/storage-queue.Queue.getAccessPolicy_2'
      - '@azure/storage-queue.Queue.getAccessPolicy_1'
      - '@azure/storage-queue.Queue.getProperties'
      - '@azure/storage-queue.Queue.getProperties_2'
      - '@azure/storage-queue.Queue.getProperties_1'
      - '@azure/storage-queue.Queue.constructor'
      - '@azure/storage-queue.Queue.setAccessPolicy'
      - '@azure/storage-queue.Queue.setAccessPolicy_2'
      - '@azure/storage-queue.Queue.setAccessPolicy_1'
      - '@azure/storage-queue.Queue.setMetadata'
      - '@azure/storage-queue.Queue.setMetadata_2'
      - '@azure/storage-queue.Queue.setMetadata_1'
    langs:
      - typeScript
    type: class
    summary: Class representing a Queue.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.create'
    name: create(Models.QueueCreateOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: creates a new queue under the given account.
    syntax:
      content: 'function create(options?: Models.QueueCreateOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.QueueCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueCreateResponse>
        description: Promise<Models.QueueCreateResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.create_2'
    name: 'create(QueueCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function create(options: QueueCreateOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueCreateOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.create_1'
    name: create(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.deleteMethod'
    name: deleteMethod(Models.QueueDeleteMethodOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: operation permanently deletes the specified queue
    syntax:
      content: 'function deleteMethod(options?: Models.QueueDeleteMethodOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.QueueDeleteMethodOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueDeleteResponse>
        description: Promise<Models.QueueDeleteResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.deleteMethod_2'
    name: 'deleteMethod(QueueDeleteMethodOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function deleteMethod(options: QueueDeleteMethodOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueDeleteMethodOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.deleteMethod_1'
    name: deleteMethod(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.getAccessPolicy'
    name: getAccessPolicy(Models.QueueGetAccessPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      returns details about any stored access policies specified on the queue
      that may be used with

      Shared Access Signatures.
    syntax:
      content: >-
        function getAccessPolicy(options?:
        Models.QueueGetAccessPolicyOptionalParams)
      parameters:
        - id: options
          type:
            - Models.QueueGetAccessPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueGetAccessPolicyResponse>
        description: Promise<Models.QueueGetAccessPolicyResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.getAccessPolicy_2'
    name: >-
      getAccessPolicy(QueueGetAccessPolicyOptionalParams,
      ServiceCallback<SignedIdentifier[]>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getAccessPolicy(options: QueueGetAccessPolicyOptionalParams,
        callback: ServiceCallback<SignedIdentifier[]>)
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueGetAccessPolicyOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - 'ServiceCallback<@azure/storage-queue.SignedIdentifier[]>'
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.getAccessPolicy_1'
    name: 'getAccessPolicy(ServiceCallback<SignedIdentifier[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getAccessPolicy(callback: ServiceCallback<SignedIdentifier[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/storage-queue.SignedIdentifier[]>'
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.getProperties'
    name: getProperties(Models.QueueGetPropertiesOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Retrieves user-defined metadata and queue properties on the specified
      queue. Metadata is

      associated with the queue as name-values pairs.
    syntax:
      content: >-
        function getProperties(options?:
        Models.QueueGetPropertiesOptionalParams)
      parameters:
        - id: options
          type:
            - Models.QueueGetPropertiesOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueGetPropertiesResponse>
        description: Promise<Models.QueueGetPropertiesResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.getProperties_2'
    name: 'getProperties(QueueGetPropertiesOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getProperties(options: QueueGetPropertiesOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueGetPropertiesOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.getProperties_1'
    name: getProperties(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getProperties(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.constructor'
    name: Queue(StorageClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Create a Queue.
    syntax:
      content: 'new Queue(client: StorageClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/storage-queue.StorageClientContext'
          description: |
            Reference to the service client.
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.setAccessPolicy'
    name: setAccessPolicy(Models.QueueSetAccessPolicyOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      sets stored access policies for the queue that may be used with Shared
      Access Signatures
    syntax:
      content: >-
        function setAccessPolicy(options?:
        Models.QueueSetAccessPolicyOptionalParams)
      parameters:
        - id: options
          type:
            - Models.QueueSetAccessPolicyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueSetAccessPolicyResponse>
        description: Promise<Models.QueueSetAccessPolicyResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.setAccessPolicy_2'
    name: 'setAccessPolicy(QueueSetAccessPolicyOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setAccessPolicy(options: QueueSetAccessPolicyOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueSetAccessPolicyOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.setAccessPolicy_1'
    name: setAccessPolicy(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setAccessPolicy(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.setMetadata'
    name: setMetadata(Models.QueueSetMetadataOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      sets user-defined metadata on the specified queue. Metadata is associated
      with the queue as

      name-value pairs.
    syntax:
      content: 'function setMetadata(options?: Models.QueueSetMetadataOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.QueueSetMetadataOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.QueueSetMetadataResponse>
        description: Promise<Models.QueueSetMetadataResponse>
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.setMetadata_2'
    name: 'setMetadata(QueueSetMetadataOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function setMetadata(options: QueueSetMetadataOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: options
          type:
            - '@azure/storage-queue.QueueSetMetadataOptionalParams'
          description: The optional parameters
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
  - uid: '@azure/storage-queue.Queue.setMetadata_1'
    name: setMetadata(ServiceCallback<void>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMetadata(callback: ServiceCallback<void>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            The callback
    package: '@azure/storage-queue'
references:
  - uid: '@azure/storage-queue.StorageClientContext'
    name: StorageClientContext
    spec.typeScript:
      - name: StorageClientContext
        fullName: StorageClientContext
        uid: '@azure/storage-queue.StorageClientContext'
  - uid: '@azure/storage-queue.QueueCreateOptionalParams'
    name: QueueCreateOptionalParams
    spec.typeScript:
      - name: QueueCreateOptionalParams
        fullName: QueueCreateOptionalParams
        uid: '@azure/storage-queue.QueueCreateOptionalParams'
  - uid: '@azure/storage-queue.QueueDeleteMethodOptionalParams'
    name: QueueDeleteMethodOptionalParams
    spec.typeScript:
      - name: QueueDeleteMethodOptionalParams
        fullName: QueueDeleteMethodOptionalParams
        uid: '@azure/storage-queue.QueueDeleteMethodOptionalParams'
  - uid: 'ServiceCallback<@azure/storage-queue.SignedIdentifier[]>'
    name: 'SignedIdentifier[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SignedIdentifier
        fullName: SignedIdentifier
        uid: '@azure/storage-queue.SignedIdentifier'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/storage-queue.QueueGetAccessPolicyOptionalParams'
    name: QueueGetAccessPolicyOptionalParams
    spec.typeScript:
      - name: QueueGetAccessPolicyOptionalParams
        fullName: QueueGetAccessPolicyOptionalParams
        uid: '@azure/storage-queue.QueueGetAccessPolicyOptionalParams'
  - uid: '@azure/storage-queue.QueueGetPropertiesOptionalParams'
    name: QueueGetPropertiesOptionalParams
    spec.typeScript:
      - name: QueueGetPropertiesOptionalParams
        fullName: QueueGetPropertiesOptionalParams
        uid: '@azure/storage-queue.QueueGetPropertiesOptionalParams'
  - uid: '@azure/storage-queue.QueueSetAccessPolicyOptionalParams'
    name: QueueSetAccessPolicyOptionalParams
    spec.typeScript:
      - name: QueueSetAccessPolicyOptionalParams
        fullName: QueueSetAccessPolicyOptionalParams
        uid: '@azure/storage-queue.QueueSetAccessPolicyOptionalParams'
  - uid: '@azure/storage-queue.QueueSetMetadataOptionalParams'
    name: QueueSetMetadataOptionalParams
    spec.typeScript:
      - name: QueueSetMetadataOptionalParams
        fullName: QueueSetMetadataOptionalParams
        uid: '@azure/storage-queue.QueueSetMetadataOptionalParams'
